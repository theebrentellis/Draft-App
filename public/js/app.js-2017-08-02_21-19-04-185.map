{"version":3,"sources":["app.js","controllers/AppController.js","controllers/ChatController.js","controllers/PlayerController.js","factories/ChatFactory.js","factories/DraftFactory.js","factories/LeagueFactory.js","factories/UserFactory.js","services/AuthenticationService.js","services/DraftService.js","services/LeagueService.js","controllers/dashboard/DashboardController.js","controllers/draft/DraftController.js","controllers/league/LeagueCommishController.js","controllers/league/LeagueController.js","controllers/league/LeagueJoinController.js","controllers/league/LeagueNewController.js","controllers/user/UserLoginController.js","controllers/user/UserRegisterController.js","controllers/user/UserSettingsController.js"],"names":["DraftApp","angular","module","config","$urlRouterProvider","otherwise","$stateProvider","state","url","templateProvider","views","content","controller","$templateCache","controllerAs","get","authenticate","header","league","LeagueService","resolve","$stateParams","run","onStart","trans","transitionTo","isLoggedIn","$transitions","$location","$state","$q","AuthenticationService","getLoginStatus","response","AuthService","DraftService","vm","this","then","error","console","log","currentUser","downloadPlayers","data","deleteAllPlayers","logOut","directive","$scope","element","attrs","bind","event","which","$apply","$eval","ngEnter","preventDefault","ChatFactory","currentLeague","messages","message","filterText","socket","io","connect","on","reverse","unshift","sendMessage","postMessage","result","err","window","alert","$confirm","$timeout","DraftFactory","available_players","allDraftedPlayers","setColorOnClock","team","onClock","_id","font-weight","getPlayers","position","startDraft","id","draftPackage","draftId","draft","draftOrder","draftPlayer","isOnClock","leagueId","pick","path","checkBox","value","getDraftedPlayers","factory","$http","callback","post","success","status","deleteAllChat","newDraftObject","leagueID","getDraft","draftID","params","output","draftPick","player_id","createLeague","newLeagueInfo","joinLeague","leaguePack","patch","getLeague","newLeagueMessage","messagePack","updateTeamPick","pickPack","deleteLeagueTeam","getUserLeagues","user_id","register","registerInfo","login","loginInfo","service","$window","$rootScope","UserFactory","tokenStorage","setToken","key","token","Promise","localStorage","setItem","getToken","getItem","removeToken","removeItem","payload","split","atob","JSON","parse","exp","Date","now","userName","firstName","email","leagues","updateToken","user","reponse","clear","$new","x","teams","length","draftField","size","forEach","_user","push","_loop","joinDraft","statusText","LeagueFactory","defer","createNewLeague","joinPac","currentLeagues","availablePlayers","currentDraft","draftSort","players","field","sortedDraft","sorted","counter","y","picks","_player","p","displayName","createPicksList","isCommish","userID","commish","leagueField","title","currentTeams","index","splice","onDrop","srcList","srcIndex","targetList","targetIndex","updatePick","reload","deleteTeam","team_id","$uibModal","newMessage","modalInstance","open","animation","templateUrl","scope","backdrop","cancel","dismiss","dismissError","code","league_code","moveFocus","nextId","$","focus","messsage","leagueName","newLeague","leagueSize","password","onSignIn","googleUser","profile","getBasicProfile","getEmail","registerNew","tab","setTab","tabId","isSet"],"mappings":"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","file":"app.js","sourcesContent":["let DraftApp = angular.module(\"DraftApp\", [\"ngRoute\", \"ngMessages\", \"ngAnimate\",\n    \"ui.router\", \"ui.bootstrap\", \"dndLists\", \"angular-confirm\",\n    \"AppController\", \"ChatController\", \"DashboardController\", \"LeagueController\", \"LeagueCommishController\", \"LeagueJoinController\", \"LeagueNewController\", \"PlayerController\", \"UserSettingsController\", \"UserLoginController\", \"UserRegisterController\", \"DraftController\",\n    \"AuthenticationService\", \"DraftService\", \"LeagueService\",\n    \"ChatFactory\", \"DraftFactory\", \"LeagueFactory\", \"UserFactory\"]);\n\nangular.module('DraftApp').config(function ($stateProvider, $urlRouterProvider) {\n\n    $urlRouterProvider.otherwise(\"/\");\n\n    $stateProvider\n        .state(\"index\", {\n            url: \"/\",\n            views: {\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('welcome.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        })\n        .state(\"login\", {\n            url: \"/login\",\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: \"vm\",\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('auth/login.html');\n                    },\n                    controller: \"UserLoginController\",\n                    controllerAs: \"vm\"\n                },\n            }\n        })\n        .state('register', {\n            url: \"/register\",\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: 'vm'\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('auth/register.html');\n                    },\n                    controller: \"UserRegisterController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        })\n        .state(\"settings\", {\n            url: \"/settings\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: 'vm',\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('auth/settings.html');\n                    },\n                    controller: \"UserSettingsController\",\n                    controllerAs: \"vm\",\n                }\n            }\n        })\n        .state(\"dashboard\", {\n            url: \"/dashboard\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: 'vm',\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('dashboard.html');\n                    },\n                    controller: \"DashboardController\",\n                    controllerAs: \"vm\",\n                }\n            }\n        })\n        .state('newLeague', {\n            url: \"/league/new\",\n            authenticate: true,\n            views: {\n                'header': {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: 'vm'\n                },\n                'content': {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('league/league.new.html');\n                    },\n                    controller: \"LeagueNewController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        })\n        .state('joinLeague', {\n            url: \"/league/join\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: 'vm'\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('league/league.join.html');\n                    },\n                    controller: \"LeagueJoinController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        })\n        .state('league', {\n            url: \"/league/:leagueID/index\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: 'vm'\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('league/league.index.html');\n                    },\n                    controller: \"LeagueController\",\n                    controllerAs: \"vm\",\n                    resolve: {\n                        league: function(LeagueService, $stateParams) {\n                            return LeagueService.get();\n                        }\n                    }\n                }\n            }\n        })\n        .state('leagueCommish', {\n            url: \"/league/:leagueID/commish\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: 'vm'\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('league/league.commish.html');\n                    },\n                    controller: \"LeagueCommishController\",\n                    controllerAs: \"vm\",\n                    // resolve: {\n                    //     league: (LeagueService, $stateParams) => {\n                    //         console.log($stateParams)\n                    //         // let theLeague = LeagueService.getLeague();\n                    //         // theLeague.then((response) => {\n\n                    //         // }, (error) => {\n                    //         //     console.log(error);\n                    //         // });\n                    //     }\n                    // }\n                }\n            }\n        })\n        .state(\"draft\", {\n            url: \"/league/:leagueID/draft/:draftID/index\",\n            // authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: \"vm\"\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('draft/draft.index.html');\n                    },\n                    controller: \"DraftController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        })\n        .state(\"availablePlayers\", {\n            url: \"/availablePlayers\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: \"vm\",\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('availablePlayers.html');\n                    },\n                    controller: \"PlayerController\",\n                    controllerAs: \"vm\",\n                }\n            }\n        })\n        .state(\"chat\", {\n            url: \"/chat\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: \"vm\"\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('chat.html');\n                    },\n                    controller: \"ChatController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        });\n});\n\nangular.module('DraftApp').run(function ($transitions, $location, $state, $q, AuthenticationService) {\n    $transitions.onStart({ to: '*' }, function (trans) {\n        let AuthService = trans.injector().get('AuthenticationService');\n        if (trans.to().authenticate && !AuthService.isLoggedIn()) {\n            $state.transitionTo('login');\n        }\n    });\n});","angular.module('AppController', []).controller('AppController', function (AuthenticationService, DraftService, LeagueService) {\n\n  let vm = this;\n  \n  vm.isLoggedIn = false;\n  let getLoginStatus = AuthenticationService.isLoggedIn();\n  getLoginStatus.then((response) => {\n    if (response == true) {\n      vm.isLoggedIn = true;\n    }\n    if (response == false) {\n      vm.isLoggedIn = false;\n    }\n  }, (error) => {\n    console.log(error);\n  });\n      \n  vm.currentUser = {};\n  let getCurrentUser = AuthenticationService.currentUser();\n  getCurrentUser.then((response) => {\n    vm.currentUser = response;\n  }, (error) => {\n    console.log(error);\n  });\n\n  \n    vm.downloadPlayers = function(){\n      DraftService.downloadPlayers(function(data){\n        console.log(data);\n      });\n    };\n  \n    vm.deleteAllPlayers = function(){\n      DraftService.deleteAllPlayers(function(data){\n        console.log(data);\n      });\n    };\n  \n  vm.logOut = () => {\n    AuthenticationService.logOut();\n  };\n});","angular.module('ngEnter', []).directive('ngEnter', function ($scope, element, attrs) {\n\n    element.bind(\"keypress\", function (event) {\n        if (event.which === 13) {\n            $scope.$apply(function () {\n                $scope.$eval(attrs.ngEnter);\n            });\n            event.preventDefault();\n        }\n    });\n});\n\nangular.module('ChatController', []).controller('ChatController', function ($scope, AuthenticationService, LeagueService, ChatFactory) {\n\n    var vm = this;\n\n    vm.currentUser = AuthenticationService.currentUser();\n\n    vm.currentLeague = LeagueService.currentLeague();\n\n    vm.messages = [];\n\n    vm.message = \"\";\n    vm.filterText = \"\";\n\n    \n    var socket = io.connect();\n\n    socket.on(\"pastMessages\", function (data) {\n        $scope.$apply(function(){\n            vm.messages = data.reverse();\n        });\n    });\n\n    socket.on(\"receiveMessage\", function(data){\n        $scope.$apply(function(){\n            vm.messages.unshift(data);\n        });\n    });\n\n    vm.sendMessage = function () {\n        // var chatMessage = {\n        //     \"_id\": vm.currentLeague.chat._id,\n        //     \"userName\": vm.currentUser.firstName,\n        //     \"message\": vm.message\n        // };\n        LeagueService.postMessage(vm.message, function (result, err) {\n            if (err) {\n                window.alert(\"Error!\");\n            }\n            // else{\n            //     socket.emit(\"receiveMessage\", result);\n            //     vm.message = \"\";\n            // }\n        });\n    };\n});","angular.module('PlayerController', []).controller('PlayerController', function ($scope, $location, $confirm, $timeout, $q, DraftFactory, AuthenticationService, DraftService, LeagueService) {\n\n  var vm = this;\n\n  vm.available_players = [];\n\n  vm.allDraftedPlayers = [];\n\n  vm.message = \"\";\n\n  vm.currentUser = AuthenticationService.currentUser();\n\n  vm.currentLeague = LeagueService.currentLeague();\n\n  vm.setColorOnClock = function(team){\n      if(vm.currentLeague.onClock === team._id){\n        return {\"font-weight\": \"bold\"};\n      }\n  };\n\n  vm.getPlayers = function (position) {\n    DraftFactory.getPlayers(position, function (data) {\n      vm.available_players = data;\n    });\n  };\n\n  vm.startDraft = function(id){\n    var draftPackage = {\n      draftId: vm.currentLeague.draft._id,\n      draftOrder: vm.currentLeague.draftOrder\n\n    };\n    return DraftService.startDraft(draftPackage)\n      .then(function(response){\n        console.log(response);\n      }, function(error){\n        console.log(error);\n      });\n  };\n\n  vm.draftPlayer = function (id) {\n    if(DraftService.isOnClock() === true){\n\n      var draftPackage = {\n        draftId: vm.currentLeague.draft._id,\n        leagueId: vm.currentLeague._id,\n        team: vm.currentUser._id,\n        pick: id,\n      };\n      \n      return DraftService.draftPlayer(draftPackage)\n        .then(function(response){\n          console.log(response);\n          if(response === true){\n            $location.path(\"/draftBoard\");\n          }\n          if(response === false){\n            console.log(\"Error in PlayerControiller draftPlayer\");\n          }\n        }, function(error){\n          console.log(error);\n        });\n    }\n    if(DraftService.isOnClock() === false){\n      vm.message = \"You Are Not On The Clock!\";\n      vm.checkBox.value = false;\n      $timeout(function(){\n        vm.message = false;\n      }, 5000);\n    }\n  };\n\n  var getDraftedPlayers = function () {\n    DraftFactory.getDraftedPlayers(function (data) {\n      vm.allDraftedPlayers = data;\n    });\n  };\n  getDraftedPlayers();\n});\n","angular.module(\"ChatFactory\", []).factory(\"ChatFactory\", function($http){\n\n    var factory = {};\n\n    factory.postMessage = function(message, callback){\n        $http.post(\"/message\", message).success(function(data, status){\n            callback(data, false);\n        })\n        .error(function(data, status){\n            callback(data, true);\n        });\n    };\n\n    factory.deleteAllChat = function(){\n        $http.post(\"/deleteAllChat\").success(function(data){\n            console.log(data);\n        });\n    };\n\n    return factory;\n});","angular.module(\"DraftFactory\", []).factory(\"DraftFactory\", function($http, $stateParams){\n    var factory = {};\n\n    factory.startDraft = (newDraftObject) => {\n        return $http.post(\"/league/\" + $stateParams.leagueID + \"/draft/new\", newDraftObject)\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n    \n    factory.getDraft = () => {\n        return $http.get(\"/league/\" + $stateParams.leagueID + \"/draft/\" + $stateParams.draftID + \"/get\")\n    };\n\n    factory.downloadPlayers = () => {\n        return $http.post(\"/downloadPlayers\").then((response)=>{\n            console.log(response);\n        }, (error) => {\n            console.log(error);\n        });\n    };\n\n    factory.getPlayers = function(position, callback){\n        $http.get(\"/getPlayers/\", {params: {position: position}}).success(function(output){\n            callback(output);\n        });\n    };\n\n    factory.deleteAllPlayers = function(callback){\n        $http.post(\"/deleteAllPlayers\").success(function(data){\n            callback(data);\n        });\n    };\n\n    factory.draftPlayer = function (draftPick) {\n        console.log($stateParams);\n        console.log(draftPick);\n        return $http.post(\"/league/\" + $stateParams.leagueID + \"/draft/\" + $stateParams.draftID + \"/position/\" + draftPick.position + \"/player/\" + draftPick.player_id)\n            .then(function(response){\n                return response;\n            }, function(error){\n                console.log(error);\n            });\n    };\n\n    factory.getDraftedPlayers = function(callback){\n        $http.get(\"/getDraftedPlayers\").success(function(output){\n            callback(output);\n        });\n    };\n\n    return factory;\n});","angular.module(\"LeagueFactory\", []).factory(\"LeagueFactory\", function ($http, $stateParams) {\n    let factory = {};\n\n    factory.createLeague = (newLeagueInfo) => {\n        return $http.post(\"/league/create\", newLeagueInfo)\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    factory.joinLeague = (leaguePack) => {\n        return $http.patch(\"/league/join\", leaguePack)\n            .then(function (response) {\n                return response;\n            }, function (error) {\n                console.log(error);\n            });\n    };\n\n    factory.getLeague = (id) => {\n        return $http.get(\"/getLeague/\", { params: { _id: id } })\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n    \n    factory.newLeagueMessage = (messagePack) => {\n        return $http.post('/league/newMessage', messagePack)\n            .then((response) => {\n                return response\n            }, (error) => {\n                console.log(error);\n            });\n    };\n    \n    factory.updateTeamPick = (pickPack) => {\n        return $http.post('/league/' + $stateParams.leagueID, pickPack)\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n    \n    factory.deleteLeagueTeam = (team) => {\n        console.log(team);\n        return $http.post(\"/league/\" + $stateParams.leagueID + \"/deleteLeagueTeam\", team)\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n    \n    factory.getUserLeagues = (user_id) => {\n        return $http.get('/leagues/user/' + user_id)\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    return factory;\n});","angular.module('UserFactory', []).factory('UserFactory', function ($http) {\n  let factory = {};\n\n  factory.register = (registerInfo) => {\n    return $http.post(\"/register\", registerInfo)\n      .then((response) => {\n        return response;\n      }, (error) => {\n        console.log(error);\n        return error;\n    });\n  };\n\n  factory.login = (loginInfo) => {\n    return $http.post(\"/login\", loginInfo)\n      .then((response) => {\n        return response;\n      }, (error) => {\n        console.log(error);\n        return error;\n      });\n  };\n\n  return factory;\n});","angular.module('AuthenticationService', []).service('AuthenticationService', function ($window, $state, $rootScope, $q, UserFactory) {\n  let service = {};\n\n  const tokenStorage = {\n    setToken: (key, token) => {\n      return Promise.resolve().then(() => {\n        $window.localStorage.setItem(key, token);\n      });\n    },\n    getToken: (key) => {\n      return Promise.resolve().then(() => {\n        return $window.localStorage.getItem(key);\n      });\n    },\n    removeToken: (key) => {\n      return Promise.resolve().then(() => {\n        $window.localStorage.removeItem(key);\n      });\n    }\n  }\n\n  //Is A User Logged In\n  service.isLoggedIn = () => {\n    return tokenStorage.getToken('user-token')\n      .then((token) => {\n        if (token) {\n          let payload = token.split('.')[1];\n          payload = $window.atob(payload);\n          payload = JSON.parse(payload);\n          return payload.exp > Date.now() / 1000;\n        }\n        else {\n          return false;\n        }\n      }, (error) => {\n        console.log(error);\n      });\n  };\n\n  //Return The Current User\n  service.currentUser = function () {\n    return service.isLoggedIn()\n      .then((response) => {\n        if (response) {\n          return tokenStorage.getToken('user-token')\n            .then((token) => {\n              let payload = token.split('.')[1];\n              payload = $window.atob(payload);\n              payload = JSON.parse(payload);\n\n              return {\n                _id: payload._id,\n                userName: payload.userName,\n                firstName: payload.firstName,\n                email: payload.email,\n                leagues: payload.leagues\n              };\n            }, (error) => {\n              console.log(error);\n            });\n        }\n      }, (error) => {\n        console.log(error);\n      });\n  };\n\n  service.updateToken = (token) => {\n    return tokenStorage.removeToken('user-token')\n      .then(() => {\n        return tokenStorage.setToken('user-token', token)\n          .then(() => {\n            return \"Token Set!\";\n          }, (error) => {\n            console.log(error);\n          })\n      }, (error) => {\n        console.log(error);\n      });\n  };\n\n  service.register = function (user, callback) {\n    return UserFactory.register(user)\n      .then((response) => {\n        if (response.data.token) {\n          return tokenStorage.setToken('user-token', response.data.token)\n            .then(() => {\n              return \"Token Set!\";\n            });\n        }\n        else if (response.message) {\n          return reponse.message;\n        }\n        else {\n          return \"Unknown Error\";\n        }\n      }, (error) => {\n        console.log(error);\n      });\n  };\n\n  service.login = (user) => {\n    return UserFactory.login(user)\n      .then((response) => {\n        if (response.data.token) {\n          return tokenStorage.setToken('user-token', response.data.token)\n            .then(() => {\n              return \"Token Set!\"\n            }, (error) => {\n              console.log(error);\n            });\n        }\n        if (response.status == 401) {\n          return \"Incorrect Username or Password!\";\n        }\n        else {\n          return \"Unknown Error!\"\n        }\n      }, (error) => {\n        console.log(error);\n      });\n  };\n\n  service.logOut = () => {\n    $window.localStorage.clear();\n    $rootScope = $rootScope.$new(true);\n  };\n\n  return service;\n});\n","angular.module('DraftService', []).service('DraftService', function ($window, $state, $q, DraftFactory, AuthenticationService, LeagueService) {\n    let service = {};\n\n    service.startDraft = () => {\n\n        //Gets League from LeagueService\n        return LeagueService.getLeague().then((response) => {\n\n            //Checks if any teams have not been assigned a draft pick\n            for (let x = 0; x < response.teams.length; x++) {\n                if (!response.teams[x].pick) {\n                    return { error: \"Please Assign All Picks\" };\n                }\n            }\n            //Sets the field for a new draft\n            let draftField = [];\n            for (let x = 1; x <= response.size; x++) {\n                let position = { position: x };\n                response.teams.forEach((team) => {\n                    if (team.pick == x) {\n                        position._user = team._user._id;\n                    }\n                });\n                draftField.push(position);\n            }\n\n            let newDraftObject = {};\n            newDraftObject.teams = draftField;\n\n            return DraftFactory.startDraft(newDraftObject)\n                .then((response) => {\n                    return LeagueService.getLeague()\n                        .then((response) => {\n                            return response;\n                        }, (error) => {\n                            console.log(error);\n                        });\n                }, (error) => {\n                    console.log(error);\n                });\n        }, (error) => {\n            console.log(error);\n        });\n    };\n\n    service.joinDraft = () => {\n        let getCurrentLeague = LeagueService.getLeague();\n        getCurrentLeague.then((response) => {\n            //Get draft object from league.draft_id\n        })\n    };\n\n    service.getDraft = () => {\n        return DraftFactory.getDraft()\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    service.onClock = () => {\n\n    };\n\n    service.draftPlayer = function (draftPick) {\n        return DraftFactory.draftPlayer(draftPick)\n            .then(function (response) {\n                if (response.statusText === \"OK\") {\n                    return true;\n                }\n                else {\n                    return false;\n                }\n            }, function (error) {\n                console.log(error);\n            });\n    };\n\n    service.downloadPlayers = function () {\n        DraftFactory.downloadPlayers();\n    };\n\n    return service;\n});","angular.module(\"LeagueService\", []).service(\"LeagueService\", function ($window, $state, $stateParams, $q, $location, LeagueFactory, AuthenticationService) {\n    let service = {};\n\n    let deferred = $q.defer();\n\n    //Current User\n    let currentUser = {};\n    let getCurrentUser = AuthenticationService.currentUser();\n    getCurrentUser.then((response) => {\n        currentUser = response;\n    }, (error) => {\n        console.log(error);\n    });\n\n    //Current League\n    let currentLeague = {};\n    service.getLeague = () => {\n        if ($stateParams.leagueID) {\n            return LeagueFactory.getLeague($stateParams.leagueID)\n                .then((response) => {\n                    if (response.data) {\n                        currentLeague = response.data;\n                        return response.data;\n                    }\n                }, (error) => {\n                    console.log(error);\n                });\n        }\n\n    };\n\n    service.createNewLeague = function (newLeagueInfo) {\n        return LeagueFactory.createLeague(newLeagueInfo)\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    service.joinLeague = function (joinPac) {\n        return LeagueFactory.joinLeague(joinPac)\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    service.newLeagueMessage = (messagePack) => {\n        return LeagueFactory.newLeagueMessage(messagePack)\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    service.updateTeamPick = (pickPack) => {\n        return LeagueFactory.updateTeamPick(pickPack)\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    service.deleteLeagueTeam = (team) => {\n        return LeagueFactory.deleteLeagueTeam(team)\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    service.getUserLeagues = (id) => {\n        return LeagueFactory.getUserLeagues(id)\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    return service;\n});","angular.module('DashboardController', []).controller('DashboardController', function (AuthenticationService, LeagueService) {\n    let vm = this;\n\n    vm.currentLeagues = [];\n    vm.currentUser = AuthenticationService.currentUser().then((response) => {\n        vm.currentUser = response;\n        return LeagueService.getUserLeagues(response._id).then((leagues) => {\n            vm.currentLeagues = leagues.data\n        }, (error) => {\n            console.log(error);\n        })\n    }, (error) => {\n        console.log(error);\n    });\n    \n});","angular.module(\"DraftController\", []).controller(\"DraftController\", function ($stateParams, AuthenticationService, LeagueService, DraftService, DraftFactory) {\n    let vm = this;\n\n    vm.message = \"\";\n\n    vm.onClock = \"\";\n\n    vm.currentUser = AuthenticationService.currentUser().then((response) => {\n        vm.currentUser = response;\n    });\n\n    vm.availablePlayers = [];\n    vm.currentDraft = DraftService.getDraft().then((response) => {\n        // console.log(response.data.draft);\n        // vm.currentDraft = response.data.draft;\n        // vm.availablePlayers = response.data.players;\n        draftSort(response.data.draft, response.data.players);\n        vm.draftField = response.data.draft.field;\n    });\n\n    vm.draftPlayer = (player_id) => {\n        let draftPick = {\n            position: vm.onClock.position,\n            player_id: player_id\n        };\n        return DraftService.draftPlayer(draftPick).then((response) => {\n            console.log(response);\n        }, (error) => {\n            console.log(error);\n        });\n    };\n\n    let draftSort = (draft, players) => {\n        let draftField = draft.field;\n        // console.log(draftField);\n        let sortedDraft = [];\n        let sorted = false;\n        while (sorted == false) {\n            let x = 0;\n            let counter = 0;\n            for (let y = counter; y < draftField.length; y++) {\n                if (draftField[y].picks[x]) {\n                    let pick = {\n                        _id: draftField[y].picks[x]._player\n                    }\n                    sortedDraft.push(pick);\n                }\n                else {\n                    vm.onClock = draftField[y];\n                    sorted = true;\n                    break;\n                }\n            }\n            x++;\n            // for (let z = counter; z >= 0; z--){\n            //     if (draftField[z].picks[x]) {\n            //         sortedDraft.push(draftField[z].picks[x]._player);\n            //     }\n            //     else {\n            //         vm.\n            //     }\n            // }\n            counter = 0;\n        }\n\n        let availablePlayers = [];\n        \n        for (let p = 0; p < players.length; p++){\n            sortedDraft.forEach((pick) => {\n                if (players[p]._id == pick._id) {\n                    pick.displayName = players[p].displayName;\n                    pick.position = players[p].position;\n                    pick.team = players[p].team;\n                }\n                else {\n                    availablePlayers.push(players[0]);\n                }\n            });\n        }\n        // sortedDraft.forEach((pick) => {\n        //     players.forEach((player) => {\n                \n                \n        //     })\n        // });\n        console.log(sortedDraft);\n        console.log(availablePlayers);\n        vm.draft = sortedDraft;\n        vm.players = availablePlayers;\n        \n    };\n\n    // vm.downloadPlayers = () => {\n    //     DraftFactory.downloadPlayers()\n    // };\n});","angular.module('LeagueCommishController', []).controller('LeagueCommishController', function ($rootScope, $scope, $q, $state, AuthenticationService, LeagueService) {\n    let vm = this;\n\n    vm.message = \"\";\n\n    //Current User\n    vm.currentUser = {};\n    let getCurrentUser = AuthenticationService.currentUser();\n    getCurrentUser.then((response) => {\n        vm.currentUser = response;\n        return;\n    }, (error) => {\n        console.log(error);\n    });\n\n    //Current League\n    vm.league = {};\n    let getLeague = LeagueService.getLeague();\n    getLeague.then((response) => {\n        vm.league = response;\n        createPicksList(response);\n    }, (error) => {\n        console.log(error);\n    });\n\n    //Commish Auth\n    vm.isCommish = (userID, league) => {\n        let commish = false;\n        if (userID && league) {\n            league.forEach((element) => {\n                if (element == userID) {\n                    commish = true;\n                }\n            });\n            return commish;\n        }\n        return commish;\n    };\n\n    vm.leagueField = [];\n\n    let createPicksList = (league) => {\n        if (league) {\n            let draftOrder = { title: \"Draft Order\", teams: [] };\n            let size = league.size;\n            let currentTeams = league.teams;\n            for (let x = 1; x <= size; x++) {\n                let draftPick = { 'pick': x };\n                // angular.forEach(currentTeams, (team, index) => {\n                //     if (team.pick == x) {\n                //         draftPick = team;\n                //         currentTeams.splice(index, 1);\n                //     }\n                // });\n                currentTeams.forEach((team, index) => {\n                    if (team.pick == x) {\n                        draftPick = team;\n                        currentTeams.splice(index, 1);\n                    }\n                });\n                draftOrder.teams.push(draftPick);\n            }\n            vm.leagueField.push(draftOrder);\n            if (currentTeams.length > 0) {\n                let teams = { title: \"Needs Pick\", teams: [] };\n                currentTeams.forEach((team) => {\n                    teams.teams.push(team);\n                });\n                vm.leagueField.push(teams);\n            }\n        }\n    };\n\n    $scope.onDrop = function (srcList, srcIndex, targetList, targetIndex) {\n        // Copy the item from source to target.\n        targetList.splice(targetIndex, 0, srcList[srcIndex]);\n        // Remove the item from the source, possibly correcting the index first.\n        // We must do this immediately, otherwise ng-repeat complains about duplicates.\n        if (srcList == targetList && targetIndex <= srcIndex) srcIndex++;\n        srcList.splice(srcIndex, 1);\n        for (let x = 0; x < targetList.length; x++) {\n            if (targetList[x]._id == this.team._id) {\n                let team = this.team;\n                let pick = x + 1;\n                return updatePick(team, pick).then(() => {\n                    return true;\n                }, (error) => {\n                    console.log(error);\n                });\n            }\n        }\n        // By returning true from dnd-drop we signalize we already inserted the item.\n        return true;\n    };\n\n    let updatePick = (team, pick) => {\n        let pickPack = {\n            pick: pick,\n            team: team\n        };\n        return LeagueService.updateTeamPick(pickPack)\n            .then((response) => {\n                $state.reload();\n                return;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n    \n    vm.deleteTeam = (id) => {\n        let team = {\n            team_id: id\n        };\n        return LeagueService.deleteLeagueTeam(team)\n            .then((response) => {\n                $state.reload();\n                return\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n});","angular.module('LeagueController', []).controller('LeagueController', function ($scope, $q, $uibModal, $confirm, $state, $stateParams, AuthenticationService, LeagueService, DraftService) {\n\n    let vm = this;\n\n    vm.message = \"\";\n\n    vm.params = $stateParams;\n\n    //Current User\n    vm.currentUser = {};\n    let getCurrentUser = AuthenticationService.currentUser();\n    getCurrentUser.then((response) => {\n        vm.currentUser = response;\n        return;\n    }, (error) => {\n        console.log(error);\n    });\n\n    //Current League\n    vm.league = {};\n    let getLeague = LeagueService.getLeague();\n    getLeague.then((response) => {\n        vm.league = response;\n        return;\n    }, (error) => {\n        console.log(error);\n    });\n\n    //Commish Auth\n    vm.isCommish = (userID, league) => {\n        let commish = false;\n        if (userID && league) {\n            league.forEach((element) => {\n                if (element == userID) {\n                    commish = true;\n                }\n            });\n            return commish;\n        }\n        return commish;\n    };\n\n    //Open New League Message Modal\n    vm.newMessage = () => {\n        $scope.modalInstance = $uibModal.open({\n            animation: true,\n            size: \"lg\",\n            templateUrl: 'newMessageModal.html',\n            controller: 'LeagueController',\n            controllerAs: 'vm',\n            scope: $scope,\n            backdrop: \"static\",\n        });\n    };\n\n    vm.sendMessage = () => {\n\n        let messagePack = {\n            \"leagueID\": vm.league._id,\n            \"userID\": vm.currentUser._id,\n            \"message\": vm.newLeagueMessage\n        };\n\n        return LeagueService.newLeagueMessage(messagePack)\n            .then((response) => {\n                console.log(response);\n                if (response.statusText == \"OK\") {\n                    $state.reload();\n                }\n                console.log(response);\n            }, (error) => {\n                console.log(error);\n            });\n    };\n    \n    vm.cancel = () => {\n        $scope.modalInstance.dismiss('cancel');\n    };\n\n    vm.dismissError = () => {\n        vm.message = \"\";\n    };\n\n    vm.startDraft = () => {\n        let startLeagueDraft = DraftService.startDraft();\n        startLeagueDraft.then((response) => {\n            if (response.error) {\n                vm.message = response.error;\n            }\n            else {\n                $state.reload();\n            }\n        }, (error) => {\n            console.log(error);\n        });\n    };\n});","angular.module('LeagueJoinController', []).controller('LeagueJoinController', function($q, $rootScope, $scope, $state, AuthenticationService, LeagueService) {\n    let vm = this;\n\n    vm.message = \"\";\n\n    //Current User\n    vm.currentUser = {};\n    let getCurrentUser = AuthenticationService.currentUser();\n    getCurrentUser.then((response) => {\n        vm.currentUser = response;\n        return;\n    }, (error) => {\n        console.log(error);\n    });\n\n    //Join League\n    vm.joinLeague = () => {\n        let code = \"\";\n        for (var x in vm.data) {\n            code += vm.data[x];\n        }\n        let leaguePack = {\n            \"user_id\": vm.currentUser._id,\n            \"league_code\": code,\n        };\n        return LeagueService.joinLeague(leaguePack)\n            .then((response) => {\n                if (response.data.message) {\n                    vm.message = response.data.message;\n                    \n                }\n                else {\n                    $state.transitionTo('dashboard');\n                }\n\n            }, (error) => {\n                console.log(error);\n            });\n    };\n    \n    //Moves Focus After Input\n    vm.moveFocus = (nextId) => {\n        $('#' + nextId).focus();\n    };\n\n    vm.dismissError = () => {\n        vm.message = \"\";\n    };\n});","angular.module('LeagueNewController', []).controller('LeagueNewController', function ($q, $state, AuthenticationService, LeagueService) {\n    let vm = this;\n\n    vm.messsage = \"\";\n\n    //Current User\n    vm.currentUser = {};\n    let getCurrentUser = AuthenticationService.currentUser();\n    getCurrentUser.then((response) => {\n        vm.currentUser = response;\n        return;\n    }, (error) => {\n        console.log(error);\n    });\n\n    //Create New League\n    vm.createNewLeague = () => {\n        let newLeagueInfo = {\n            \"leagueName\": vm.newLeague.leagueName,\n            \"leagueSize\": vm.newLeague.leagueSize,\n            \"user_id\": vm.currentUser._id\n        };\n\n        return LeagueService.createNewLeague(newLeagueInfo)\n            .then((response) => {\n                $state.transitionTo('dashboard');\n            }, (error) => {\n                console.log(error);\n            });\n    };\n})","angular.module('UserLoginController', []).controller('UserLoginController', function ($state, AuthenticationService) {\n    let vm = this;\n\n    vm.message = \"\";\n\n    vm.loginInfo = {\n        email: \"\",\n        password: \"\"\n    };\n\n    vm.login = () => {\n        return AuthenticationService.login(vm.loginInfo)\n            .then((response) => {\n                if (response == \"Token Set!\") {\n                    $state.transitionTo('dashboard');\n                }\n                else {\n                    vm.message = response;\n                }\n            }, (error) => {\n                console.log(error);\n            });\n    };\n    \n    vm.onSignIn = (googleUser) => {\n        console.log(\"Fired onSign In\");\n        if (googleUser) {\n            var profile = googleUser.getBasicProfile();\n            console.log(\"Email: \" + profile.getEmail());\n        }\n    };\n\n    vm.dismissError = () => {\n        vm.message = \"\";\n    };\n});","angular.module('UserRegisterController', []).controller('UserRegisterController', function ($state, AuthenticationService) {\n    let vm = this;\n\n    vm.message = \"\";\n\n    vm.registerInfo = {\n        email: \"\",\n        userName: \"\",\n        firstName: \"\",\n        password: \"\"\n    };\n\n    vm.registerNew = function () {\n        return AuthenticationService.register(vm.registerInfo)\n            .then((response) => {\n                $state.transitionTo('dashboard');\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    vm.dismissError = () => {\n        vm.message = \"\";\n    };\n});","angular.module('UserSettingsController', []).controller('UserSettingsController', function (AuthenticationService) {\n    let vm = this;\n\n    vm.message = \"\";\n\n    vm.currentUser = {};\n    let getCurrentUser = AuthenticationService.currentUser();\n    getCurrentUser.then((response) => {\n        vm.currentUser = response;\n    }, (error) => {\n        console.log(error);\n    });\n\n    vm.tab = 1;\n\n    vm.setTab = (tabId) => {\n        vm.tab = tabId;\n    };\n\n    vm.isSet = (tabId) => {\n        return vm.tab === tabId;\n    };\n\n    \n\n    \n\n    \n\n    \n\n    \n    \n    vm.dismissError = () => {\n        vm.message = \"\";\n    }\n\n});\n\n"]}