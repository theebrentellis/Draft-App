{"version":3,"sources":["app.js","controllers/AppController.js","controllers/ChatController.js","controllers/PlayerController.js","factories/ChatFactory.js","factories/DraftFactory.js","factories/LeagueFactory.js","factories/UserFactory.js","services/AuthenticationService.js","services/DraftService.js","services/LeagueService.js","controllers/dashboard/DashboardController.js","controllers/league/LeagueCommishController.js","controllers/league/LeagueController.js","controllers/league/LeagueJoinController.js","controllers/league/LeagueNewController.js","controllers/user/UserLoginController.js","controllers/user/UserRegisterController.js","controllers/user/UserSettingsController.js"],"names":["DraftApp","angular","module","config","$urlRouterProvider","otherwise","$stateProvider","state","url","templateProvider","views","content","controller","$templateCache","controllerAs","get","authenticate","header","league","log","LeagueService","$stateParams","console","run","onStart","trans","transitionTo","isLoggedIn","$transitions","$location","$state","$q","AuthenticationService","getLoginStatus","response","AuthService","DraftService","vm","this","then","error","currentUser","downloadPlayers","data","deleteAllPlayers","currentUserLogOut","logOut","directive","$scope","element","attrs","bind","event","which","$apply","$eval","ngEnter","preventDefault","ChatFactory","currentLeague","messages","message","filterText","socket","io","connect","on","reverse","unshift","sendMessage","postMessage","result","err","window","alert","$confirm","$timeout","DraftFactory","available_players","allDraftedPlayers","setColorOnClock","team","onClock","_id","font-weight","getPlayers","position","startDraft","id","draftPackage","draftId","draft","draftOrder","draftPlayer","isOnClock","leagueId","pick","path","checkBox","value","getDraftedPlayers","factory","$http","callback","post","success","status","deleteAllChat","params","output","deleteAllDrafts","createLeague","newLeagueInfo","joinLeague","leaguePack","patch","getLeague","newLeagueMessage","messagePack","updateTeamPick","pickPack","leagueID","register","registerInfo","login","loginInfo","service","$window","$rootScope","UserFactory","tokenStorage","setToken","key","token","Promise","resolve","localStorage","setItem","getToken","getItem","removeToken","removeItem","payload","split","atob","JSON","parse","exp","Date","now","userName","firstName","email","leagues","updateToken","user","reponse","clear","$new","statusText","undraftedPlayers","draftedPlayers","LeagueFactory","defer","createNewLeague","joinPac","createPicksList","isCommish","userID","commish","forEach","leaguePickMaker","title","teams","size","currentTeams","x","draftPick","index","splice","push","_loop","length","onDrop","srcList","srcIndex","targetList","targetIndex","updatePick","reload","$view","$uibModal","newMessage","modalInstance","open","animation","templateUrl","scope","backdrop","cancel","dismiss","dismissError","code","user_id","league_code","moveFocus","nextId","$","focus","messsage","leagueName","newLeague","leagueSize","password","onSignIn","googleUser","profile","getBasicProfile","getEmail","registerNew","tab","setTab","tabId","isSet"],"mappings":"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","file":"app.js","sourcesContent":["let DraftApp = angular.module(\"DraftApp\", [\"ngRoute\", \"ngMessages\", \"ngAnimate\",\n    \"ui.router\", \"ui.bootstrap\", \"dndLists\", \"angular-confirm\",\n    \"AppController\", \"ChatController\", \"DashboardController\", \"LeagueController\", \"LeagueCommishController\", \"LeagueJoinController\", \"LeagueNewController\", \"PlayerController\", \"UserSettingsController\", \"UserLoginController\", \"UserRegisterController\",\n    \"AuthenticationService\", \"DraftService\", \"LeagueService\",\n    \"ChatFactory\", \"DraftFactory\", \"LeagueFactory\", \"UserFactory\"]);\n\nangular.module('DraftApp').config(function ($stateProvider, $urlRouterProvider) {\n\n    $urlRouterProvider.otherwise(\"/\");\n\n    $stateProvider\n        .state(\"index\", {\n            url: \"/\",\n            views: {\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('welcome.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        })\n        .state(\"login\", {\n            url: \"/login\",\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: \"vm\",\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('auth/login.html');\n                    },\n                    controller: \"UserLoginController\",\n                    controllerAs: \"vm\"\n                },\n            }\n        })\n        .state('register', {\n            url: \"/register\",\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: 'vm'\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('auth/register.html');\n                    },\n                    controller: \"UserRegisterController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        })\n        .state(\"settings\", {\n            url: \"/settings\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: 'vm',\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('auth/settings.html');\n                    },\n                    controller: \"UserSettingsController\",\n                    controllerAs: \"vm\",\n                }\n            }\n        })\n        .state(\"dashboard\", {\n            url: \"/dashboard\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: 'vm',\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('dashboard.html');\n                    },\n                    controller: \"DashboardController\",\n                    controllerAs: \"vm\",\n                }\n            }\n        })\n        .state('newLeague', {\n            url: \"/league/new\",\n            authenticate: true,\n            views: {\n                'header': {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: 'vm'\n                },\n                'content': {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('league/league.new.html');\n                    },\n                    controller: \"LeagueNewController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        })\n        .state('joinLeague', {\n            url: \"/league/join\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: 'vm'\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('league/league.join.html');\n                    },\n                    controller: \"LeagueJoinController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        })\n        .state('league', {\n            url: \"/league/:leagueID/index\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: 'vm'\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('league/league.index.html');\n                    },\n                    controller: \"LeagueController\",\n                    controllerAs: \"vm\",\n                    resolve: {\n                        league: function(LeagueService, $stateParams) {\n                            console.log(\"Start Resolve\");\n                            return LeagueService.get();\n                        }\n                    }\n                }\n            }\n        })\n        .state('leagueCommish', {\n            url: \"/league/:leagueID/commish\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: 'vm'\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('league/league.commish.html');\n                    },\n                    controller: \"LeagueCommishController\",\n                    controllerAs: \"vm\",\n                    // resolve: {\n                    //     league: (LeagueService, $stateParams) => {\n                    //         console.log($stateParams)\n                    //         // let theLeague = LeagueService.getLeague();\n                    //         // theLeague.then((response) => {\n\n                    //         // }, (error) => {\n                    //         //     console.log(error);\n                    //         // });\n                    //     }\n                    // }\n                }\n            }\n        })\n        .state(\"availablePlayers\", {\n            url: \"/availablePlayers\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: \"vm\",\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('availablePlayers.html');\n                    },\n                    controller: \"PlayerController\",\n                    controllerAs: \"vm\",\n                }\n            }\n        })\n        .state(\"draftboard\", {\n            url: \"/draftboard\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: \"vm\"\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('draftBoard.html');\n                    },\n                    controller: \"PlayerController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        })\n        .state(\"chat\", {\n            url: \"/chat\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: \"vm\"\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('chat.html');\n                    },\n                    controller: \"ChatController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        });\n});\n\nangular.module('DraftApp').run(function ($transitions, $location, $state, $q, AuthenticationService) {\n    $transitions.onStart({ to: '*' }, function (trans) {\n        let AuthService = trans.injector().get('AuthenticationService');\n        if (trans.to().authenticate && !AuthService.isLoggedIn()) {\n            $state.transitionTo('login');\n        }\n    });\n});","angular.module('AppController', []).controller('AppController', function (AuthenticationService, DraftService, LeagueService) {\n\n  let vm = this;\n  \n  vm.isLoggedIn = false;\n  let getLoginStatus = AuthenticationService.isLoggedIn();\n  getLoginStatus.then((response) => {\n    if (response == true) {\n      vm.isLoggedIn = true;\n    }\n    if (response == false) {\n      vm.isLoggedIn = false;\n    }\n  }, (error) => {\n    console.log(error);\n  });\n      \n  vm.currentUser = {};\n  let getCurrentUser = AuthenticationService.currentUser();\n  getCurrentUser.then((response) => {\n    vm.currentUser = response;\n  }, (error) => {\n    console.log(error);\n  });\n\n  \n    vm.downloadPlayers = function(){\n      DraftService.downloadPlayers(function(data){\n        console.log(data);\n      });\n    };\n  \n    vm.deleteAllPlayers = function(){\n      DraftService.deleteAllPlayers(function(data){\n        console.log(data);\n      });\n    };\n  \n  vm.currentUserLogOut = () => {\n    AuthenticationService.logOut();\n  };\n});","angular.module('ngEnter', []).directive('ngEnter', function ($scope, element, attrs) {\n\n    element.bind(\"keypress\", function (event) {\n        if (event.which === 13) {\n            $scope.$apply(function () {\n                $scope.$eval(attrs.ngEnter);\n            });\n            event.preventDefault();\n        }\n    });\n});\n\nangular.module('ChatController', []).controller('ChatController', function ($scope, AuthenticationService, LeagueService, ChatFactory) {\n\n    var vm = this;\n\n    vm.currentUser = AuthenticationService.currentUser();\n\n    vm.currentLeague = LeagueService.currentLeague();\n\n    vm.messages = [];\n\n    vm.message = \"\";\n    vm.filterText = \"\";\n\n    \n    var socket = io.connect();\n\n    socket.on(\"pastMessages\", function (data) {\n        $scope.$apply(function(){\n            vm.messages = data.reverse();\n        });\n    });\n\n    socket.on(\"receiveMessage\", function(data){\n        $scope.$apply(function(){\n            vm.messages.unshift(data);\n        });\n    });\n\n    vm.sendMessage = function () {\n        // var chatMessage = {\n        //     \"_id\": vm.currentLeague.chat._id,\n        //     \"userName\": vm.currentUser.firstName,\n        //     \"message\": vm.message\n        // };\n        LeagueService.postMessage(vm.message, function (result, err) {\n            if (err) {\n                window.alert(\"Error!\");\n            }\n            // else{\n            //     socket.emit(\"receiveMessage\", result);\n            //     vm.message = \"\";\n            // }\n        });\n    };\n});","angular.module('PlayerController', []).controller('PlayerController', function ($scope, $location, $confirm, $timeout, $q, DraftFactory, AuthenticationService, DraftService, LeagueService) {\n\n  var vm = this;\n\n  vm.available_players = [];\n\n  vm.allDraftedPlayers = [];\n\n  vm.message = \"\";\n\n  vm.currentUser = AuthenticationService.currentUser();\n\n  vm.currentLeague = LeagueService.currentLeague();\n\n  vm.setColorOnClock = function(team){\n      if(vm.currentLeague.onClock === team._id){\n        return {\"font-weight\": \"bold\"};\n      }\n  };\n\n  vm.getPlayers = function (position) {\n    DraftFactory.getPlayers(position, function (data) {\n      vm.available_players = data;\n    });\n  };\n\n  vm.startDraft = function(id){\n    var draftPackage = {\n      draftId: vm.currentLeague.draft._id,\n      draftOrder: vm.currentLeague.draftOrder\n\n    };\n    return DraftService.startDraft(draftPackage)\n      .then(function(response){\n        console.log(response);\n      }, function(error){\n        console.log(error);\n      });\n  };\n\n  vm.draftPlayer = function (id) {\n    if(DraftService.isOnClock() === true){\n\n      var draftPackage = {\n        draftId: vm.currentLeague.draft._id,\n        leagueId: vm.currentLeague._id,\n        team: vm.currentUser._id,\n        pick: id,\n      };\n      \n      return DraftService.draftPlayer(draftPackage)\n        .then(function(response){\n          console.log(response);\n          if(response === true){\n            $location.path(\"/draftBoard\");\n          }\n          if(response === false){\n            console.log(\"Error in PlayerControiller draftPlayer\");\n          }\n        }, function(error){\n          console.log(error);\n        });\n    }\n    if(DraftService.isOnClock() === false){\n      vm.message = \"You Are Not On The Clock!\";\n      vm.checkBox.value = false;\n      $timeout(function(){\n        vm.message = false;\n      }, 5000);\n    }\n  };\n\n  var getDraftedPlayers = function () {\n    DraftFactory.getDraftedPlayers(function (data) {\n      vm.allDraftedPlayers = data;\n    });\n  };\n  getDraftedPlayers();\n});\n","angular.module(\"ChatFactory\", []).factory(\"ChatFactory\", function($http){\n\n    var factory = {};\n\n    factory.postMessage = function(message, callback){\n        $http.post(\"/message\", message).success(function(data, status){\n            callback(data, false);\n        })\n        .error(function(data, status){\n            callback(data, true);\n        });\n    };\n\n    factory.deleteAllChat = function(){\n        $http.post(\"/deleteAllChat\").success(function(data){\n            console.log(data);\n        });\n    };\n\n    return factory;\n});","angular.module(\"DraftFactory\", []).factory(\"DraftFactory\", function($http, $q){\n    var factory = {};\n\n    factory.downloadPlayers = function(){\n        $http.post(\"/downloadPlayers\").success(function(data){\n            console.log(data);\n        });\n    };\n\n    factory.getPlayers = function(position, callback){\n        $http.get(\"/getPlayers/\", {params: {position: position}}).success(function(output){\n            callback(output);\n        });\n    };\n\n    factory.deleteAllPlayers = function(callback){\n        $http.post(\"/deleteAllPlayers\").success(function(data){\n            callback(data);\n        });\n    };\n\n    factory.startDraft = function(draftPackage){\n        return $http.post(\"/startDraft\", draftPackage)\n            .then(function(response){\n                console.log(response);\n            }, function(error){\n                console.log(error);\n            });\n    };\n\n    factory.draftPlayer = function(draftPackage){\n        return $http.post(\"/draftPlayer\", draftPackage)\n            .then(function(response){\n                return response;\n            }, function(error){\n                console.log(error);\n            });\n    };\n\n    factory.getDraftedPlayers = function(callback){\n        $http.get(\"/getDraftedPlayers\").success(function(output){\n            callback(output);\n        });\n    };\n\n    factory.deleteAllDrafts = function(){\n        return $http.post(\"/deleteAllDrafts\");\n    };\n\n    return factory;\n});","angular.module(\"LeagueFactory\", []).factory(\"LeagueFactory\", function ($http, $stateParams) {\n    let factory = {};\n\n    factory.createLeague = (newLeagueInfo) => {\n        return $http.post(\"/createLeague\", newLeagueInfo)\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    factory.joinLeague = (leaguePack) => {\n        return $http.patch(\"/joinLeague/\", leaguePack)\n            .then(function (response) {\n                return response;\n            }, function (error) {\n                console.log(error);\n            });\n    };\n\n    factory.getLeague = (id) => {\n        return $http.get(\"/getLeague/\", { params: { _id: id } })\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n    \n    factory.newLeagueMessage = (messagePack) => {\n        return $http.post('/league/newMessage', messagePack)\n            .then((response) => {\n                return response\n            }, (error) => {\n                console.log(error);\n            });\n    };\n    \n    factory.updateTeamPick = (pickPack) => {\n        return $http.post('/league/' + $stateParams.leagueID, pickPack)\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    }\n\n    return factory;\n});","angular.module('UserFactory', []).factory('UserFactory', function ($http) {\n  let factory = {};\n\n  factory.register = (registerInfo) => {\n    return $http.post(\"/register\", registerInfo)\n      .then((response) => {\n        return response;\n      }, (error) => {\n        console.log(error);\n        return error;\n    });\n  };\n\n  factory.login = (loginInfo) => {\n    return $http.post(\"/login\", loginInfo)\n      .then((response) => {\n        return response;\n      }, (error) => {\n        console.log(error);\n        return error;\n      });\n  };\n\n  return factory;\n});","angular.module('AuthenticationService', []).service('AuthenticationService', function ($window, $state, $rootScope, $q, UserFactory) {\n  let service = {};\n\n  const tokenStorage = {\n    setToken: (key, token) => {\n      return Promise.resolve().then(() => {\n        $window.localStorage.setItem(key, token);\n      });\n    },\n    getToken: (key) => {\n      return Promise.resolve().then(() => {\n        return $window.localStorage.getItem(key);\n      });\n    },\n    removeToken: (key) => {\n      return Promise.resolve().then(() => {\n        $window.localStorage.removeItem(key);\n      });\n    }\n  }\n\n  //Is A User Logged In\n  service.isLoggedIn = () => {\n    return tokenStorage.getToken('user-token')\n      .then((token) => {\n        if (token) {\n          let payload = token.split('.')[1];\n          payload = $window.atob(payload);\n          payload = JSON.parse(payload);\n          return payload.exp > Date.now() / 1000;\n        }\n        else {\n          return false;\n        }\n      }, (error) => {\n        console.log(error);\n      });\n  };\n\n  //Return The Current User\n  service.currentUser = function () {\n    return service.isLoggedIn()\n      .then((response) => {\n        if (response) {\n          return tokenStorage.getToken('user-token')\n            .then((token) => {\n              let payload = token.split('.')[1];\n              payload = $window.atob(payload);\n              payload = JSON.parse(payload);\n\n              return {\n                _id: payload._id,\n                userName: payload.userName,\n                firstName: payload.firstName,\n                email: payload.email,\n                leagues: payload.leagues\n              };\n            }, (error) => {\n              console.log(error);\n            });\n        }\n      }, (error) => {\n        console.log(error);\n      });\n  };\n\n  service.updateToken = (token) => {\n    return tokenStorage.removeToken('user-token')\n      .then(() => {\n        return tokenStorage.setToken('user-token', token)\n          .then(() => {\n            return \"Token Set!\";\n          }, (error) => {\n            console.log(error);\n          })\n      }, (error) => {\n        console.log(error);\n      });\n  };\n\n  service.register = function (user, callback) {\n    return UserFactory.register(user)\n      .then((response) => {\n        if (response.data.token) {\n          return tokenStorage.setToken('user-token', response.data.token)\n            .then(() => {\n              return \"Token Set!\";\n            });\n        }\n        else if (response.message) {\n          return reponse.message;\n        }\n        else {\n          return \"Unknown Error\";\n        }\n      }, (error) => {\n        console.log(error);\n      });\n  };\n\n  service.login = (user) => {\n    return UserFactory.login(user)\n      .then((response) => {\n        if (response.data.token) {\n          return tokenStorage.setToken('user-token', response.data.token)\n            .then(() => {\n              return \"Token Set!\"\n            }, (error) => {\n              console.log(error);\n            });\n        }\n        if (response.status == 401) {\n          return \"Incorrect Username or Password!\";\n        }\n        else {\n          return \"Unknown Error!\"\n        }\n      }, (error) => {\n        console.log(error);\n      });\n  };\n\n  service.currentUserLogOut = () => {\n    $window.localStorage.clear();\n    $rootScope = $rootScope.$new(true);\n  };\n\n  return service;\n});\n","angular.module('DraftService', []).service('DraftService', function ($window, $state, $q, DraftFactory, AuthenticationService, LeagueService) {\n    var service = {};\n\n    var vm = this;\n\n    // vm.currentUser = AuthenticationService.currentUser();\n\n    // vm.isLoggedIn = AuthenticationService.isLoggedIn();\n\n    // vm.currentLeague = LeagueService.currentLeague();\n\n    service.startDraft = function(draftPackage){\n        return DraftFactory.startDraft(draftPackage)\n            .then(function(reponse){\n                console.log(response);\n            }, function(error){\n                console.log(error);\n            });\n    };\n\n    service.isOnClock = function(){\n        if(vm.currentLeague.onClock === vm.currentUser._id){\n            return true;\n        }\n        else{\n            return false;\n        }\n    };\n\n    service.draftPlayer = function(draftPackage){\n        return DraftFactory.draftPlayer(draftPackage)\n            .then(function(response){\n                if(response.statusText === \"OK\"){\n                    return true;\n                }\n                else{\n                    return false;\n                }\n            }, function(error){\n                console.log(error);\n            });\n    };\n\n    service.undraftedPlayers = function () {\n\n    };\n\n    service.draftedPlayers = function () {\n\n    };\n\n    service.downloadPlayers = function(){\n        DraftFactory.downloadPlayers();\n    };\n\n    service.deleteAllChat = function(){\n        ChatFactory.deleteAllChat();\n    };\n\n    service.deleteAllDrafts = function(){\n        DraftFactory.deleteAllDrafts();\n    };\n\n    service.deleteAllPlayers = function(callback){\n        DraftFactory.deleteAllPlayers(function(data){\n            callback(data);\n        });\n    };\n\n    return service;\n});","angular.module(\"LeagueService\", []).service(\"LeagueService\", function ($window, $state, $stateParams, $q, $location, LeagueFactory, ChatFactory, AuthenticationService) {\n    let service = {};\n    let vm = this;\n\n    let deferred = $q.defer();\n\n    //Current User\n    vm.currentUser = {};\n    let getCurrentUser = AuthenticationService.currentUser();\n    getCurrentUser.then((response) => {\n        vm.currentUser = response;\n    }, (error) => {\n        console.log(error);\n    });\n\n    //Current League\n    let currentLeague = {};\n    service.getLeague = () => {\n        return LeagueFactory.getLeague($stateParams.leagueID)\n            .then((response) => {\n                if (response.data) {\n                    currentLeague = response.data;\n                    return response.data;\n                }\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    service.createNewLeague = function (newLeagueInfo) {\n        return LeagueFactory.createLeague(newLeagueInfo)\n            .then((response) => {\n                return AuthenticationService.updateToken(response.data.token)\n                    .then(() => {\n                        $state.transitionTo('dashboard');\n                    }, (error) => {\n                        console.log(error);\n                    });\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    service.joinLeague = function (joinPac) {\n        return LeagueFactory.joinLeague(joinPac)\n            .then((response) => {\n                if (response.data.token) {\n                    return AuthenticationService.updateToken(response.data.token)\n                        .then(() => {\n                            return \"League Joined\";\n                        }, (error) => {\n                            console.log(error);\n                        });\n                }\n                else {\n                    return response.data.message;\n                }\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    service.newLeagueMessage = (messagePack) => {\n        return LeagueFactory.newLeagueMessage(messagePack)\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n    \n    service.updateTeamPick = (pickPack) => {\n        return LeagueFactory.updateTeamPick(pickPack)\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    return service;\n});","angular.module('DashboardController', []).controller('DashboardController', function (AuthenticationService) {\n    let vm = this;\n\n    vm.currentUser = {};\n    let getCurrentUser = AuthenticationService.currentUser();\n    getCurrentUser.then((response) => {\n        vm.currentUser = response;\n    }, (error) => {\n        console.log(error);\n    });\n\n    \n});","angular.module('LeagueCommishController', []).controller('LeagueCommishController', function ($rootScope, $scope, $q, $state, AuthenticationService, LeagueService) {\n    let vm = this;\n\n    vm.message = \"\";\n\n    //Current User\n    vm.currentUser = {};\n    let getCurrentUser = AuthenticationService.currentUser();\n    getCurrentUser.then((response) => {\n        vm.currentUser = response;\n        return;\n    }, (error) => {\n        console.log(error);\n    });\n\n    //Current League\n    vm.league = {};\n    let getLeague = LeagueService.getLeague();\n    getLeague.then((response) => {\n        vm.league = response;\n        createPicksList(response);\n    }, (error) => {\n        console.log(error);\n    });\n\n    //Commish Auth\n    vm.isCommish = (userID, league) => {\n        let commish = false;\n        if (userID && league) {\n            league.forEach((element) => {\n                if (element == userID) {\n                    commish = true;\n                }\n            });\n            return commish;\n        }\n        return commish;\n    };\n\n    vm.leaguePickMaker = [];\n\n    let createPicksList = (league) => {\n        if (league) {\n            let draftOrder = { title: \"Draft Order\", teams: [] };\n            let size = league.size;\n            let currentTeams = league.teams;\n            for (let x = 1; x <= size; x++) {\n                let draftPick = { 'pick': x };\n                // angular.forEach(currentTeams, (team, index) => {\n                //     if (team.pick == x) {\n                //         draftPick = team;\n                //         currentTeams.splice(index, 1);\n                //     }\n                // });\n                currentTeams.forEach((team, index) => {\n                    if (team.pick == x) {\n                        draftPick = team;\n                        currentTeams.splice(index, 1);\n                    }\n                });\n                draftOrder.teams.push(draftPick);\n            }\n            vm.leaguePickMaker.push(draftOrder);\n            if (currentTeams.length > 0) {\n                let teams = { title: \"Needs Pick\", teams: [] };\n                currentTeams.forEach((team) => {\n                    teams.teams.push(team);\n                });\n                vm.leaguePickMaker.push(teams);\n            }\n        }\n    };\n\n    $scope.onDrop = function (srcList, srcIndex, targetList, targetIndex) {\n        // Copy the item from source to target.\n        targetList.splice(targetIndex, 0, srcList[srcIndex]);\n        // Remove the item from the source, possibly correcting the index first.\n        // We must do this immediately, otherwise ng-repeat complains about duplicates.\n        if (srcList == targetList && targetIndex <= srcIndex) srcIndex++;\n        srcList.splice(srcIndex, 1);\n        for (let x = 0; x < targetList.length; x++) {\n            if (targetList[x]._id == this.team._id) {\n                let team = this.team;\n                let pick = x + 1;\n                return updatePick(team, pick).then(() => {\n                    return true;\n                }, (error) => {\n                    console.log(error);\n                });\n            }\n        }\n        // By returning true from dnd-drop we signalize we already inserted the item.\n        return true;\n    };\n\n    let updatePick = (team, pick) => {\n        let pickPack = {\n            pick: pick,\n            team: team\n        };\n        return LeagueService.updateTeamPick(pickPack)\n            .then((response) => {\n                $state.reload();\n                return;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n});","angular.module('LeagueController', []).controller('LeagueController', function ($rootScope, $scope, $q, $view, $uibModal, $confirm, $location, $state, AuthenticationService, LeagueService) {\n\n    let vm = this;\n\n    vm.message = \"\";\n\n    //Current User\n    vm.currentUser = {};\n    let getCurrentUser = AuthenticationService.currentUser();\n    getCurrentUser.then((response) => {\n        vm.currentUser = response;\n        return response;\n    }, (error) => {\n        console.log(error);\n    });\n\n    //Current League\n    vm.league = {};\n    let getLeague = LeagueService.getLeague();\n    getLeague.then((response) => {\n        vm.league = response;\n        return;\n        // createPicksList(response);\n    }, (error) => {\n        console.log(error);\n    });\n\n    //Commish Auth\n    vm.isCommish = (userID, league) => {\n        let commish = false;\n        if (userID && league) {\n            league.forEach((element) => {\n                if (element == userID) {\n                    commish = true;\n                }\n            });\n            return commish;\n        }\n        return commish;\n    };\n\n    //Open New League Message Modal\n    vm.newMessage = () => {\n        $scope.modalInstance = $uibModal.open({\n            animation: true,\n            size: \"lg\",\n            templateUrl: 'newMessageModal.html',\n            controller: 'LeagueController',\n            controllerAs: 'vm',\n            scope: $scope,\n            backdrop: \"static\",\n        });\n    };\n\n    vm.sendMessage = () => {\n\n        let messagePack = {\n            \"leagueID\": vm.league._id,\n            \"userID\": vm.currentUser._id,\n            \"message\": vm.newLeagueMessage\n        };\n\n        return LeagueService.newLeagueMessage(messagePack)\n            .then((response) => {\n                console.log(response);\n                if (response.statusText == \"OK\") {\n                    $state.reload();\n                }\n                console.log(response);\n            }, (error) => {\n                console.log(error);\n            });\n    };\n    \n    vm.cancel = () => {\n        $scope.modalInstance.dismiss('cancel');\n    };\n\n    vm.dismissError = () => {\n        vm.message = \"\";\n    };\n\n    vm.startDraft = () => {\n        console.log(\"Start Draft\");\n    }\n});","angular.module('LeagueJoinController', []).controller('LeagueJoinController', function($q, $rootScope, $scope, $state, AuthenticationService, LeagueService) {\n    let vm = this;\n\n    vm.message = \"\";\n\n    //Current User\n    vm.currentUser = {};\n    let getCurrentUser = AuthenticationService.currentUser();\n    getCurrentUser.then((response) => {\n        vm.currentUser = response;\n        return;\n    }, (error) => {\n        console.log(error);\n    });\n\n    //Join League\n    vm.joinLeague = () => {\n        let code = \"\";\n        for (var x in vm.data) {\n            code += vm.data[x];\n        }\n        let leaguePack = {\n            \"user_id\": vm.currentUser._id,\n            \"league_code\": code,\n        };\n        return LeagueService.joinLeague(leaguePack)\n            .then((response) => {\n                if (response == \"League Joined\") {\n                    $state.transitionTo('dashboard');\n                }\n                else {\n                    vm.message = response;\n                }\n\n            }, (error) => {\n                console.log(error);\n            });\n    };\n    \n    //Moves Focus After Input\n    vm.moveFocus = (nextId) => {\n        $('#' + nextId).focus();\n    };\n});","angular.module('LeagueNewController', []).controller('LeagueNewController', function ($q, AuthenticationService, LeagueService) {\n    let vm = this;\n\n    vm.messsage = \"\";\n\n    //Current User\n    vm.currentUser = {};\n    let getCurrentUser = AuthenticationService.currentUser();\n    getCurrentUser.then((response) => {\n        vm.currentUser = response;\n        return;\n    }, (error) => {\n        console.log(error);\n    });\n\n    //Create New League\n    vm.createNewLeague = () => {\n        let newLeagueInfo = {\n            \"leagueName\": vm.newLeague.leagueName,\n            \"leagueSize\": vm.newLeague.leagueSize,\n            \"user_id\": vm.currentUser._id\n        };\n\n        return LeagueService.createNewLeague(newLeagueInfo)\n            .then((response) => {\n                $state.transitionTo('dashboard');\n            }, (error) => {\n                console.log(error);\n            });\n    };\n})","angular.module('UserLoginController', []).controller('UserLoginController', function ($state, AuthenticationService) {\n    let vm = this;\n\n    vm.message = \"\";\n\n    vm.loginInfo = {\n        email: \"\",\n        password: \"\"\n    };\n\n    vm.login = () => {\n        return AuthenticationService.login(vm.loginInfo)\n            .then((response) => {\n                if (response == \"Token Set!\") {\n                    $state.transitionTo('dashboard');\n                }\n                else {\n                    vm.message = response;\n                }\n            }, (error) => {\n                console.log(error);\n            });\n    };\n    \n    vm.onSignIn = (googleUser) => {\n        console.log(\"Fired onSign In\");\n        if (googleUser) {\n            var profile = googleUser.getBasicProfile();\n            console.log(\"Email: \" + profile.getEmail());\n        }\n    };\n\n    vm.dismissError = () => {\n        vm.message = \"\";\n    };\n});","angular.module('UserRegisterController', []).controller('UserRegisterController', function ($state, AuthenticationService) {\n    let vm = this;\n\n    vm.message = \"\";\n\n    vm.registerInfo = {\n        email: \"\",\n        userName: \"\",\n        firstName: \"\",\n        password: \"\"\n    };\n\n    vm.registerNew = function () {\n        return AuthenticationService.register(vm.registerInfo)\n            .then((response) => {\n                $state.transitionTo('dashboard');\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    vm.dismissError = () => {\n        vm.message = \"\";\n    };\n});","angular.module('UserSettingsController', []).controller('UserSettingsController', function (AuthenticationService) {\n    let vm = this;\n\n    vm.message = \"\";\n\n    vm.currentUser = {};\n    let getCurrentUser = AuthenticationService.currentUser();\n    getCurrentUser.then((response) => {\n        vm.currentUser = response;\n    }, (error) => {\n        console.log(error);\n    });\n\n    vm.tab = 1;\n\n    vm.setTab = (tabId) => {\n        vm.tab = tabId;\n    };\n\n    vm.isSet = (tabId) => {\n        return vm.tab === tabId;\n    };\n\n    \n\n    \n\n    \n\n    \n\n    \n    \n    vm.dismissError = () => {\n        vm.message = \"\";\n    }\n\n});\n\n"]}