{"version":3,"sources":["app.js","controllers/AppController.js","controllers/ChatController.js","controllers/DashboardController.js","controllers/LeagueController.js","controllers/PlayerController.js","controllers/UserController.js","factories/ChatFactory.js","factories/DraftFactory.js","factories/LeagueFactory.js","factories/UserFactory.js","services/AuthenticationService.js","services/DraftService.js","services/LeagueService.js"],"names":["DraftApp","angular","module","$stateProvider","$urlRouterProvider","otherwise","config","state","url","content","templateProvider","$templateCache","controller","views","header","get","controllerAs","authenticate","run","onStart","trans","to","transitionTo","$location","$state","$q","AuthenticationService","$transitions","vm","AuthService","injector","isLoggedIn","$scope","DraftService","LeagueService","this","then","response","error","console","log","currentUser","setCurrentLeague","leagueId","setCurrentLeagueId","getLeague","reload","deleteAllDBs","deleteAllPlayers","deleteAllUsers","deleteAllChat","deleteAllDrafts","downloadPlayers","data","path","deleteAllLeagues","currentUserLogOut","directive","element","attrs","bind","event","which","$apply","$eval","ngEnter","preventDefault","ChatFactory","currentLeague","messages","message","filterText","socket","io","connect","on","reverse","unshift","sendMessage","postMessage","result","err","window","alert","$view","$rootScope","$uibModal","$confirm","$document","league","isCommish","_id","commish_id","createNewLeague","newLeagueInfo","leagueName","newLeague","leagueSize","user_id","joinLeague","code","x","moveFocus","nextId","$","focus","newMessage","modalInstance","open","animation","size","templateUrl","opened","rendered","$timeout","restrict","replace","link","scope","animate","$modalStack","index","transclude","tElement","tAttrs","addClass","windowClass","close","evt","modal","getTop","value","backdrop","target","currentTarget","stopPropagation","dismiss","key","DraftFactory","available_players","allDraftedPlayers","setColorOnClock","team","onClock","font-weight","getPlayers","position","startDraft","id","draftPackage","draftId","draft","draftOrder","draftPlayer","isOnClock","pick","checkBox","getDraftedPlayers","tab","setTab","tabId","isSet","registerInfo","email","userName","firstName","password","loginInfo","registerNew","register","login","status","onSignIn","googleUser","profile","getBasicProfile","getEmail","dismissError","factory","$http","callback","post","success","params","output","createLeague","getAllLeagues","leaguePack","patch","getUserLeague","service","$window","UserFactory","tokenStorage","setToken","token","Promise","resolve","localStorage","setItem","getToken","getItem","removeToken","removeItem","payload","split","atob","JSON","parse","exp","Date","now","leagues","updateToken","user","reponse","clear","$new","statusText","undraftedPlayers","draftedPlayers","$stateParams","LeagueFactory","leagueID","league_code","chatMessage","chat"],"mappings":"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","file":"app.js","sourcesContent":["let DraftApp = angular.module(\"DraftApp\", [\"ngRoute\", \"ngMessages\", \"ngAnimate\", \"ui.router\", \"ui.bootstrap\", \"ui.bootstrap.modal\", \"angular-confirm\", \"AppController\", \"AuthenticationService\", \"ChatController\", \"DashboardController\", \"DraftService\", \"LeagueController\", \"LeagueService\", \"PlayerController\", \"UserController\", \"ChatFactory\", \"DraftFactory\", \"LeagueFactory\", \"UserFactory\"]);\n\nangular.module('DraftApp').config(function ($stateProvider, $urlRouterProvider) {\n\n    $urlRouterProvider.otherwise(\"/\");\n\n    $stateProvider\n        .state(\"index\", {\n            url: \"/\",\n            views: {\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('welcome.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        })\n        .state(\"login\", {\n            url: \"/login\",\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: \"vm\",\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('auth/login.html');\n                    },\n                    controller: \"UserController\",\n                    controllerAs: \"vm\"\n                },\n            }\n        })\n        .state('register', {\n            url: \"/register\",\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: 'vm'\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('auth/register.html');\n                    },\n                    controller: \"UserController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        })\n        .state(\"dashboard\", {\n            url: \"/dashboard\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: 'vm',\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('dashboard.html');\n                    },\n                    controller: \"DashboardController\",\n                    controllerAs: \"vm\",\n                }\n            }\n        })\n        .state('newLeague', {\n            url: \"/league/new\",\n            authenticate: true,\n            views: {\n                'header': {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: 'vm'\n                },\n                'content': {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('league/league.new.html');\n                    },\n                    controller: \"LeagueController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        })\n        .state('joinLeague', {\n            url: \"/league/join\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: 'vm'\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('league/league.join.html');\n                    },\n                    controller: \"LeagueController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        })\n        .state('league', {\n            url: \"/league/:leagueID/index\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: 'vm'\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('league/league.index.html');\n                    },\n                    controller: \"LeagueController\",\n                    controllerAs: \"vm\",\n                    // resolve: {\n                    //     league: (LeagueService, $stateParams) => {\n                    //         console.log($stateParams)\n                    //         // let theLeague = LeagueService.getLeague();\n                    //         // theLeague.then((response) => {\n                                \n                    //         // }, (error) => {\n                    //         //     console.log(error);\n                    //         // });\n                    //     }\n                    // }\n                }\n            }\n        })\n        .state(\"settings\", {\n            url: \"/settings\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: 'vm',\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('auth/settings.html');\n                    },\n                    controller: \"UserController\",\n                    controllerAs: \"vm\",\n                }\n            }\n        })\n        .state(\"commish\", {\n            url: \"/commish\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: \"vm\"\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('commish.html');\n                    },\n                    controller: \"LeagueController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        })\n        .state(\"availablePlayers\", {\n            url: \"/availablePlayers\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: \"vm\",\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('availablePlayers.html');\n                    },\n                    controller: \"PlayerController\",\n                    controllerAs: \"vm\",\n                }\n            }\n        })\n        .state(\"draftboard\", {\n            url: \"/draftboard\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: \"vm\"\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('draftBoard.html');\n                    },\n                    controller: \"PlayerController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        })\n        .state(\"chat\", {\n            url: \"/chat\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: \"vm\"\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('chat.html');\n                    },\n                    controller: \"ChatController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        });\n});\n\nangular.module('DraftApp').run(function ($transitions, $location, $state, $q, AuthenticationService) {\n    $transitions.onStart({ to: '*' }, function (trans) {\n        let AuthService = trans.injector().get('AuthenticationService');\n        if (trans.to().authenticate && !AuthService.isLoggedIn()) {\n            $state.transitionTo('login');\n        }\n    });\n});","angular.module('AppController', []).controller('AppController', function ($scope, $location, $q, $state, AuthenticationService, DraftService, LeagueService) {\n\n  let vm = this;\n  \n  vm.isLoggedIn = false;\n  let getLoginStatus = AuthenticationService.isLoggedIn();\n  getLoginStatus.then((response) => {\n    if (response == true) {\n      vm.isLoggedIn = true;\n    }\n    if (response == false) {\n      vm.isLoggedIn = false;\n    }\n  }, (error) => {\n    console.log(error);\n  });\n      \n  vm.currentUser = {};\n  let getCurrentUser = AuthenticationService.currentUser();\n  getCurrentUser.then((response) => {\n    vm.currentUser = response;\n  }, (error) => {\n    console.log(error);\n  });\n\n    // vm.currentLeague = LeagueService.currentLeague();\n\n\n    //Sets A League and Returns League Info\n    vm.setCurrentLeague = function(leagueId){\n      return LeagueService.setCurrentLeagueId(leagueId)\n        .then(function(){\n          return LeagueService.getLeague()\n            .then(function(){\n              $state.reload();\n            }, function(error){\n              console.log(error);\n            });\n        }, function(error){\n          console.log(error);\n        });\n    };\n\n    //Dev Tools (Not For Production)\n    vm.deleteAllDBs = function(){\n      DraftService.deleteAllPlayers();\n      AuthenticationService.deleteAllUsers();\n      LeagueService.deleteAllChat();\n      DraftService.deleteAllDrafts();\n    };\n  \n    vm.downloadPlayers = function(){\n      DraftService.downloadPlayers(function(data){\n        console.log(data);\n      });\n    };\n  \n    vm.deleteAllPlayers = function(){\n      DraftService.deleteAllPlayers(function(data){\n        console.log(data);\n      });\n    };\n  \n    vm.deleteAllUsers = function(){\n      AuthenticationService.deleteAllUsers();\n      $location.path(\"/login\");\n    };\n  \n    vm.deleteAllChat = function(){\n      LeagueService.deleteAllChat();\n    };\n  \n    vm.deleteAllLeagues = function(){\n      LeagueService.deleteAllLeagues();\n    };\n  \n    vm.deleteAllDrafts = function(){\n      DraftService.deleteAllDrafts();\n    };\n  \n    vm.currentUserLogOut = function(){\n      AuthenticationService.currentUserLogOut();\n    };\n});","angular.module('ngEnter', []).directive('ngEnter', function ($scope, element, attrs) {\n\n    element.bind(\"keypress\", function (event) {\n        if (event.which === 13) {\n            $scope.$apply(function () {\n                $scope.$eval(attrs.ngEnter);\n            });\n            event.preventDefault();\n        }\n    });\n});\n\nangular.module('ChatController', []).controller('ChatController', function ($scope, AuthenticationService, LeagueService, ChatFactory) {\n\n    var vm = this;\n\n    vm.currentUser = AuthenticationService.currentUser();\n\n    vm.currentLeague = LeagueService.currentLeague();\n\n    vm.messages = [];\n\n    vm.message = \"\";\n    vm.filterText = \"\";\n\n    \n    var socket = io.connect();\n\n    socket.on(\"pastMessages\", function (data) {\n        $scope.$apply(function(){\n            vm.messages = data.reverse();\n        });\n    });\n\n    socket.on(\"receiveMessage\", function(data){\n        $scope.$apply(function(){\n            vm.messages.unshift(data);\n        });\n    });\n\n    vm.sendMessage = function () {\n        // var chatMessage = {\n        //     \"_id\": vm.currentLeague.chat._id,\n        //     \"userName\": vm.currentUser.firstName,\n        //     \"message\": vm.message\n        // };\n        LeagueService.postMessage(vm.message, function (result, err) {\n            if (err) {\n                window.alert(\"Error!\");\n            }\n            // else{\n            //     socket.emit(\"receiveMessage\", result);\n            //     vm.message = \"\";\n            // }\n        });\n    };\n});","angular.module('DashboardController', []).controller('DashboardController', function ($scope, $q, $location, $view, $state, AuthenticationService) {\n    let vm = this;\n\n    vm.currentUser = {};\n    let getCurrentUser = AuthenticationService.currentUser();\n    getCurrentUser.then((response) => {\n        vm.currentUser = response;\n    }, (error) => {\n        console.log(error);\n    });\n\n});","angular.module('LeagueController', []).controller('LeagueController', function ($rootScope, $scope, $q, $view, $uibModal, $confirm, $location, $state, $document, AuthenticationService, LeagueService) {\n\n    let vm = this;\n\n    //Current User\n    vm.currentUser = {};\n    let getCurrentUser = AuthenticationService.currentUser();\n    getCurrentUser.then((response) => {\n        vm.currentUser = response;\n    }, (error) => {\n        console.log(error);\n    });\n\n    //Current League\n    vm.league = {};\n    let getLeague = LeagueService.getLeague();\n    getLeague.then((response) => {\n        vm.league = response;\n    }, (error) => {\n        console.log(error);\n    });\n\n    //Commish Auth\n    vm.isCommish = () => {\n        if (vm.currentUser._id == vm.league.commish_id[0]) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n\n\n    //Create New League\n    vm.createNewLeague = function () {\n        var newLeagueInfo = {\n            \"leagueName\": vm.newLeague.leagueName,\n            \"leagueSize\": vm.newLeague.leagueSize,\n            \"user_id\": vm.currentUser._id\n        };\n        return LeagueService.createNewLeague(newLeagueInfo)\n            .then((response) => {\n                $state.transitionTo('dashboard');\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    //Join League\n    vm.joinLeague = function () {\n        let code = \"\";\n        for (var x in vm.data) {\n            code += vm.data[x];\n        }\n        return LeagueService.joinLeague(code)\n            .then((response) => {\n                $state.transitionTo('dashboard');\n            }, (error) => {\n                console.log(error);\n            });\n    };\n    vm.moveFocus = (nextId) => {\n        $('#' + nextId).focus();\n    };\n\n    //New League Message\n    vm.newMessage = () => {\n        console.log(\"New Message\");\n        // let parentElem = parentSelector ? angular.element($document[0].querySelector('.modal-demo ' + parentSelector)) : undefined;\n        // console.log(parentElem)\n        let modalInstance = $uibModal.open({\n            animation: true,\n            size: \"lg\",\n            templateUrl: 'newMessageModal.html',\n            // controller: 'LeagueController',\n            // transclude: false,\n            // backdrop: \"static\",\n            // ariaLabelledBy: 'modal-title',\n            // ariaDescribedBy: 'modal-body',\n            // appendTo: \"newMessageModal.html\",\n            // size: size\n            // component: 'modalComponent',\n            // resolve: {\n            //     items: function () {\n            //         return $ctrl.items;\n            //     }\n            // }\n        });\n\n        modalInstance.result.then(($view) => {\n            console.log($view);\n        }, () => {\n            console.log()\n        });\n\n        modalInstance.opened.then(() => {\n            console.log(\"Modal Open\")\n        });\n\n        modalInstance.rendered.then(() => {\n            console.log(\"Modal Rendered\");\n        });\n    }\n}).directive('modalBackdrop', ['$timeout', function ($timeout) {\n    return {\n        restrict: 'EA',\n        replace: true,\n        templateUrl: 'template/modal/backdrop.html',\n        link: function (scope) {\n\n            scope.animate = false;\n\n            //trigger CSS transitions\n            $timeout(function () {\n                scope.animate = true;\n            });\n        }\n    };\n}]).directive('modalWindow', ['$modalStack', '$timeout', function ($modalStack, $timeout) {\n    return {\n        restrict: 'EA',\n        scope: {\n            index: '@',\n            animate: '='\n        },\n        replace: true,\n        transclude: true,\n        templateUrl: function (tElement, tAttrs) {\n            return tAttrs.templateUrl || 'template/modal/window.html';\n        },\n        link: function (scope, element, attrs) {\n            element.addClass(attrs.windowClass || '');\n            scope.size = attrs.size;\n\n            $timeout(function () {\n                // trigger CSS transitions\n                scope.animate = true;\n                // focus a freshly-opened modal\n                element[0].focus();\n            });\n\n            scope.close = function (evt) {\n                var modal = $modalStack.getTop();\n                if (modal && modal.value.backdrop && modal.value.backdrop != 'static' && (evt.target === evt.currentTarget)) {\n                    evt.preventDefault();\n                    evt.stopPropagation();\n                    $modalStack.dismiss(modal.key, 'backdrop click');\n                }\n            };\n        }\n    };\n}])\n;","angular.module('PlayerController', []).controller('PlayerController', function ($scope, $location, $confirm, $timeout, $q, DraftFactory, AuthenticationService, DraftService, LeagueService) {\n\n  var vm = this;\n\n  vm.available_players = [];\n\n  vm.allDraftedPlayers = [];\n\n  vm.message = \"\";\n\n  vm.currentUser = AuthenticationService.currentUser();\n\n  vm.currentLeague = LeagueService.currentLeague();\n\n  vm.setColorOnClock = function(team){\n      if(vm.currentLeague.onClock === team._id){\n        return {\"font-weight\": \"bold\"};\n      }\n  };\n\n  vm.getPlayers = function (position) {\n    DraftFactory.getPlayers(position, function (data) {\n      vm.available_players = data;\n    });\n  };\n\n  vm.startDraft = function(id){\n    var draftPackage = {\n      draftId: vm.currentLeague.draft._id,\n      draftOrder: vm.currentLeague.draftOrder\n\n    };\n    return DraftService.startDraft(draftPackage)\n      .then(function(response){\n        console.log(response);\n      }, function(error){\n        console.log(error);\n      });\n  };\n\n  vm.draftPlayer = function (id) {\n    if(DraftService.isOnClock() === true){\n\n      var draftPackage = {\n        draftId: vm.currentLeague.draft._id,\n        leagueId: vm.currentLeague._id,\n        team: vm.currentUser._id,\n        pick: id,\n      };\n      \n      return DraftService.draftPlayer(draftPackage)\n        .then(function(response){\n          console.log(response);\n          if(response === true){\n            $location.path(\"/draftBoard\");\n          }\n          if(response === false){\n            console.log(\"Error in PlayerControiller draftPlayer\");\n          }\n        }, function(error){\n          console.log(error);\n        });\n    }\n    if(DraftService.isOnClock() === false){\n      vm.message = \"You Are Not On The Clock!\";\n      vm.checkBox.value = false;\n      $timeout(function(){\n        vm.message = false;\n      }, 5000);\n    }\n  };\n\n  var getDraftedPlayers = function () {\n    DraftFactory.getDraftedPlayers(function (data) {\n      vm.allDraftedPlayers = data;\n    });\n  };\n  getDraftedPlayers();\n});\n","angular.module('UserController', []).controller('UserController', function ($scope, $q, $view, $location, $state, AuthenticationService, LeagueService) {\n    let vm = this;\n\n    vm.currentUser = {};\n    let getCurrentUser = AuthenticationService.currentUser();\n    getCurrentUser.then((response) => {\n        vm.currentUser = response;\n    }, (error) => {\n        console.log(error);\n    });\n\n    vm.currentLeague = LeagueService.league;\n\n    vm.message = \"\";\n\n    vm.tab = 1;\n\n    vm.setTab = function (tabId) {\n        vm.tab = tabId;\n    };\n\n    vm.isSet = function (tabId) {\n        return vm.tab === tabId;\n    };\n\n    vm.registerInfo = {\n        email: \"\",\n        userName: \"\",\n        firstName: \"\",\n        password: \"\"\n    };\n\n    vm.loginInfo = {\n        email: \"\",\n        password: \"\"\n    };\n\n    vm.registerNew = function () {\n        return AuthenticationService.register(vm.registerInfo)\n            .then((response) => {\n                $state.transitionTo('dashboard');\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    vm.login = function () {\n        return AuthenticationService.login(vm.loginInfo)\n            .then(function (response) {\n                if (response == \"Token Set!\") {\n                    $state.transitionTo('dashboard');\n                }\n                else {\n                    vm.message = response;\n                }\n            }, function (error) {\n                vm.message = \"Error: \" + error.status;\n                console.log(error);\n            });\n    };\n\n    vm.onSignIn = (googleUser) => {\n        console.log(\"Fired onSign In\");\n        if (googleUser) {\n            var profile = googleUser.getBasicProfile();\n            console.log(\"Email: \" + profile.getEmail());\n        }\n    };\n    \n    vm.dismissError = () => {\n        console.log(\"Dismiss\");\n        vm.message = \"\";\n    }\n\n});\n\n","angular.module(\"ChatFactory\", []).factory(\"ChatFactory\", function($http){\n\n    var factory = {};\n\n    factory.postMessage = function(message, callback){\n        $http.post(\"/message\", message).success(function(data, status){\n            callback(data, false);\n        })\n        .error(function(data, status){\n            callback(data, true);\n        });\n    };\n\n    factory.deleteAllChat = function(){\n        $http.post(\"/deleteAllChat\").success(function(data){\n            console.log(data);\n        });\n    };\n\n    return factory;\n});","angular.module(\"DraftFactory\", []).factory(\"DraftFactory\", function($http, $q){\n    var factory = {};\n\n    factory.downloadPlayers = function(){\n        $http.post(\"/downloadPlayers\").success(function(data){\n            console.log(data);\n        });\n    };\n\n    factory.getPlayers = function(position, callback){\n        $http.get(\"/getPlayers/\", {params: {position: position}}).success(function(output){\n            callback(output);\n        });\n    };\n\n    factory.deleteAllPlayers = function(callback){\n        $http.post(\"/deleteAllPlayers\").success(function(data){\n            callback(data);\n        });\n    };\n\n    factory.startDraft = function(draftPackage){\n        return $http.post(\"/startDraft\", draftPackage)\n            .then(function(response){\n                console.log(response);\n            }, function(error){\n                console.log(error);\n            });\n    };\n\n    factory.draftPlayer = function(draftPackage){\n        return $http.post(\"/draftPlayer\", draftPackage)\n            .then(function(response){\n                return response;\n            }, function(error){\n                console.log(error);\n            });\n    };\n\n    factory.getDraftedPlayers = function(callback){\n        $http.get(\"/getDraftedPlayers\").success(function(output){\n            callback(output);\n        });\n    };\n\n    factory.deleteAllDrafts = function(){\n        return $http.post(\"/deleteAllDrafts\");\n    };\n\n    return factory;\n});","angular.module(\"LeagueFactory\", []).factory(\"LeagueFactory\", function ($http) {\n    let factory = {};\n\n    factory.createLeague = function (newLeagueInfo) {\n        return $http.post(\"/createLeague\", newLeagueInfo)\n            .then(function (response) {\n                console.log(response);\n                return response;\n            }, function (error) {\n                console.log(error);\n                return error;\n            });\n    };\n\n    factory.getLeague = (id) => {\n        return $http.get(\"/getLeague/\", { params: { _id: id } })\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    factory.getAllLeagues = function () {\n        return $http.get(\"/getAllLeagues\")\n            .then(function (response) {\n                return response.data;\n            }, function (error) {\n                console.log(error);\n            });\n    };\n\n    factory.joinLeague = function (leaguePack) {\n        return $http.patch(\"/joinLeague/\", leaguePack)\n            .then(function (response) {\n                return response;\n            }, function (error) {\n                console.log(error);\n            });\n    };\n\n    factory.deleteAllLeagues = function () {\n        return $http.post(\"/leaguesClearAll\")\n            .then(function (response) {\n            }, function (error) {\n                console.log(error);\n            });\n        // .success(function(data){\n        //     console.log(data);\n        // });\n    };\n\n    return factory;\n});","angular.module('UserFactory', []).factory('UserFactory', function ($http, $q) {\n  var factory = {};\n\n  factory.register = function (registerInfo) {\n    return $http.post(\"/register\", registerInfo)\n      .then((response) => {\n        console.log(response);\n        return response;\n      }, (error) => {\n        console.log(error);\n        return error;\n    });\n  };\n\n  factory.login = function (loginInfo) {\n    return $http.post(\"/login\", loginInfo)\n      .then(function (response) {\n        return response;\n      }, (error) => {\n        return error;\n      });\n  };\n\n  factory.deleteAllUsers = function (callback) {\n    $http.post(\"/deleteAllUsers\").success(function (data) {\n      console.log(data);\n      callback(data);\n    });\n  };\n\n  factory.getUserLeague = function (callback) {\n    $http.get(\"/getUserLeagues\").success(function (data) {\n      console.log(data);\n      callback(data);\n    });\n  };\n\n  return factory;\n});","angular.module('AuthenticationService', []).service('AuthenticationService', function ($window, $state, $rootScope, $q, UserFactory) {\n  let service = {};\n\n  const tokenStorage = {\n    setToken: (key, token) => {\n      return Promise.resolve().then(() => {\n        $window.localStorage.setItem(key, token);\n      });\n    },\n    getToken: (key) => {\n      return Promise.resolve().then(() => {\n        return $window.localStorage.getItem(key);\n      });\n    },\n    removeToken: (key) => {\n      return Promise.resolve().then(() => {\n        $window.localStorage.removeItem(key);\n      });\n    }\n  }\n\n  service.isLoggedIn = () => {\n    return tokenStorage.getToken('user-token')\n      .then((token) => {\n        if (token) {\n          let payload = token.split('.')[1];\n          payload = $window.atob(payload);\n          payload = JSON.parse(payload);\n          return payload.exp > Date.now() / 1000;\n        }\n        else {\n          return false;\n        }\n      }, (error) => {\n        console.log(error);\n      });\n  };\n\n  service.currentUser = function () {\n    return service.isLoggedIn()\n      .then((response) => {\n        if (response){\n          return tokenStorage.getToken('user-token')\n            .then((token) => {\n              let payload = token.split('.')[1];\n              payload = $window.atob(payload);\n              payload = JSON.parse(payload);\n\n              return {\n                _id: payload._id,\n                userName: payload.userName,\n                firstName: payload.firstName,\n                email: payload.email,\n                leagues: payload.leagues\n              };\n            }, (error) => {\n              console.log(error);\n            });\n        }\n      }, (error) => {\n        console.log(error);\n      });\n  };\n\n  service.updateToken = function (token) {\n    return tokenStorage.removeToken('user-token')\n      .then(() => {\n        return tokenStorage.setToken('user-token', token)\n          .then(() => {\n            return \"Token Set!\";\n          }, (error) => {\n            console.log(error);\n          })\n      }, (error) => {\n        console.log(error);\n      });\n  };\n\n  service.register = function (user, callback) {\n    return UserFactory.register(user)\n      .then((response) => {\n        if (response.data.token) {\n          return tokenStorage.setToken('user-token', response.data.token)\n            .then(() => {\n              return \"Token Set!\";\n            });\n        }\n        else if (response.message) {\n          return reponse.message;\n        }\n        // else {\n        //   callback('Unknown Error!');\n        // }\n      }, (error) => {\n        console.log(error);\n      });\n  };\n\n  service.login = function (user) {\n    return UserFactory.login(user)\n      .then(function (response) {\n        if (response.data.token) {\n          return tokenStorage.setToken('user-token', response.data.token)\n            .then(() => {\n              return \"Token Set!\"\n            }, (error) => {\n              console.log(error);\n            });\n        } else {\n          if (response.status == 401) {\n            return \"Incorrect Username or Password!\";\n          }\n          else {\n            return \"Unknown Error!\"\n          }\n        }\n      }, function (err) {\n        console.log(err);\n      });\n  };\n\n  service.currentUserLogOut = function () {\n    $window.localStorage.clear();\n    $rootScope = $rootScope.$new(true);\n    $location.path(\"/\");\n    console.log(\"Logout\");\n  };\n\n  service.deleteAllUsers = function () {\n    UserFactory.deleteAllUsers();\n    $window.localStorage.clear();\n    $rootScope = $rootScope.$new(true);\n    $location.path(\"/login\");\n  };\n\n  return service;\n});\n","angular.module('DraftService', []).service('DraftService', function ($window, $state, $q, DraftFactory, AuthenticationService, LeagueService) {\n    var service = {};\n\n    var vm = this;\n\n    // vm.currentUser = AuthenticationService.currentUser();\n\n    // vm.isLoggedIn = AuthenticationService.isLoggedIn();\n\n    // vm.currentLeague = LeagueService.currentLeague();\n\n    service.startDraft = function(draftPackage){\n        return DraftFactory.startDraft(draftPackage)\n            .then(function(reponse){\n                console.log(response);\n            }, function(error){\n                console.log(error);\n            });\n    };\n\n    service.isOnClock = function(){\n        if(vm.currentLeague.onClock === vm.currentUser._id){\n            return true;\n        }\n        else{\n            return false;\n        }\n    };\n\n    service.draftPlayer = function(draftPackage){\n        return DraftFactory.draftPlayer(draftPackage)\n            .then(function(response){\n                if(response.statusText === \"OK\"){\n                    return true;\n                }\n                else{\n                    return false;\n                }\n            }, function(error){\n                console.log(error);\n            });\n    };\n\n    service.undraftedPlayers = function () {\n\n    };\n\n    service.draftedPlayers = function () {\n\n    };\n\n    service.downloadPlayers = function(){\n        DraftFactory.downloadPlayers();\n    };\n\n    service.deleteAllChat = function(){\n        ChatFactory.deleteAllChat();\n    };\n\n    service.deleteAllDrafts = function(){\n        DraftFactory.deleteAllDrafts();\n    };\n\n    service.deleteAllPlayers = function(callback){\n        DraftFactory.deleteAllPlayers(function(data){\n            callback(data);\n        });\n    };\n\n    return service;\n});","angular.module(\"LeagueService\", []).service(\"LeagueService\", function ($window, $state, $stateParams, $q, $location, LeagueFactory, ChatFactory, AuthenticationService) {\n    let service = {};\n    let vm = this;\n\n    //Current User\n    vm.currentUser = {};\n    let getCurrentUser = AuthenticationService.currentUser();\n    getCurrentUser.then((response) => {\n        vm.currentUser = response;\n    }, (error) => {\n        console.log(error);\n    });\n\n    //Current League\n    vm.league = {};\n    service.getLeague = function() {\n        return LeagueFactory.getLeague($stateParams.leagueID)\n            .then((response) => {\n                if (response.data) {\n                    return response.data;\n                }\n            }, (error) => {\n                console.log(error);\n            });\n    };\n    // let getLeague = LeagueService.getLeague();\n    // getLeague.then((response) => {\n    //     vm.league = response;\n    // }, (error) => {\n    //     console.log(error);\n    //     });\n    \n    \n    service.createNewLeague = function (newLeagueInfo) {\n        return LeagueFactory.createLeague(newLeagueInfo)\n            .then((response) => {\n                return AuthenticationService.updateToken(response.data.token)\n                    .then(() => {\n                        $state.transitionTo('dashboard');\n                    }, (error) => {\n                        console.log(error);\n                    });\n            }, (error) => {\n                console.log(error);\n            });\n    };\n    \n    service.joinLeague = function (code) {\n        let leaguePack = {\n            \"user_id\": vm.currentUser._id,\n            \"league_code\": code\n        };\n        return LeagueFactory.joinLeague(leaguePack)\n            .then((response) => {\n                if (response.data.token) {\n                    return AuthenticationService.updateToken(response.data.token)\n                        .then(() => {\n                            return \"League Joined\";\n                        }, (error) => {\n                            console.log(error);\n                        });\n                }\n                else {\n                    return reponse.message;\n                }\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n\n    // vm.isLoggedIn = AuthenticationService.isLoggedIn();\n\n    // var saveCurrentLeagueId = function (leagueId) {\n    //     $q.resolve($window.localStorage[\"current-league-id\"] = leagueId);\n    // };\n\n    // var currentLeagueId = function () {\n    //     if ($window.localStorage[\"current-league-id\"]) {\n    //         return $window.localStorage[\"current-league-id\"];\n    //     }\n    //     else {\n    //         return false;\n    //     }\n    // };\n\n    // var saveCurrentLeague = function (league) {\n    //     if ($window.localStorage[\"current-league\"]) {\n    //         $window.localStorage.removeItem(\"current-league\");\n    //         $window.localStorage.setItem(\"current-league\", JSON.stringify(league));\n    //     }\n    //     else {\n    //         $window.localStorage.setItem(\"current-league\", JSON.stringify(league));\n    //     }\n    // };\n\n    // service.currentLeague = function () {\n    //     var theLeague = JSON.parse($window.localStorage.getItem(\"current-league\"));\n    //     return theLeague;\n    // };\n\n    // service.setCurrentLeagueId = function (leagueId) {\n    //     if (leagueId) {\n    //         return $q.when(saveCurrentLeagueId(leagueId));\n    //     }\n    // };\n\n    // service.getCurrentLeagueId = function () {\n    //     if (currentLeagueId) {\n    //         return currentLeagueId;\n    //     }\n    // };\n\n    \n\n    \n\n    \n\n    service.postMessage = function (message) {\n        var theLeague = service.currentLeague();\n\n        var chatMessage = {\n            \"_id\": theLeague.chat._id,\n            \"userName\": vm.currentUser.firstName,\n            \"message\": message\n        };\n\n        ChatFactory.postMessage(chatMessage, function (result, err) {\n            if (err) {\n                console.log(err);\n            }\n            if (result) {\n                console.log(result);\n            }\n        });\n    };\n\n    service.deleteAllLeagues = function () {\n        LeagueFactory.deleteAllLeagues();\n    };\n\n    service.deleteAllChat = function () {\n        ChatFactory.deleteAllChat();\n    };\n\n    return service;\n});"]}