{"version":3,"sources":["app.js","controllers/AppController.js","controllers/ChatController.js","controllers/DashboardController.js","controllers/LeagueController.js","controllers/PlayerController.js","controllers/UserController.js","factories/ChatFactory.js","factories/DraftFactory.js","factories/LeagueFactory.js","factories/UserFactory.js","services/AuthenticationService.js","services/DraftService.js","services/LeagueService.js"],"names":["DraftApp","angular","module","$urlRouterProvider","config","state","$stateProvider","url","content","templateProvider","$templateCache","controller","views","header","get","controllerAs","authenticate","templateUrl","run","$rootScope","$location","$state","AuthenticationService","transitionTo","event","toState","toParams","fromState","fromParams","isLoggedIn","console","log","$scope","$q","DraftService","LeagueService","vm","this","currentUser","currentLeague","appViewChange","view","path","setCurrentLeague","leagueId","setCurrentLeagueId","then","getLeague","reload","error","setColor","league","_id","font-weight","deleteAllDBs","deleteAllPlayers","deleteAllUsers","deleteAllChat","deleteAllDrafts","downloadPlayers","data","deleteAllLeagues","currentUserLogOut","directive","element","attrs","bind","which","$apply","$eval","ngEnter","preventDefault","ChatFactory","messages","message","filterText","socket","io","connect","on","reverse","unshift","sendMessage","postMessage","result","err","window","alert","$view","$confirm","allLeagues","createNewLeagueView","findLeagueView","getAllLeagues","leagues","leagueViewChange","createNewLeague","newLeagueInfo","leagueName","newLeague","userId","joinLeague","callback","status","$timeout","DraftFactory","available_players","allDraftedPlayers","setColorOnClock","team","onClock","getPlayers","position","startDraft","id","draftPackage","draftId","draft","draftOrder","response","draftPlayer","isOnClock","pick","checkBox","value","getDraftedPlayers","loginView","registerView","tab","setTab","tabId","isSet","userViewChange","registerInfo","email","userName","firstName","password","loginInfo","registerNew","register","login","dismissError","factory","$http","post","success","params","output","createLeague","token","user","patch","getUserLeague","service","$window","UserFactory","saveToken","localStorage","getToken","payload","split","atob","JSON","parse","exp","Date","now","updateToken","resolve","removeItem","clear","$new","reponse","statusText","undraftedPlayers","draftedPlayers","LeagueFactory","saveCurrentLeagueId","currentLeagueId","saveCurrentLeague","setItem","stringify","getItem","when","getCurrentLeagueId","theLeague","updatedCurrentUser","undefined","x","y","splice","chatMessage","chat"],"mappings":"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","file":"app.js","sourcesContent":["let DraftApp = angular.module(\"DraftApp\", [\"ngRoute\", \"ngMessages\", \"ngAnimate\", \"ui.router\", \"ui.bootstrap\", \"angular-confirm\", \"AppController\", \"AuthenticationService\", \"ChatController\", \"DashboardController\", \"DraftService\", \"LeagueController\", \"LeagueService\", \"PlayerController\", \"UserController\", \"ChatFactory\", \"DraftFactory\", \"LeagueFactory\", \"UserFactory\"]);\n\nDraftApp.config(function($stateProvider, $urlRouterProvider){\n    \n    $urlRouterProvider.otherwise(\"/dashboard\");\n\n    $stateProvider\n        .state(\"welcome\", {\n            url: \"/\",\n            views: {\n                // \"header\":{\n                //     templateUrl: \"/partials/app.html\",\n                //     controller: \"AppController\",\n                //     controllerAs: \"vm\"\n                // },\n                \"content\": {\n                    // templateUrl: \"/partials/welcome.html\",\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('welcome.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        })\n        .state(\"login\", {\n            url:\"/login\",\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    // templateUrl: \"/partials/app.html\",\n                    controller: \"AppController\",\n                    controllerAs: \"vm\",\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('login.html');\n                    },\n                    // templateUrl: \"login.html\",\n                    controller: \"UserController\",\n                    controllerAs: \"vm\"\n                },\n            }\n        })\n        .state('register', {\n            url: \"/register\",\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    // templateUrl: \"/partials/app.html\",\n                    controller: \"AppController\",\n                    controllerAs: 'vm'\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('register.html');\n                    },\n                    // templateUrl: '/partials/register.html',\n                    controller: \"UserController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        })\n        .state(\"dashboard\", {\n            url: \"/dashboard\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    // templateUrl: \"/partials/app.html\",\n                    controller: \"AppController\",\n                    controllerAs: 'vm',\n                    authenticate: true\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('dashboard.html');\n                    },\n                    // templateUrl: '/partials/dashboard.html',\n                    controller: \"UserController\",\n                    controllerAs: \"vm\",\n                    authenticate: true\n                }\n            }\n        })\n        .state(\"settings\", {\n            url: \"/settings\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateUrl: \"/partials/app.html\",\n                    controller: \"AppController\",\n                    controllerAs: 'vm',\n                    authenticate: true\n                },\n                \"content\": {\n                    templateUrl: '/partials/settings.html',\n                    controller: \"UserController\",\n                    controllerAs: \"vm\",\n                    authenticate: true\n                }\n            }\n        })\n        .state(\"commish\", {\n            url: \"/commish\",\n            views: {\n                \"header\":{\n                    templateUrl: \"/partials/app.html\",\n                    controller: \"AppController\",\n                    controllerAs: \"vm\"\n                },\n                \"content\":{\n                    templateUrl: \"/partials/commish.html\",\n                    controller: \"LeagueController\",\n                    controllerAs: \"vm\",\n                    authenticate: true,\n                }\n            }\n        })\n        .state(\"availablePlayers\", {\n            url: \"/availablePlayers\",\n            views: {\n                \"header\":{\n                    templateUrl: \"/partials/app.html\",\n                    controller: \"AppController\",\n                    controllerAs: \"vm\",\n                },\n                \"content\": {\n                    templateUrl: \"/partials/availablePlayers.html\",\n                    controller: \"PlayerController\",\n                    controllerAs: \"vm\",\n                    authenticate: true,\n                }\n            }\n        })\n        .state(\"draftboard\", {\n            url: \"/draftboard\",\n            authenticate: true,\n            views: {\n                \"header\":{\n                    templateUrl: \"/partials/app.html\",\n                    controller: \"AppController\",\n                    controllerAs: \"vm\"\n                },\n                \"content\": {\n                    templateUrl: \"/partials/draftBoard.html\",\n                    controller: \"PlayerController\",\n                    controllerAs: \"vm\",\n                    authenticate: true\n                }\n            }\n        })\n        // .state('')\n        .state(\"chatroom\", {\n            url: \"/chat\",\n            views: {\n                \"header\":{\n                    templateUrl: \"/partials/app.html\",\n                    controller: \"AppController\",\n                    controllerAs: \"vm\"\n                },\n                \"content\": {\n                    templateUrl: \"/partials/chat.html\",\n                    controller: \"ChatController\",\n                    controllerAs: \"vm\",\n                    authenticate: true\n                }\n            }\n        });\n});\n\nDraftApp.run(function($rootScope, $location, $state, AuthenticationService){\n    $rootScope.$on(\"$stateChangeStart\", function (event, toState, toParams, fromState, fromParams) {\n        // console.log(toState);\n        // console.log(AuthenticationService.isLoggedIn());\n        if (toState.authenticate && !AuthenticationService.isLoggedIn()) {\n            console.log(\"Go To Login!\");\n            // $location.path(\"/login\");\n            $state.transitionTo('login');\n        }\n    });\n});\n\nDraftApp.run(function ($templateCache) {\n    \n});","angular.module('AppController', []).controller('AppController', function ($scope, $location, $q, $state, AuthenticationService, DraftService, LeagueService) {\n\n    var vm = this;\n\n    vm.isLoggedIn = AuthenticationService.isLoggedIn();\n\n    vm.currentUser = AuthenticationService.currentUser();\n\n    vm.currentLeague = LeagueService.currentLeague();\n\n    //Changes Views\n    vm.appViewChange = function(view){\n      if(vm.isLoggedIn === true){\n        if(view == \"/availablePlayers\" | view == \"/draftBoard\" | \"/chat\"){\n          $location.path(view);\n        }\n        else{\n          $location.path(view);\n        }  \n      }\n      else{\n        $location.path(\"/login\");\n      }\n    };\n\n    //Sets A League and Returns League Info\n    vm.setCurrentLeague = function(leagueId){\n      return LeagueService.setCurrentLeagueId(leagueId)\n        .then(function(){\n          return LeagueService.getLeague()\n            .then(function(){\n              $state.reload();\n            }, function(error){\n              console.log(error);\n            });\n        }, function(error){\n          console.log(error);\n        });\n    };\n\n    //Sets Current League To Bold\n    vm.setColor = function(league){\n      var currentLeague = LeagueService.currentLeague();\n      if(currentLeague._id === league._id){\n        return {\"font-weight\": \"bold\"};\n      }\n    };\n\n    //Dev Tools (Not For Production)\n    vm.deleteAllDBs = function(){\n      DraftService.deleteAllPlayers();\n      AuthenticationService.deleteAllUsers();\n      LeagueService.deleteAllChat();\n      DraftService.deleteAllDrafts();\n    };\n  \n    vm.downloadPlayers = function(){\n      DraftService.downloadPlayers(function(data){\n        console.log(data);\n      });\n    };\n  \n    vm.deleteAllPlayers = function(){\n      DraftService.deleteAllPlayers(function(data){\n        console.log(data);\n      });\n    };\n  \n    vm.deleteAllUsers = function(){\n      AuthenticationService.deleteAllUsers();\n      $location.path(\"/login\");\n    };\n  \n    vm.deleteAllChat = function(){\n      LeagueService.deleteAllChat();\n    };\n  \n    vm.deleteAllLeagues = function(){\n      LeagueService.deleteAllLeagues();\n    };\n  \n    vm.deleteAllDrafts = function(){\n      DraftService.deleteAllDrafts();\n    };\n  \n    vm.currentUserLogOut = function(){\n      AuthenticationService.currentUserLogOut();\n    };\n  \n});","angular.module('ngEnter', []).directive('ngEnter', function ($scope, element, attrs) {\n\n    element.bind(\"keypress\", function (event) {\n        if (event.which === 13) {\n            $scope.$apply(function () {\n                $scope.$eval(attrs.ngEnter);\n            });\n            event.preventDefault();\n        }\n    });\n});\n\nangular.module('ChatController', []).controller('ChatController', function ($scope, AuthenticationService, LeagueService, ChatFactory) {\n\n    var vm = this;\n\n    vm.currentUser = AuthenticationService.currentUser();\n\n    vm.currentLeague = LeagueService.currentLeague();\n\n    vm.messages = [];\n\n    vm.message = \"\";\n    vm.filterText = \"\";\n\n    \n    var socket = io.connect();\n\n    socket.on(\"pastMessages\", function (data) {\n        $scope.$apply(function(){\n            vm.messages = data.reverse();\n        });\n    });\n\n    socket.on(\"receiveMessage\", function(data){\n        $scope.$apply(function(){\n            vm.messages.unshift(data);\n        });\n    });\n\n    vm.sendMessage = function () {\n        // var chatMessage = {\n        //     \"_id\": vm.currentLeague.chat._id,\n        //     \"userName\": vm.currentUser.firstName,\n        //     \"message\": vm.message\n        // };\n        LeagueService.postMessage(vm.message, function (result, err) {\n            if (err) {\n                window.alert(\"Error!\");\n            }\n            // else{\n            //     socket.emit(\"receiveMessage\", result);\n            //     vm.message = \"\";\n            // }\n        });\n    };\n});","angular.module('DashboardController', []).controller('DashboardController', function ($scope, $view, $location, $state) {\n    let vm = this;\n\n    // vm.currentUser = AuthenticationService.currentUser();\n\n    // vm.allLeagues = LeagueService.getAllLeagues();\n\n    \n});","angular.module('LeagueController', []).controller('LeagueController', function ($scope, $q, $confirm, $location, AuthenticationService, LeagueService) {\n    \n    var vm = this;\n\n    vm.allLeagues = [];\n\n    vm.currentUser = AuthenticationService.currentUser();\n\n    vm.currentLeague = LeagueService.currentLeague();\n\n    vm.createNewLeagueView = false;\n    vm.findLeagueView = false;\n\n    var getAllLeagues = function(){\n        return LeagueService.getAllLeagues()\n            .then(function(leagues){\n                vm.allLeagues = leagues;\n            }, function(error){\n                console.log(error);\n            });\n    };\n\n    // var getUserLeague = function(id){\n    //     LeagueService.getUserLeague(id, function(league){\n    //     });\n    // };\n\n    vm.leagueViewChange = function(view){\n        if(view === \"createNew\"){\n            vm.createNewLeagueView = true;\n            vm.findLeagueView = false;\n        }\n        if(view === \"findLeague\"){\n            return getAllLeagues()\n                .then(function(){\n                    vm.findLeagueView = true;\n                    vm.createNewLeagueView = false;\n                }, function(error){\n                    console.log(error);\n                });\n            \n            \n        }\n    };\n\n    vm.createNewLeague = function(){\n        var newLeagueInfo = {\n            \"leagueName\": vm.newLeague.leagueName,\n            \"userId\": vm.currentUser._id\n        };\n        LeagueService.createNewLeague(newLeagueInfo);\n    };\n\n    vm.joinLeague = function(leagueId, callback){\n        LeagueService.joinLeague(leagueId, function(status){\n            if(status == \"Success\"){\n                console.log(\"Success!\");\n            }\n            else{\n                console.log(\"Error\");\n            }\n        });\n    };\n\n});","angular.module('PlayerController', []).controller('PlayerController', function ($scope, $location, $confirm, $timeout, $q, DraftFactory, AuthenticationService, DraftService, LeagueService) {\n\n  var vm = this;\n\n  vm.available_players = [];\n\n  vm.allDraftedPlayers = [];\n\n  vm.message = \"\";\n\n  vm.currentUser = AuthenticationService.currentUser();\n\n  vm.currentLeague = LeagueService.currentLeague();\n\n  vm.setColorOnClock = function(team){\n      if(vm.currentLeague.onClock === team._id){\n        return {\"font-weight\": \"bold\"};\n      }\n  };\n\n  vm.getPlayers = function (position) {\n    DraftFactory.getPlayers(position, function (data) {\n      vm.available_players = data;\n    });\n  };\n\n  vm.startDraft = function(id){\n    var draftPackage = {\n      draftId: vm.currentLeague.draft._id,\n      draftOrder: vm.currentLeague.draftOrder\n\n    };\n    return DraftService.startDraft(draftPackage)\n      .then(function(response){\n        console.log(response);\n      }, function(error){\n        console.log(error);\n      });\n  };\n\n  vm.draftPlayer = function (id) {\n    if(DraftService.isOnClock() === true){\n\n      var draftPackage = {\n        draftId: vm.currentLeague.draft._id,\n        leagueId: vm.currentLeague._id,\n        team: vm.currentUser._id,\n        pick: id,\n      };\n      \n      return DraftService.draftPlayer(draftPackage)\n        .then(function(response){\n          console.log(response);\n          if(response === true){\n            $location.path(\"/draftBoard\");\n          }\n          if(response === false){\n            console.log(\"Error in PlayerControiller draftPlayer\");\n          }\n        }, function(error){\n          console.log(error);\n        });\n    }\n    if(DraftService.isOnClock() === false){\n      vm.message = \"You Are Not On The Clock!\";\n      vm.checkBox.value = false;\n      $timeout(function(){\n        vm.message = false;\n      }, 5000);\n    }\n  };\n\n  var getDraftedPlayers = function () {\n    DraftFactory.getDraftedPlayers(function (data) {\n      vm.allDraftedPlayers = data;\n    });\n  };\n  getDraftedPlayers();\n});\n","angular.module('UserController', []).controller('UserController', function($scope, $q, $view, $location, $state, AuthenticationService, LeagueService){\n    var vm = this;\n\n    vm.currentUser = AuthenticationService.currentUser();\n\n    vm.currentLeague = LeagueService.currentLeague();\n\n    vm.message = \"\";\n\n    vm.loginView = true;\n    vm.registerView = false;\n\n    vm.tab = 1;\n\n    vm.setTab = function (tabId) {\n        vm.tab = tabId;\n    };\n\n    vm.isSet = function (tabId) {\n        return vm.tab === tabId;\n    };\n\n    vm.userViewChange = function(view){\n        if(view === true){\n            vm.loginView = false;\n            vm.registerView = true;\n        }\n        else{\n            vm.loginView = true;\n            vm.registerView = false;\n        }\n    };\n\n    vm.registerInfo = {\n        email: \"\",\n        userName: \"\",\n        firstName: \"\",\n        password: \"\"\n    };\n\n    vm.loginInfo = {\n        email: \"\",\n        password: \"\"\n    };\n\n    vm.registerNew = function(){\n        AuthenticationService.register(vm.registerInfo, function(data){\n            if(data === \"Success\"){\n                $location.path(\"/dashboard\");\n            }\n            else{\n                vm.message = data;\n            }     \n        });\n    };\n\n    vm.login = function(){\n       return AuthenticationService.login(vm.loginInfo)\n           .then(function (response) {\n               if (response == \"Success\") {\n                   $location.path('/dashboard');\n                    // let theUser = AuthenticationService.currentUser();\n                    // if(theUser.leagues[0] === undefined){\n                    //     $location.path(\"/commish\");\n                    // }\n                    // else{\n                    //     $q.when(LeagueService.setCurrentLeagueId(theUser.leagues[0]._id))\n                    //         .then(function(){\n                    //             return LeagueService.getLeague()\n                    //                 .then(function(response){\n                    //                     $location.path(\"/availablePlayers\");\n                    //                 }, function(error){\n                    //                     console.log(error);\n                    //                 });\n                    //         }, function(error){\n                    //             console.log(error);\n                    //         });\n                    // }             \n                }\n                else{\n                    vm.message = response;\n                    console.log(response);\n                }\n           }, function (error) {\n               vm.message = \"Error: \" + error.status;\n                console.log(error);\n            });\n    };\n\n    function onSignIn(googleUser){\n        console.log(\"Fired onSign In\");\n        if(googleUser){\n            var profile = googleUser.getBasicProfile();\n            console.log(\"Email: \" + profile.getEmail());\n        }\n    };\n    vm.dismissError = ()=>{\n        console.log(\"Dismiss\");\n        vm.message = \"\";\n    }\n\n});\n\n","angular.module(\"ChatFactory\", []).factory(\"ChatFactory\", function($http){\n\n    var factory = {};\n\n    factory.postMessage = function(message, callback){\n        $http.post(\"/message\", message).success(function(data, status){\n            callback(data, false);\n        })\n        .error(function(data, status){\n            callback(data, true);\n        });\n    };\n\n    factory.deleteAllChat = function(){\n        $http.post(\"/deleteAllChat\").success(function(data){\n            console.log(data);\n        });\n    };\n\n    return factory;\n});","angular.module(\"DraftFactory\", []).factory(\"DraftFactory\", function($http, $q){\n    var factory = {};\n\n    factory.downloadPlayers = function(){\n        $http.post(\"/downloadPlayers\").success(function(data){\n            console.log(data);\n        });\n    };\n\n    factory.getPlayers = function(position, callback){\n        $http.get(\"/getPlayers/\", {params: {position: position}}).success(function(output){\n            callback(output);\n        });\n    };\n\n    factory.deleteAllPlayers = function(callback){\n        $http.post(\"/deleteAllPlayers\").success(function(data){\n            callback(data);\n        });\n    };\n\n    factory.startDraft = function(draftPackage){\n        return $http.post(\"/startDraft\", draftPackage)\n            .then(function(response){\n                console.log(response);\n            }, function(error){\n                console.log(error);\n            });\n    };\n\n    factory.draftPlayer = function(draftPackage){\n        return $http.post(\"/draftPlayer\", draftPackage)\n            .then(function(response){\n                return response;\n            }, function(error){\n                console.log(error);\n            });\n    };\n\n    factory.getDraftedPlayers = function(callback){\n        $http.get(\"/getDraftedPlayers\").success(function(output){\n            callback(output);\n        });\n    };\n\n    factory.deleteAllDrafts = function(){\n        return $http.post(\"/deleteAllDrafts\");\n    };\n\n    return factory;\n});","angular.module(\"LeagueFactory\", []).factory(\"LeagueFactory\", function($http){\n    var factory = {};\n\n    factory.createLeague = function(newLeagueInfo){\n        return $http.post(\"/createLeague\", newLeagueInfo)\n            .then(function(token){\n                return token;\n            }, function(error){\n                console.log(error);\n                return error;\n            });\n    };\n\n    factory.getLeague = function(leagueId){\n        return $http.get(\"/getLeague/\", {params: {_id: leagueId}})\n            .then(function(data){\n                return data;\n            }, function(error){\n                console.log(error);\n            });\n    };\n\n    factory.getAllLeagues = function(){\n        return $http.get(\"/getAllLeagues\")\n            .then(function(response){\n                return response.data;\n            }, function(error){\n                console.log(error);\n            });\n    };\n\n    factory.joinLeague = function(user){\n        return $http.patch(\"/joinLeague/\", user)\n            .then(function(response){\n                return response.data.token;\n            }, function(error){\n                console.log(error);\n            });\n    };\n\n    factory.deleteAllLeagues = function(){\n        return $http.post(\"/leaguesClearAll\")\n            .then(function(response){\n            }, function(error){\n                console.log(error);\n            });\n        // .success(function(data){\n        //     console.log(data);\n        // });\n    };\n\n    return factory;\n});","angular.module('UserFactory', []).factory('UserFactory', function ($http, $q) {\n  var factory = {};\n\n  factory.register = function (registerInfo, callback) {\n    $http.post(\"/register\", registerInfo)\n      .success(function (data) {\n      callback(data);\n      }, (error) => {\n        console.log(error);\n    });\n  };\n\n  factory.login = function (loginInfo) {\n    return $http.post(\"/login\", loginInfo)\n      .then(function (response) {\n        return response;\n      }, (error) => {\n        return error;\n      });\n  };\n\n  factory.deleteAllUsers = function (callback) {\n    $http.post(\"/deleteAllUsers\").success(function (data) {\n      console.log(data);\n      callback(data);\n    });\n  };\n\n  factory.getUserLeague = function (callback) {\n    $http.get(\"/getUserLeagues\").success(function (data) {\n      console.log(data);\n      callback(data);\n    });\n  };\n\n  return factory;\n});","angular.module('AuthenticationService', []).service('AuthenticationService', function ($window, $state, $rootScope, $location, $q, UserFactory) {\n  var service = {};\n\n  var saveToken = function (token) {\n    $window.localStorage['user-token'] = token;\n  };\n\n  var getToken = function () {\n    return $window.localStorage['user-token'];\n  };\n\n  service.isLoggedIn = function () {\n    var token = getToken();\n    var payload;\n\n    if (token) {\n      payload = token.split('.')[1];\n      payload = $window.atob(payload);\n      payload = JSON.parse(payload);\n\n      return payload.exp > Date.now() / 1000;\n    }else {\n      return false;\n    }\n  };\n\n  service.currentUser = function () {\n    if (service.isLoggedIn()) {\n      var token = getToken();\n      var payload = token.split('.')[1];\n\n      payload = $window.atob(payload);\n      payload = JSON.parse(payload);\n\n      return {\n        _id: payload._id,\n        userName: payload.userName,\n        firstName: payload.firstName,\n        email: payload.email,\n        leagues: payload.leagues\n      };\n    }\n  };\n\n  service.updateToken = function (token) {\n    $q.resolve($window.localStorage.removeItem('user-token'))\n      .then(function(){\n        saveToken(token);\n        return \"Done\";\n      }, function(error){\n        console.log(error);\n      });\n  };\n\n  service.register = function (user, callback) {\n    UserFactory.register(user, function (data) {\n      if (data.token) {\n        saveToken(data.token);\n        callback('Success');\n      }\n      if (data.message) {\n        callback(data.message);\n      }else {\n        callback('Unknown Error!');\n      }\n    });\n  };\n\n  service.login = function (user) {\n    return UserFactory.login(user)\n      .then(function (response) {\n        if (response.data.token) {\n          saveToken(response.data.token);\n          return 'Success';\n        } else {\n          if (response.status == 401) {\n            return \"Incorrect Username or Password!\";\n          }\n          else {\n            return \"Unknown Error!\"\n          }\n        }\n      }, function (err) {\n        console.log(err);\n      });\n  };\n\n  service.currentUserLogOut = function () {\n    $window.localStorage.clear();\n    $rootScope = $rootScope.$new(true);\n    $location.path(\"/login\");\n    console.log(\"Logout\");\n  };\n\n  service.deleteAllUsers = function () {\n    UserFactory.deleteAllUsers();\n    $window.localStorage.clear();\n    $rootScope = $rootScope.$new(true);\n    $location.path(\"/login\");\n  };\n  // service.currentUserLogOut();\n\n  return service;\n});\n","angular.module('DraftService', []).service('DraftService', function ($window, $state, $q, DraftFactory, AuthenticationService, LeagueService) {\n    var service = {};\n\n    var vm = this;\n\n    vm.currentUser = AuthenticationService.currentUser();\n\n    vm.isLoggedIn = AuthenticationService.isLoggedIn();\n\n    vm.currentLeague = LeagueService.currentLeague();\n\n    service.startDraft = function(draftPackage){\n        return DraftFactory.startDraft(draftPackage)\n            .then(function(reponse){\n                console.log(response);\n            }, function(error){\n                console.log(error);\n            });\n    };\n\n    service.isOnClock = function(){\n        if(vm.currentLeague.onClock === vm.currentUser._id){\n            return true;\n        }\n        else{\n            return false;\n        }\n    };\n\n    service.draftPlayer = function(draftPackage){\n        return DraftFactory.draftPlayer(draftPackage)\n            .then(function(response){\n                if(response.statusText === \"OK\"){\n                    return true;\n                }\n                else{\n                    return false;\n                }\n            }, function(error){\n                console.log(error);\n            });\n    };\n\n    service.undraftedPlayers = function () {\n\n    };\n\n    service.draftedPlayers = function () {\n\n    };\n\n    service.downloadPlayers = function(){\n        DraftFactory.downloadPlayers();\n    };\n\n    service.deleteAllChat = function(){\n        ChatFactory.deleteAllChat();\n    };\n\n    service.deleteAllDrafts = function(){\n        DraftFactory.deleteAllDrafts();\n    };\n\n    service.deleteAllPlayers = function(callback){\n        DraftFactory.deleteAllPlayers(function(data){\n            callback(data);\n        });\n    };\n\n    return service;\n});","angular.module(\"LeagueService\", []).service(\"LeagueService\", function($window, $state, $q, $location, LeagueFactory, ChatFactory, AuthenticationService){\n    var service = {};\n\n    var vm = this;\n\n    vm.currentUser = AuthenticationService.currentUser();\n    vm.isLoggedIn = AuthenticationService.isLoggedIn();\n\n    var saveCurrentLeagueId = function(leagueId){\n        $q.resolve($window.localStorage[\"current-league-id\"] = leagueId);\n    };\n\n    var currentLeagueId = function(){\n        if($window.localStorage[\"current-league-id\"]){\n            return $window.localStorage[\"current-league-id\"];\n        }\n        else{\n            return false;\n        }\n    };\n\n    var saveCurrentLeague = function(league){\n        if($window.localStorage[\"current-league\"]){\n            $window.localStorage.removeItem(\"current-league\");\n            $window.localStorage.setItem(\"current-league\", JSON.stringify(league));\n        }\n        else{\n            $window.localStorage.setItem(\"current-league\", JSON.stringify(league));\n        }\n    };\n\n    service.currentLeague = function(){\n        var theLeague = JSON.parse($window.localStorage.getItem(\"current-league\"));\n        return theLeague;\n    };\n\n    service.setCurrentLeagueId = function(leagueId){\n        if(leagueId){\n            return $q.when(saveCurrentLeagueId(leagueId));\n        }\n    };\n\n    service.getCurrentLeagueId = function(){\n        if(currentLeagueId){\n            return currentLeagueId;\n        }\n    };\n\n    service.getLeague = function(){\n        var theLeague = currentLeagueId();\n        return LeagueFactory.getLeague(theLeague)\n            .then(function(response){\n                $q.resolve(saveCurrentLeague(response.data))\n                    .then(function(){\n                        return \"Done\";\n                    }, function(error){\n                        console.log(error);\n                    });\n            }, function(error){\n                console.log(error);\n            });\n    };\n\n    service.createNewLeague = function (newLeagueInfo) {\n        $q.when(LeagueFactory.createLeague(newLeagueInfo))\n            .then(function(response){\n                $q.when(AuthenticationService.updateToken(response.data.token))\n                    .then(function(){\n                        currentUser = AuthenticationService.currentUser();\n                        $q.when(service.setCurrentLeagueId(currentUser.leagues[0]._id))\n                            .then(function(){\n                                $q.when(service.getLeague())\n                                    .then(function(response){\n                                        $location.path(\"/availablePlayers\");\n                                        return response;\n                                    }, function(error){\n                                        console.log(error);\n                                    });\n                            }, function(error){\n                                console.log(error);\n                            });\n                    }, function(error){\n                        console.log(error);\n                    });\n            }, function(error){\n                console.log(error);\n            });\n    };\n\n    service.joinLeague = function(leagueId){\n        currentUser = AuthenticationService.currentUser();\n        var user = {\n            \"userId\": currentUser._id,\n            \"leagueId\": leagueId\n        };\n        return LeagueFactory.joinLeague(user)\n            .then(function(updateToken){\n                $q.when(AuthenticationService.updateToken(updateToken))\n                    .then(function(){\n                        updatedCurrentUser = AuthenticationService.currentUser();\n                        $q.when(service.setCurrentLeagueId(updatedCurrentUser.leagues[0]._id))\n                            .then(function(){\n                                $q.when(service.getLeague())\n                                    .then(function(){\n                                        $location.path(\"/availablePlayers\");\n                                    }, function(error){\n                                        console.log(error);\n                                    });\n                            }, function(error){\n                                console.log(error);\n                            });\n                    }, function(error){\n                        console.log(error);\n                    });\n            }, function(error){\n                console.log(error);\n            });\n    };\n\n    service.getAllLeagues = function(){\n        currentUser = AuthenticationService.currentUser();\n        if(currentUser.leagues[0] === undefined){\n            return LeagueFactory.getAllLeagues()\n                .then(function(leagues){\n                    return leagues;\n                }, function(error){\n                    console.log(error);\n                });\n        }\n        else{\n            return LeagueFactory.getAllLeagues()\n                .then(function(leagues){\n                    for(var x in leagues){\n                        for(var y in currentUser.leagues){\n                            if(leagues[x]._id == currentUser.leagues[y]._id){\n                                leagues.splice(x, 1);\n                            }\n                        }\n                    }\n                    return leagues;\n                }, function(error){\n                    console.log(error);\n                });\n        }   \n    };\n\n    service.postMessage = function(message){\n        var theLeague = service.currentLeague();\n\n        var chatMessage = {\n            \"_id\": theLeague.chat._id,\n            \"userName\": vm.currentUser.firstName,\n            \"message\": message\n        };\n\n        ChatFactory.postMessage(chatMessage, function(result, err){\n            if(err){\n                console.log(err);\n            }\n            if(result){\n                console.log(result);\n            }\n        });\n    };\n\n    service.deleteAllLeagues = function () {\n        LeagueFactory.deleteAllLeagues();\n    };\n\n    service.deleteAllChat = function(){\n        ChatFactory.deleteAllChat();\n    };\n\n    return service;\n});"]}