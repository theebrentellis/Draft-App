{"version":3,"sources":["app.js","controllers/AppController.js","factories/ChatFactory.js","factories/DraftFactory.js","factories/LeagueFactory.js","factories/UserFactory.js","services/AuthenticationService.js","services/ChatService.js","services/DraftService.js","services/LeagueService.js","controllers/dashboard/DashboardController.js","controllers/draft/DraftBoardController.js","controllers/draft/DraftChatController.js","controllers/draft/DraftController.js","controllers/draft/DraftPickController.js","controllers/league/LeagueCommishController.js","controllers/league/LeagueController.js","controllers/league/LeagueJoinController.js","controllers/league/LeagueNewController.js","controllers/user/UserLoginController.js","controllers/user/UserRegisterController.js","controllers/user/UserSettingsController.js"],"names":["DraftApp","angular","module","config","$urlRouterProvider","otherwise","$stateProvider","state","url","templateProvider","views","content","controller","$templateCache","controllerAs","get","authenticate","header","league","LeagueService","resolve","$stateParams","_draft","DraftService","draftBoard","$transitions","trans","$state","log","error","transitionTo","$location","AuthenticationService","onStart","console","to","response","isLoggedIn","then","getLoginStatus","$rootScope","vm","this","currentUser","downloadPlayers","data","deleteAllPlayers","logOut","factory","$http","getChat","sendMessage","message","post","leagueID","draftID","startDraft","newDraftObject","getDraft","draftPlayer","draftPick","position","player_id","createLeague","newLeagueInfo","joinLeague","leaguePack","patch","getLeague","id","params","_id","newLeagueMessage","messagePack","updateTeamPick","pickPack","deleteLeagueTeam","team","getUserLeagues","user_id","register","registerInfo","login","loginInfo","service","$window","$q","UserFactory","tokenStorage","setToken","key","token","Promise","sessionStorage","setItem","getToken","getItem","removeToken","removeItem","payload","split","atob","JSON","parse","exp","Date","now","userName","firstName","email","leagues","updateToken","user","callback","reponse","status","clear","$new","ChatFactory","io","connect","on","getMessages","messages","DraftFactory","socket","draftStorage","setDraft","draft","removeDraft","stringify","x","teams","length","pick","draftField","size","forEach","_user","push","_loop","joinDraft","onClock","availablePlayers","field","draftList","pDraft","sortedDraft","sorted","y","picks","_player","z","emit","LeagueFactory","defer","currentLeague","createNewLeague","joinPac","currentLeagues","directive","$scope","element","attrs","bind","event","which","$apply","$eval","ngEnter","preventDefault","ChatService","filterText","chatMessage","$confirm","sortType","sortReverse","searchPlayer","filterPosition","isCommish","commish_id","players","positionFilter","player","text","displayName","title","createPicksList","userID","commish","leagueField","draftOrder","currentTeams","index","splice","onDrop","srcList","srcIndex","targetList","targetIndex","updatePick","reload","deleteTeam","team_id","$uibModal","newMessage","modalInstance","open","animation","templateUrl","scope","backdrop","statusText","cancel","dismiss","dismissError","code","league_code","moveFocus","nextId","$","focus","messsage","leagueName","newLeague","leagueSize","password","go","registerNew","tab","setTab","tabId","isSet"],"mappings":"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","file":"app.js","sourcesContent":["let DraftApp = angular.module(\"DraftApp\", [\"ngRoute\", \"ngMessages\", \"ngAnimate\",\n    \"ui.router\", \"ui.bootstrap\", \"dndLists\", \"angular-confirm\",\n    \"AppController\", \"DashboardController\", \"LeagueController\", \"LeagueCommishController\", \"LeagueJoinController\", \"LeagueNewController\", \"UserSettingsController\", \"UserLoginController\", \"UserRegisterController\", \"DraftController\", \"DraftPickController\", \"DraftBoardController\", \"DraftChatController\",\n    \"AuthenticationService\", \"ChatService\", \"DraftService\", \"LeagueService\",\n    \"ChatFactory\", \"DraftFactory\", \"LeagueFactory\", \"UserFactory\"]);\n\nangular.module('DraftApp').config(function ($stateProvider, $urlRouterProvider) {\n\n    $urlRouterProvider.otherwise(\"/\");\n\n    $stateProvider\n        .state(\"index\", {\n            url: \"/\",\n            views: {\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('welcome.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        })\n        .state(\"login\", {\n            url: \"/login\",\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: \"vm\",\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('auth/login.html');\n                    },\n                    controller: \"UserLoginController\",\n                    controllerAs: \"vm\"\n                },\n            }\n        })\n        .state('register', {\n            url: \"/register\",\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: 'vm'\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('auth/register.html');\n                    },\n                    controller: \"UserRegisterController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        })\n        .state(\"settings\", {\n            url: \"/settings\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: 'vm',\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('auth/settings.html');\n                    },\n                    controller: \"UserSettingsController\",\n                    controllerAs: \"vm\",\n                }\n            }\n        })\n        .state(\"dashboard\", {\n            url: \"/dashboard\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: 'vm',\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('dashboard.html');\n                    },\n                    controller: \"DashboardController\",\n                    controllerAs: \"vm\",\n                }\n            }\n        })\n        .state('newLeague', {\n            url: \"/league/new\",\n            authenticate: true,\n            views: {\n                'header': {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: 'vm'\n                },\n                'content': {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('league/league.new.html');\n                    },\n                    controller: \"LeagueNewController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        })\n        .state('joinLeague', {\n            url: \"/league/join\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: 'vm'\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('league/league.join.html');\n                    },\n                    controller: \"LeagueJoinController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        })\n        .state('league', {\n            url: \"/league/:leagueID/index\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: 'vm'\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('league/league.index.html');\n                    },\n                    controller: \"LeagueController\",\n                    controllerAs: \"vm\",\n                    resolve: {\n                        league: function (LeagueService, $stateParams) {\n                            return LeagueService.get();\n                        }\n                    }\n                }\n            }\n        })\n        .state('leagueCommish', {\n            url: \"/league/:leagueID/commish\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: 'vm'\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('league/league.commish.html');\n                    },\n                    controller: \"LeagueCommishController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        })\n        .state(\"draft\", {\n            url: \"/league/:leagueID/draft/:draftID\",\n            authenticate: true,\n            resolve: {\n                _draft: function (DraftService, $stateParams) {\n                    return DraftService.getDraft($stateParams);\n                }\n            },\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: \"vm\"\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('draft/draft.index.html');\n                    },\n                    controller: \"DraftController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        })\n        .state(\"draft.pick\", {\n            url: \"/pick\",\n            authenticate: true,\n            views: {\n                \"draftPick\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('draft/draft.pick.html')\n                    },\n                    controller: \"DraftPickController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        })\n        .state(\"draft.draftBoard\", {\n            url: \"/draftBoard\",\n            authenticate: true,\n            views: {\n                \"draftBoard\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('draft/draft.draftBoard.html');\n                    },\n                    controller: \"DraftBoardController\",\n                    controllerAs: \"vm\",\n                }\n            }\n        })\n        .state(\"draft.chat\", {\n            url: \"/chat\",\n            authenticate: true,\n            views: {\n                \"draftChat\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('draft/draft.chat.html');\n                    },\n                    controller: \"DraftChatController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        });\n});\n\nangular.module('DraftApp').run(function ($transitions, $state, $location, AuthenticationService) {\n\n    $transitions.onStart({ to: '*' }, (trans) => {\n        return AuthenticationService.isLoggedIn().then((response) => {\n            if (trans.to().authenticate && response == false) {\n                $state.transitionTo('login');\n            }\n        }, (error) => {\n            console.log(error);\n        });\n    });\n\n    $transitions.onStart({ to: 'login' }, (trans) => {\n        return AuthenticationService.isLoggedIn().then((response) => {\n            if (response == true) {\n                $state.transitionTo('dashboard');\n            }\n        }, (error) => {\n            console.log(error);\n        });\n    });\n\n});","angular.module('AppController', []).controller('AppController', function ($rootScope, $state, AuthenticationService, DraftService, LeagueService) {\n\n    let vm = this;\n\n    vm.isLoggedIn = false;\n    let getLoginStatus = AuthenticationService.isLoggedIn();\n    getLoginStatus.then((response) => {\n        vm.isLoggedIn = response;\n        // if (response == true) {\n        //   vm.isLoggedIn = true;\n        // }\n        // if (response == false) {\n        //   vm.isLoggedIn = false;\n        // }\n    }, (error) => {\n        console.log(error);\n    });\n\n    vm.currentUser = {};\n    let getCurrentUser = AuthenticationService.currentUser();\n    getCurrentUser.then((response) => {\n        vm.currentUser = response;\n    }, (error) => {\n        console.log(error);\n    });\n\n\n    vm.downloadPlayers = function () {\n        DraftService.downloadPlayers(function (data) {\n            console.log(data);\n        });\n    };\n\n    vm.deleteAllPlayers = function () {\n        DraftService.deleteAllPlayers(function (data) {\n            console.log(data);\n        });\n    };\n\n    vm.logOut = () => {\n        AuthenticationService.logOut();\n    };\n});","angular.module(\"ChatFactory\", []).factory(\"ChatFactory\", function ($http, $stateParams) {\n\n    var factory = {};\n\n    factory.getChat = ($stateParams) => {\n\n    };\n\n    factory.sendMessage = (message) => {\n        $http.post(\"/league/\" + $stateParams.leagueID + \"/draft/\" + $stateParams.draftID + \"/chat\", message);\n    };\n\n    return factory;\n});","angular.module(\"DraftFactory\", []).factory(\"DraftFactory\", function ($http, $stateParams) {\n    var factory = {};\n\n    factory.startDraft = (newDraftObject) => {\n        return $http.post(\"/league/\" + $stateParams.leagueID + \"/draft/new\", newDraftObject)\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    factory.getDraft = ($stateParams) => {\n        return $http.get(\"/league/\" + $stateParams.leagueID + \"/draft/\" + $stateParams.draftID + \"/get\")\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    factory.downloadPlayers = () => {\n        return $http.post(\"/downloadPlayers\").then((response) => {\n            console.log(response);\n        }, (error) => {\n            console.log(error);\n        });\n    };\n\n    factory.draftPlayer = (draftPick) => {\n        return $http.post(\"/league/\" + $stateParams.leagueID + \"/draft/\" + $stateParams.draftID + \"/position/\" + draftPick.position + \"/player/\" + draftPick.player_id)\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    return factory;\n});","angular.module(\"LeagueFactory\", []).factory(\"LeagueFactory\", function ($http, $stateParams) {\n    let factory = {};\n\n    factory.createLeague = (newLeagueInfo) => {\n        return $http.post(\"/league/create\", newLeagueInfo)\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    factory.joinLeague = (leaguePack) => {\n        return $http.patch(\"/league/join\", leaguePack)\n            .then(function (response) {\n                return response;\n            }, function (error) {\n                console.log(error);\n            });\n    };\n\n    factory.getLeague = (id) => {\n        return $http.get(\"/getLeague/\", { params: { _id: id } })\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n    \n    factory.newLeagueMessage = (messagePack) => {\n        return $http.post('/league/newMessage', messagePack)\n            .then((response) => {\n                return response\n            }, (error) => {\n                console.log(error);\n            });\n    };\n    \n    factory.updateTeamPick = (pickPack) => {\n        return $http.post('/league/' + $stateParams.leagueID, pickPack)\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n    \n    factory.deleteLeagueTeam = (team) => {\n        console.log(team);\n        return $http.post(\"/league/\" + $stateParams.leagueID + \"/deleteLeagueTeam\", team)\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n    \n    factory.getUserLeagues = (user_id) => {\n        return $http.get('/leagues/user/' + user_id)\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    return factory;\n});","angular.module('UserFactory', []).factory('UserFactory', function ($http) {\n  let factory = {};\n\n  factory.register = (registerInfo) => {\n    return $http.post(\"/register\", registerInfo)\n      .then((response) => {\n        return response;\n      }, (error) => {\n        console.log(error);\n        return error;\n    });\n  };\n\n  factory.login = (loginInfo) => {\n    return $http.post(\"/login\", loginInfo)\n      .then((response) => {\n        return response;\n      }, (error) => {\n        console.log(error);\n        return error;\n      });\n  };\n\n  return factory;\n});","angular.module('AuthenticationService', []).service('AuthenticationService', function ($window, $state, $rootScope, $q, UserFactory) {\n  let service = {};\n\n  const tokenStorage = {\n    setToken: (key, token) => {\n      return Promise.resolve().then(() => {\n        $window.sessionStorage.setItem(key, token);\n      });\n    },\n    getToken: (key) => {\n      return Promise.resolve().then(() => {\n        return $window.sessionStorage.getItem(key);\n      });\n    },\n    removeToken: (key) => {\n      return Promise.resolve().then(() => {\n        $window.sessionStorage.removeItem(key);\n      });\n    }\n  }\n\n  //Is A User Logged In\n  service.isLoggedIn = () => {\n    return tokenStorage.getToken('user-token')\n      .then((token) => {\n        if (token) {\n          let payload = token.split('.')[1];\n          payload = $window.atob(payload);\n          payload = JSON.parse(payload);\n          return payload.exp > Date.now() / 1000;\n        }\n        else {\n          return false;\n        }\n      }, (error) => {\n        console.log(error);\n      });\n  };\n\n  //Return The Current User\n  service.currentUser = function () {\n    return service.isLoggedIn()\n      .then((response) => {\n        if (response) {\n          return tokenStorage.getToken('user-token')\n            .then((token) => {\n              let payload = token.split('.')[1];\n              payload = $window.atob(payload);\n              payload = JSON.parse(payload);\n\n              return {\n                _id: payload._id,\n                userName: payload.userName,\n                firstName: payload.firstName,\n                email: payload.email,\n                leagues: payload.leagues\n              };\n            }, (error) => {\n              console.log(error);\n            });\n        }\n      }, (error) => {\n        console.log(error);\n      });\n  };\n\n  service.updateToken = (token) => {\n    return tokenStorage.removeToken('user-token')\n      .then(() => {\n        return tokenStorage.setToken('user-token', token)\n          .then(() => {\n            return \"Token Set!\";\n          }, (error) => {\n            console.log(error);\n          })\n      }, (error) => {\n        console.log(error);\n      });\n  };\n\n  service.register = function (user, callback) {\n    return UserFactory.register(user)\n      .then((response) => {\n        if (response.data.token) {\n          return tokenStorage.setToken('user-token', response.data.token)\n            .then(() => {\n              return \"Token Set!\";\n            });\n        }\n        else if (response.message) {\n          return reponse.message;\n        }\n        else {\n          return \"Unknown Error\";\n        }\n      }, (error) => {\n        console.log(error);\n      });\n  };\n\n  service.login = (user) => {\n    return UserFactory.login(user)\n      .then((response) => {\n        if (response.data.token) {\n          return tokenStorage.setToken('user-token', response.data.token)\n            .then(() => {\n              return \"Token Set!\"\n            }, (error) => {\n              console.log(error);\n            });\n        }\n        if (response.status == 401) {\n          return \"Incorrect Username or Password!\";\n        }\n        else {\n          return \"Unknown Error!\"\n        }\n      }, (error) => {\n        console.log(error);\n      });\n  };\n\n  service.logOut = () => {\n    $window.sessionStorage.clear();\n    $rootScope = $rootScope.$new(true);\n  };\n\n  return service;\n});\n","angular.module(\"ChatService\", []).service(\"ChatService\", function ($stateParams, ChatFactory) {\n    let service = {};\n\n    let socket = io.connect();\n\n    socket.on('updateMessages', function () {\n        service.getMessages($stateParams);\n    });\n\n    service.getMessages = ($stateParams) => {\n        return ChatFactory.getMessages((messages) => {\n            return messages;\n        }, (error) => {\n            console.log(error);\n        });\n    };\n\n    service.sendMessage = (message) => {\n        ChatFactory.sendMessage(message);\n    };\n\n    return service;\n});","angular.module('DraftService', []).service('DraftService', function ($window, $state, $stateParams, DraftFactory, AuthenticationService, LeagueService) {\n    let service = {};\n\n    let socket = io.connect();\n\n    const draftStorage = {\n        setDraft: (id, draft) => {\n            return Promise.resolve().then(() => {\n                $window.sessionStorage.setItem(id, draft);\n            });\n        },\n        getDraft: (id) => {\n            return Promise.resolve().then(() => {\n                return $window.sessionStorage.getItem(id);\n            });\n        },\n        removeDraft: () => {\n            return Promise.resolve().then(() => {\n                $window.sessionStorage.removeItem(id);\n            });\n        }\n    };\n\n    service.getDraft = ($stateParams) => {\n        return DraftFactory.getDraft($stateParams)\n            .then((response) => {\n                return draftStorage.setDraft(\"draft\", JSON.stringify(response.data))\n                    .then(() => {\n                        return\n                        // console.log(\"Done\");\n                    }, (error) => {\n                        console.log(error);\n                    });\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    service.startDraft = () => {\n\n        //Gets League from LeagueService\n        return LeagueService.getLeague().then((response) => {\n\n            //Checks if any teams have not been assigned a draft pick\n            for (let x = 0; x < response.teams.length; x++) {\n                if (!response.teams[x].pick) {\n                    return { error: \"Please Assign All Picks\" };\n                }\n            }\n            //Sets the field for a new draft\n            let draftField = [];\n            for (let x = 1; x <= response.size; x++) {\n                let position = { position: x };\n                response.teams.forEach((team) => {\n                    if (team.pick == x) {\n                        position._user = team._user._id;\n                    }\n                });\n                draftField.push(position);\n            }\n\n            let newDraftObject = {};\n            newDraftObject.teams = draftField;\n\n            return DraftFactory.startDraft(newDraftObject)\n                .then((response) => {\n                    return LeagueService.getLeague()\n                        .then((response) => {\n                            return response;\n                        }, (error) => {\n                            console.log(error);\n                        });\n                }, (error) => {\n                    console.log(error);\n                });\n        }, (error) => {\n            console.log(error);\n        });\n    };\n\n    service.joinDraft = () => {\n        let getCurrentLeague = LeagueService.getLeague();\n        getCurrentLeague.then((response) => {\n            //Get draft object from league.draft_id\n        });\n    };\n\n    service.onClock = () => {\n        return draftStorage.getDraft('draft').then((draft) => {\n            let pDraft = JSON.parse(draft);\n            return pDraft.onClock;\n        }, (error) => {\n            console.log(error);\n        });\n    };\n\n    service.availablePlayers = () => {\n        return draftStorage.getDraft('draft').then((draft) => {\n            let pDraft = JSON.parse(draft);\n            return pDraft.availablePlayers;\n        }, (error) => {\n            console.log(error);\n        });\n    };\n\n    service.draftField = () => {\n        return draftStorage.getDraft('draft').then((draft) => {\n            let pDraft = JSON.parse(draft);\n            return pDraft.draft.field;\n        });\n    };\n\n    service.draftList = () => {\n        return draftStorage.getDraft('draft').then((draft) => {\n            let pDraft = JSON.parse(draft);\n            let sortedDraft = [];\n            let sorted = false;\n            let x = 0;\n            while (sorted == false) {\n                for (let y = 0; y < pDraft.draft.field.length; y++) {\n                    if (pDraft.draft.field[y].picks[x]) {\n                        sortedDraft.push(pDraft.draft.field[y].picks[x]._player);\n                    }\n                    else {\n                        sorted = true;\n                        break;\n                    }\n                }\n                x++;\n                if (sorted == false) {\n                    for (let z = pDraft.draft.field.length - 1; z >= 0; z--) {\n                        if (pDraft.draft.field[z].picks[x]) {\n                            sortedDraft.push(pDraft.draft.field[z].picks[x]._player);\n                        }\n                        else {\n                            sorted = true;\n                            break;\n                        }\n                    }\n                    x++;\n                }\n            }\n            return sortedDraft;\n        }, (error) => {\n            console.log(error);\n        });\n    };\n\n    service.draftPlayer = (draftPick) => {\n        return DraftFactory.draftPlayer(draftPick)\n            .then((response) => {\n                socket.emit(\"successfulPick\");\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    service.downloadPlayers = function () {\n        DraftFactory.downloadPlayers();\n    };\n\n    socket.on(\"updateDraft\", function() {\n        // $state.reload();\n        service.getDraft($stateParams);\n    });\n\n    return service;\n});","angular.module(\"LeagueService\", []).service(\"LeagueService\", function ($window, $state, $stateParams, $q, $location, LeagueFactory, AuthenticationService) {\n    let service = {};\n\n    let deferred = $q.defer();\n\n    //Current User\n    let currentUser = {};\n    let getCurrentUser = AuthenticationService.currentUser();\n    getCurrentUser.then((response) => {\n        currentUser = response;\n    }, (error) => {\n        console.log(error);\n    });\n\n    //Current League\n    let currentLeague = {};\n    service.getLeague = () => {\n        if ($stateParams.leagueID) {\n            return LeagueFactory.getLeague($stateParams.leagueID)\n                .then((response) => {\n                    if (response.data) {\n                        currentLeague = response.data;\n                        return response.data;\n                    }\n                }, (error) => {\n                    console.log(error);\n                });\n        }\n\n    };\n\n    service.createNewLeague = function (newLeagueInfo) {\n        return LeagueFactory.createLeague(newLeagueInfo)\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    service.joinLeague = function (joinPac) {\n        return LeagueFactory.joinLeague(joinPac)\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    service.newLeagueMessage = (messagePack) => {\n        return LeagueFactory.newLeagueMessage(messagePack)\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    service.updateTeamPick = (pickPack) => {\n        return LeagueFactory.updateTeamPick(pickPack)\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    service.deleteLeagueTeam = (team) => {\n        return LeagueFactory.deleteLeagueTeam(team)\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    service.getUserLeagues = (id) => {\n        return LeagueFactory.getUserLeagues(id)\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    return service;\n});","angular.module('DashboardController', []).controller('DashboardController', function (AuthenticationService, LeagueService) {\n    let vm = this;\n\n    vm.currentLeagues = [];\n    vm.currentUser = AuthenticationService.currentUser().then((response) => {\n        vm.currentUser = response;\n        return LeagueService.getUserLeagues(response._id).then((leagues) => {\n            vm.currentLeagues = leagues.data\n        }, (error) => {\n            console.log(error);\n        })\n    }, (error) => {\n        console.log(error);\n    });\n    \n});","angular.module(\"DraftBoardController\", []).controller(\"DraftBoardController\", function ($state, $stateParams, AuthenticationService, LeagueService, DraftService) {\n    let vm = this;\n\n    vm.message = \"\"\n\n    let getDraftField = DraftService.draftField();\n    getDraftField.then((field) => {\n        vm.draftField = field;\n    });\n});","angular.module('ngEnter', []).directive('ngEnter', function ($scope, element, attrs) {\n\n    element.bind(\"keypress\", function (event) {\n        console.log(this);\n        if (event.which === 13) {\n            $scope.$apply(function () {\n                $scope.$eval(attrs.ngEnter);\n            });\n            event.preventDefault();\n        }\n    });\n});\nangular.module('DraftChatController', []).controller('DraftChatController', function ($scope, AuthenticationService, LeagueService, DraftService, ChatService) {\n\n    var vm = this;\n\n    vm.messages = [];\n\n    vm.message = \"\";\n    vm.filterText = \"\";\n\n    let getCurrentUser = AuthenticationService.currentUser();\n    getCurrentUser.then((user) => {\n        vm.currentUser = user;\n    });\n    \n    // var socket = io.connect();\n\n    // socket.on(\"pastMessages\", function (data) {\n    //     $scope.$apply(function(){\n    //         vm.messages = data.reverse();\n    //     });\n    // });\n\n    // socket.on(\"receiveMessage\", function(data){\n    //     $scope.$apply(function(){\n    //         vm.messages.unshift(data);\n    //     });\n    // });\n\n    vm.sendMessage = () => {\n        var chatMessage = {\n            \"user_id\": vm.currentUser._id,\n            \"message\": vm.message\n        };\n        ChatService.sendMessage(chatMessage);\n    };\n});\n","angular.module(\"DraftController\", []).controller(\"DraftController\", function ($state, _draft, $stateParams, AuthenticationService, LeagueService, DraftService) {\n    let vm = this;\n\n    vm.params = $stateParams;\n\n    vm.message = \"\";\n\n    // vm.sortType = 'displayName';\n    // vm.sortReverse = false;\n    // vm.searchPlayer = \"\";\n    // vm.filterPosition = \"\";\n\n    vm.currentUser = AuthenticationService.currentUser().then((response) => {\n        vm.currentUser = response;\n    });\n\n    let getOnClock = DraftService.onClock();\n    getOnClock.then((team) => {\n        vm.onClock = team;\n    }, (error) => {\n        console.log(error);\n        });\n    \n    vm.downloadPlayers = () => {\n        DraftService.downloadPlayers();\n    }\n});","angular.module(\"DraftPickController\", []).controller(\"DraftPickController\", function ($confirm, $state, $stateParams, AuthenticationService, LeagueService, DraftService) {\n    let vm = this;\n\n    vm.message = \"\";\n\n    vm.sortType = '';\n    vm.sortReverse = false;\n    vm.searchPlayer = \"\";\n    vm.filterPosition = \"\";\n\n    let getCurrentUser = AuthenticationService.currentUser();\n    getCurrentUser.then((user) => {\n        vm.currentUser = user;\n    });\n\n    let getLeague = LeagueService.getLeague();\n    getLeague.then((league) => {\n        vm.currentLeague = league;\n    }, (error) => {\n        console.log(error);\n    });\n\n    vm.isCommish = () => {\n        vm.currentLeague.commish_id.forEach((id) => {\n            if (id == vm.currentUser._id) return true;\n        });\n        return false\n    }\n\n    let getOnClock = DraftService.onClock();\n    getOnClock.then((team) => {\n        vm.onClock = team;\n    }, (error) => {\n        console.log(error);\n    });\n\n    let getAvailablePlayers = DraftService.availablePlayers();\n    getAvailablePlayers.then((players) => {\n        vm.availablePlayers = players;\n    }, (error) => {\n        console.log(error);\n    });\n\n    let getDraftList = DraftService.draftList();\n    getDraftList.then((draft) => {\n        vm.draft = draft;\n    }, (error) => {\n        console.log(error);\n    });\n\n    vm.positionFilter = (position) => {\n        vm.sortType = '';\n        if (position == vm.filterPosition) vm.filterPosition = ''\n        else vm.filterPosition = position\n    }\n\n    vm.draftPlayer = (player) => {\n        let draftPick = {\n            position: vm.onClock.position,\n            player_id: player._id\n        };\n        if (vm.currentUser._id == vm.onClock._id || vm.isCommish) {\n            $confirm({ text: \"Are you sure you want to draft \" + player.displayName + \"?\", title: \"Draft Player\" }).then(() => {\n                return DraftService.draftPlayer(draftPick).then((response) => {\n                    return;\n                    // $state.reload();\n                }, (error) => {\n                    console.log(error);\n                });\n            });\n        }\n    };\n});","angular.module('LeagueCommishController', []).controller('LeagueCommishController', function ($rootScope, $scope, $q, $state, AuthenticationService, LeagueService) {\n    let vm = this;\n\n    vm.message = \"\";\n\n    //Current User\n    vm.currentUser = {};\n    let getCurrentUser = AuthenticationService.currentUser();\n    getCurrentUser.then((response) => {\n        vm.currentUser = response;\n        return;\n    }, (error) => {\n        console.log(error);\n    });\n\n    //Current League\n    vm.league = {};\n    let getLeague = LeagueService.getLeague();\n    getLeague.then((response) => {\n        vm.league = response;\n        createPicksList(response);\n    }, (error) => {\n        console.log(error);\n    });\n\n    //Commish Auth\n    vm.isCommish = (userID, league) => {\n        let commish = false;\n        if (userID && league) {\n            league.forEach((element) => {\n                if (element == userID) {\n                    commish = true;\n                }\n            });\n            return commish;\n        }\n        return commish;\n    };\n\n    vm.leagueField = [];\n\n    let createPicksList = (league) => {\n        if (league) {\n            let draftOrder = { title: \"Draft Order\", teams: [] };\n            let size = league.size;\n            let currentTeams = league.teams;\n            for (let x = 1; x <= size; x++) {\n                let draftPick = { 'pick': x };\n                // angular.forEach(currentTeams, (team, index) => {\n                //     if (team.pick == x) {\n                //         draftPick = team;\n                //         currentTeams.splice(index, 1);\n                //     }\n                // });\n                currentTeams.forEach((team, index) => {\n                    if (team.pick == x) {\n                        draftPick = team;\n                        currentTeams.splice(index, 1);\n                    }\n                });\n                draftOrder.teams.push(draftPick);\n            }\n            vm.leagueField.push(draftOrder);\n            if (currentTeams.length > 0) {\n                let teams = { title: \"Needs Pick\", teams: [] };\n                currentTeams.forEach((team) => {\n                    teams.teams.push(team);\n                });\n                vm.leagueField.push(teams);\n            }\n        }\n    };\n\n    $scope.onDrop = function (srcList, srcIndex, targetList, targetIndex) {\n        // Copy the item from source to target.\n        targetList.splice(targetIndex, 0, srcList[srcIndex]);\n        // Remove the item from the source, possibly correcting the index first.\n        // We must do this immediately, otherwise ng-repeat complains about duplicates.\n        if (srcList == targetList && targetIndex <= srcIndex) srcIndex++;\n        srcList.splice(srcIndex, 1);\n        for (let x = 0; x < targetList.length; x++) {\n            if (targetList[x]._id == this.team._id) {\n                let team = this.team;\n                let pick = x + 1;\n                return updatePick(team, pick).then(() => {\n                    return true;\n                }, (error) => {\n                    console.log(error);\n                });\n            }\n        }\n        // By returning true from dnd-drop we signalize we already inserted the item.\n        return true;\n    };\n\n    let updatePick = (team, pick) => {\n        let pickPack = {\n            pick: pick,\n            team: team\n        };\n        return LeagueService.updateTeamPick(pickPack)\n            .then((response) => {\n                $state.reload();\n                return;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n    \n    vm.deleteTeam = (id) => {\n        let team = {\n            team_id: id\n        };\n        return LeagueService.deleteLeagueTeam(team)\n            .then((response) => {\n                $state.reload();\n                return\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n});","angular.module('LeagueController', []).controller('LeagueController', function ($scope, $q, $uibModal, $confirm, $state, $stateParams, AuthenticationService, LeagueService, DraftService) {\n\n    let vm = this;\n\n    vm.message = \"\";\n\n    vm.params = $stateParams;\n\n    //Current User\n    vm.currentUser = {};\n    let getCurrentUser = AuthenticationService.currentUser();\n    getCurrentUser.then((response) => {\n        vm.currentUser = response;\n        return;\n    }, (error) => {\n        console.log(error);\n    });\n\n    //Current League\n    vm.league = {};\n    let getLeague = LeagueService.getLeague();\n    getLeague.then((response) => {\n        vm.league = response;\n        return;\n    }, (error) => {\n        console.log(error);\n    });\n\n    //Commish Auth\n    vm.isCommish = (userID, league) => {\n        let commish = false;\n        if (userID && league) {\n            league.forEach((element) => {\n                if (element == userID) {\n                    commish = true;\n                }\n            });\n            return commish;\n        }\n        return commish;\n    };\n\n    //Open New League Message Modal\n    vm.newMessage = () => {\n        $scope.modalInstance = $uibModal.open({\n            animation: true,\n            size: \"lg\",\n            templateUrl: 'newMessageModal.html',\n            controller: 'LeagueController',\n            controllerAs: 'vm',\n            scope: $scope,\n            backdrop: \"static\",\n        });\n    };\n\n    vm.sendMessage = () => {\n\n        let messagePack = {\n            \"leagueID\": vm.league._id,\n            \"userID\": vm.currentUser._id,\n            \"message\": vm.newLeagueMessage\n        };\n\n        return LeagueService.newLeagueMessage(messagePack)\n            .then((response) => {\n                console.log(response);\n                if (response.statusText == \"OK\") {\n                    $state.reload();\n                }\n                console.log(response);\n            }, (error) => {\n                console.log(error);\n            });\n    };\n    \n    vm.cancel = () => {\n        $scope.modalInstance.dismiss('cancel');\n    };\n\n    vm.dismissError = () => {\n        vm.message = \"\";\n    };\n\n    vm.startDraft = () => {\n        let startLeagueDraft = DraftService.startDraft();\n        startLeagueDraft.then((response) => {\n            if (response.error) {\n                vm.message = response.error;\n            }\n            else {\n                $state.reload();\n            }\n        }, (error) => {\n            console.log(error);\n        });\n    };\n});","angular.module('LeagueJoinController', []).controller('LeagueJoinController', function($q, $rootScope, $scope, $state, AuthenticationService, LeagueService) {\n    let vm = this;\n\n    vm.message = \"\";\n\n    //Current User\n    vm.currentUser = {};\n    let getCurrentUser = AuthenticationService.currentUser();\n    getCurrentUser.then((response) => {\n        vm.currentUser = response;\n        return;\n    }, (error) => {\n        console.log(error);\n    });\n\n    //Join League\n    vm.joinLeague = () => {\n        let code = \"\";\n        for (var x in vm.data) {\n            code += vm.data[x];\n        }\n        let leaguePack = {\n            \"user_id\": vm.currentUser._id,\n            \"league_code\": code,\n        };\n        return LeagueService.joinLeague(leaguePack)\n            .then((response) => {\n                if (response.data.message) {\n                    vm.message = response.data.message;\n                    \n                }\n                else {\n                    $state.transitionTo('dashboard');\n                }\n\n            }, (error) => {\n                console.log(error);\n            });\n    };\n    \n    //Moves Focus After Input\n    vm.moveFocus = (nextId) => {\n        $('#' + nextId).focus();\n    };\n\n    vm.dismissError = () => {\n        vm.message = \"\";\n    };\n});","angular.module('LeagueNewController', []).controller('LeagueNewController', function ($q, $state, AuthenticationService, LeagueService) {\n    let vm = this;\n\n    vm.messsage = \"\";\n\n    //Current User\n    vm.currentUser = {};\n    let getCurrentUser = AuthenticationService.currentUser();\n    getCurrentUser.then((response) => {\n        vm.currentUser = response;\n        return;\n    }, (error) => {\n        console.log(error);\n    });\n\n    //Create New League\n    vm.createNewLeague = () => {\n        let newLeagueInfo = {\n            \"leagueName\": vm.newLeague.leagueName,\n            \"leagueSize\": vm.newLeague.leagueSize,\n            \"user_id\": vm.currentUser._id\n        };\n\n        return LeagueService.createNewLeague(newLeagueInfo)\n            .then((response) => {\n                $state.transitionTo('dashboard');\n            }, (error) => {\n                console.log(error);\n            });\n    };\n})","angular.module('UserLoginController', []).controller('UserLoginController', function ($state, $location, $stateParams, AuthenticationService) {\n    let vm = this;\n\n    vm.message = \"\";\n\n    vm.loginInfo = {\n        email: \"\",\n        password: \"\"\n    };\n\n    vm.login = () => {\n        return AuthenticationService.login(vm.loginInfo)\n            .then((response) => {\n                if (response == \"Token Set!\") {\n                    $state.go('dashboard');\n                }\n                else {\n                    vm.message = response;\n                }\n            }, (error) => {\n                console.log(error);\n            });\n    };\n    \n    // vm.onSignIn = (googleUser) => {\n    //     console.log(\"Fired onSign In\");\n    //     if (googleUser) {\n    //         var profile = googleUser.getBasicProfile();\n    //         console.log(\"Email: \" + profile.getEmail());\n    //     }\n    // };\n\n    vm.dismissError = () => {\n        vm.message = \"\";\n    };\n});","angular.module('UserRegisterController', []).controller('UserRegisterController', function ($state, AuthenticationService) {\n    let vm = this;\n\n    vm.message = \"\";\n\n    vm.registerInfo = {\n        email: \"\",\n        userName: \"\",\n        firstName: \"\",\n        password: \"\"\n    };\n\n    vm.registerNew = function () {\n        return AuthenticationService.register(vm.registerInfo)\n            .then((response) => {\n                $state.transitionTo('dashboard');\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    vm.dismissError = () => {\n        vm.message = \"\";\n    };\n});","angular.module('UserSettingsController', []).controller('UserSettingsController', function (AuthenticationService) {\n    let vm = this;\n\n    vm.message = \"\";\n\n    vm.currentUser = {};\n    let getCurrentUser = AuthenticationService.currentUser();\n    getCurrentUser.then((response) => {\n        vm.currentUser = response;\n    }, (error) => {\n        console.log(error);\n    });\n\n    vm.tab = 1;\n\n    vm.setTab = (tabId) => {\n        vm.tab = tabId;\n    };\n\n    vm.isSet = (tabId) => {\n        return vm.tab === tabId;\n    };\n\n    \n\n    \n\n    \n\n    \n\n    \n    \n    vm.dismissError = () => {\n        vm.message = \"\";\n    }\n\n});\n\n"]}