{"version":3,"sources":["app.js","controllers/AppController.js","controllers/ChatController.js","factories/ChatFactory.js","factories/DraftFactory.js","factories/LeagueFactory.js","factories/UserFactory.js","services/AuthenticationService.js","services/DraftService.js","services/LeagueService.js","controllers/dashboard/DashboardController.js","controllers/draft/DraftController.js","controllers/league/LeagueCommishController.js","controllers/league/LeagueController.js","controllers/league/LeagueJoinController.js","controllers/league/LeagueNewController.js","controllers/user/UserLoginController.js","controllers/user/UserRegisterController.js","controllers/user/UserSettingsController.js"],"names":["DraftApp","angular","module","config","$urlRouterProvider","otherwise","$stateProvider","state","url","templateProvider","views","content","controller","$templateCache","controllerAs","get","authenticate","header","league","LeagueService","resolve","$stateParams","run","onStart","trans","transitionTo","isLoggedIn","$transitions","$location","$state","$q","AuthenticationService","getLoginStatus","response","AuthService","DraftService","vm","this","then","error","console","log","currentUser","downloadPlayers","data","deleteAllPlayers","logOut","directive","$scope","element","attrs","bind","event","which","$apply","$eval","ngEnter","preventDefault","ChatFactory","currentLeague","messages","message","filterText","socket","io","connect","on","reverse","unshift","sendMessage","postMessage","result","err","window","alert","factory","$http","callback","post","success","status","deleteAllChat","startDraft","newDraftObject","leagueID","getDraft","draftID","getPlayers","position","params","output","draftPlayer","draftPick","player_id","getDraftedPlayers","createLeague","newLeagueInfo","joinLeague","leaguePack","patch","getLeague","id","_id","newLeagueMessage","messagePack","updateTeamPick","pickPack","deleteLeagueTeam","team","getUserLeagues","user_id","register","registerInfo","login","loginInfo","service","$window","$rootScope","UserFactory","tokenStorage","setToken","key","token","Promise","localStorage","setItem","getToken","getItem","removeToken","removeItem","payload","split","atob","JSON","parse","exp","Date","now","userName","firstName","email","leagues","updateToken","user","reponse","clear","$new","DraftFactory","x","teams","length","pick","draftField","size","forEach","_user","push","_loop","joinDraft","onClock","LeagueFactory","defer","createNewLeague","joinPac","currentLeagues","availablePlayers","currentDraft","draftSort","draft","players","reload","sortedDraft","sorted","y","field","picks","_player","z","p","d","displayName","splice","createPicksList","isCommish","userID","commish","leagueField","draftOrder","title","currentTeams","index","onDrop","srcList","srcIndex","targetList","targetIndex","updatePick","deleteTeam","team_id","$uibModal","$confirm","newMessage","modalInstance","open","animation","templateUrl","scope","backdrop","statusText","cancel","dismiss","dismissError","code","league_code","moveFocus","nextId","$","focus","messsage","leagueName","newLeague","leagueSize","password","registerNew","tab","setTab","tabId","isSet"],"mappings":"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","file":"app.js","sourcesContent":["let DraftApp = angular.module(\"DraftApp\", [\"ngRoute\", \"ngMessages\", \"ngAnimate\",\n    \"ui.router\", \"ui.bootstrap\", \"dndLists\", \"angular-confirm\",\n    \"AppController\", \"ChatController\", \"DashboardController\", \"LeagueController\", \"LeagueCommishController\", \"LeagueJoinController\", \"LeagueNewController\", \"PlayerController\", \"UserSettingsController\", \"UserLoginController\", \"UserRegisterController\", \"DraftController\",\n    \"AuthenticationService\", \"DraftService\", \"LeagueService\",\n    \"ChatFactory\", \"DraftFactory\", \"LeagueFactory\", \"UserFactory\"]);\n\nangular.module('DraftApp').config(function ($stateProvider, $urlRouterProvider) {\n\n    $urlRouterProvider.otherwise(\"/\");\n\n    $stateProvider\n        .state(\"index\", {\n            url: \"/\",\n            views: {\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('welcome.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        })\n        .state(\"login\", {\n            url: \"/login\",\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: \"vm\",\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('auth/login.html');\n                    },\n                    controller: \"UserLoginController\",\n                    controllerAs: \"vm\"\n                },\n            }\n        })\n        .state('register', {\n            url: \"/register\",\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: 'vm'\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('auth/register.html');\n                    },\n                    controller: \"UserRegisterController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        })\n        .state(\"settings\", {\n            url: \"/settings\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: 'vm',\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('auth/settings.html');\n                    },\n                    controller: \"UserSettingsController\",\n                    controllerAs: \"vm\",\n                }\n            }\n        })\n        .state(\"dashboard\", {\n            url: \"/dashboard\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: 'vm',\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('dashboard.html');\n                    },\n                    controller: \"DashboardController\",\n                    controllerAs: \"vm\",\n                }\n            }\n        })\n        .state('newLeague', {\n            url: \"/league/new\",\n            authenticate: true,\n            views: {\n                'header': {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: 'vm'\n                },\n                'content': {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('league/league.new.html');\n                    },\n                    controller: \"LeagueNewController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        })\n        .state('joinLeague', {\n            url: \"/league/join\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: 'vm'\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('league/league.join.html');\n                    },\n                    controller: \"LeagueJoinController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        })\n        .state('league', {\n            url: \"/league/:leagueID/index\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: 'vm'\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('league/league.index.html');\n                    },\n                    controller: \"LeagueController\",\n                    controllerAs: \"vm\",\n                    resolve: {\n                        league: function(LeagueService, $stateParams) {\n                            return LeagueService.get();\n                        }\n                    }\n                }\n            }\n        })\n        .state('leagueCommish', {\n            url: \"/league/:leagueID/commish\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: 'vm'\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('league/league.commish.html');\n                    },\n                    controller: \"LeagueCommishController\",\n                    controllerAs: \"vm\",\n                    // resolve: {\n                    //     league: (LeagueService, $stateParams) => {\n                    //         console.log($stateParams)\n                    //         // let theLeague = LeagueService.getLeague();\n                    //         // theLeague.then((response) => {\n\n                    //         // }, (error) => {\n                    //         //     console.log(error);\n                    //         // });\n                    //     }\n                    // }\n                }\n            }\n        })\n        .state(\"draft\", {\n            url: \"/league/:leagueID/draft/:draftID/index\",\n            // authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: \"vm\"\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('draft/draft.index.html');\n                    },\n                    controller: \"DraftController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        })\n        .state(\"availablePlayers\", {\n            url: \"/availablePlayers\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: \"vm\",\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('availablePlayers.html');\n                    },\n                    controller: \"PlayerController\",\n                    controllerAs: \"vm\",\n                }\n            }\n        })\n        .state(\"chat\", {\n            url: \"/chat\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: \"vm\"\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('chat.html');\n                    },\n                    controller: \"ChatController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        });\n});\n\nangular.module('DraftApp').run(function ($transitions, $location, $state, $q, AuthenticationService) {\n    $transitions.onStart({ to: '*' }, function (trans) {\n        let AuthService = trans.injector().get('AuthenticationService');\n        if (trans.to().authenticate && !AuthService.isLoggedIn()) {\n            $state.transitionTo('login');\n        }\n    });\n});","angular.module('AppController', []).controller('AppController', function (AuthenticationService, DraftService, LeagueService) {\n\n  let vm = this;\n  \n  vm.isLoggedIn = false;\n  let getLoginStatus = AuthenticationService.isLoggedIn();\n  getLoginStatus.then((response) => {\n    if (response == true) {\n      vm.isLoggedIn = true;\n    }\n    if (response == false) {\n      vm.isLoggedIn = false;\n    }\n  }, (error) => {\n    console.log(error);\n  });\n      \n  vm.currentUser = {};\n  let getCurrentUser = AuthenticationService.currentUser();\n  getCurrentUser.then((response) => {\n    vm.currentUser = response;\n  }, (error) => {\n    console.log(error);\n  });\n\n  \n    vm.downloadPlayers = function(){\n      DraftService.downloadPlayers(function(data){\n        console.log(data);\n      });\n    };\n  \n    vm.deleteAllPlayers = function(){\n      DraftService.deleteAllPlayers(function(data){\n        console.log(data);\n      });\n    };\n  \n  vm.logOut = () => {\n    AuthenticationService.logOut();\n  };\n});","angular.module('ngEnter', []).directive('ngEnter', function ($scope, element, attrs) {\n\n    element.bind(\"keypress\", function (event) {\n        if (event.which === 13) {\n            $scope.$apply(function () {\n                $scope.$eval(attrs.ngEnter);\n            });\n            event.preventDefault();\n        }\n    });\n});\n\nangular.module('ChatController', []).controller('ChatController', function ($scope, AuthenticationService, LeagueService, ChatFactory) {\n\n    var vm = this;\n\n    vm.currentUser = AuthenticationService.currentUser();\n\n    vm.currentLeague = LeagueService.currentLeague();\n\n    vm.messages = [];\n\n    vm.message = \"\";\n    vm.filterText = \"\";\n\n    \n    var socket = io.connect();\n\n    socket.on(\"pastMessages\", function (data) {\n        $scope.$apply(function(){\n            vm.messages = data.reverse();\n        });\n    });\n\n    socket.on(\"receiveMessage\", function(data){\n        $scope.$apply(function(){\n            vm.messages.unshift(data);\n        });\n    });\n\n    vm.sendMessage = function () {\n        // var chatMessage = {\n        //     \"_id\": vm.currentLeague.chat._id,\n        //     \"userName\": vm.currentUser.firstName,\n        //     \"message\": vm.message\n        // };\n        LeagueService.postMessage(vm.message, function (result, err) {\n            if (err) {\n                window.alert(\"Error!\");\n            }\n            // else{\n            //     socket.emit(\"receiveMessage\", result);\n            //     vm.message = \"\";\n            // }\n        });\n    };\n});","angular.module(\"ChatFactory\", []).factory(\"ChatFactory\", function($http){\n\n    var factory = {};\n\n    factory.postMessage = function(message, callback){\n        $http.post(\"/message\", message).success(function(data, status){\n            callback(data, false);\n        })\n        .error(function(data, status){\n            callback(data, true);\n        });\n    };\n\n    factory.deleteAllChat = function(){\n        $http.post(\"/deleteAllChat\").success(function(data){\n            console.log(data);\n        });\n    };\n\n    return factory;\n});","angular.module(\"DraftFactory\", []).factory(\"DraftFactory\", function($http, $stateParams){\n    var factory = {};\n\n    factory.startDraft = (newDraftObject) => {\n        return $http.post(\"/league/\" + $stateParams.leagueID + \"/draft/new\", newDraftObject)\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n    \n    factory.getDraft = () => {\n        return $http.get(\"/league/\" + $stateParams.leagueID + \"/draft/\" + $stateParams.draftID + \"/get\")\n    };\n\n    factory.downloadPlayers = () => {\n        return $http.post(\"/downloadPlayers\").then((response)=>{\n            console.log(response);\n        }, (error) => {\n            console.log(error);\n        });\n    };\n\n    factory.getPlayers = function(position, callback){\n        $http.get(\"/getPlayers/\", {params: {position: position}}).success(function(output){\n            callback(output);\n        });\n    };\n\n    factory.deleteAllPlayers = function(callback){\n        $http.post(\"/deleteAllPlayers\").success(function(data){\n            callback(data);\n        });\n    };\n\n    factory.draftPlayer = function (draftPick) {\n        return $http.post(\"/league/\" + $stateParams.leagueID + \"/draft/\" + $stateParams.draftID + \"/position/\" + draftPick.position + \"/player/\" + draftPick.player_id)\n            .then(function (response) {\n                console.log(response);\n                return response;\n            }, function(error){\n                console.log(error);\n            });\n    };\n\n    factory.getDraftedPlayers = function(callback){\n        $http.get(\"/getDraftedPlayers\").success(function(output){\n            callback(output);\n        });\n    };\n\n    return factory;\n});","angular.module(\"LeagueFactory\", []).factory(\"LeagueFactory\", function ($http, $stateParams) {\n    let factory = {};\n\n    factory.createLeague = (newLeagueInfo) => {\n        return $http.post(\"/league/create\", newLeagueInfo)\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    factory.joinLeague = (leaguePack) => {\n        return $http.patch(\"/league/join\", leaguePack)\n            .then(function (response) {\n                return response;\n            }, function (error) {\n                console.log(error);\n            });\n    };\n\n    factory.getLeague = (id) => {\n        return $http.get(\"/getLeague/\", { params: { _id: id } })\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n    \n    factory.newLeagueMessage = (messagePack) => {\n        return $http.post('/league/newMessage', messagePack)\n            .then((response) => {\n                return response\n            }, (error) => {\n                console.log(error);\n            });\n    };\n    \n    factory.updateTeamPick = (pickPack) => {\n        return $http.post('/league/' + $stateParams.leagueID, pickPack)\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n    \n    factory.deleteLeagueTeam = (team) => {\n        console.log(team);\n        return $http.post(\"/league/\" + $stateParams.leagueID + \"/deleteLeagueTeam\", team)\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n    \n    factory.getUserLeagues = (user_id) => {\n        return $http.get('/leagues/user/' + user_id)\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    return factory;\n});","angular.module('UserFactory', []).factory('UserFactory', function ($http) {\n  let factory = {};\n\n  factory.register = (registerInfo) => {\n    return $http.post(\"/register\", registerInfo)\n      .then((response) => {\n        return response;\n      }, (error) => {\n        console.log(error);\n        return error;\n    });\n  };\n\n  factory.login = (loginInfo) => {\n    return $http.post(\"/login\", loginInfo)\n      .then((response) => {\n        return response;\n      }, (error) => {\n        console.log(error);\n        return error;\n      });\n  };\n\n  return factory;\n});","angular.module('AuthenticationService', []).service('AuthenticationService', function ($window, $state, $rootScope, $q, UserFactory) {\n  let service = {};\n\n  const tokenStorage = {\n    setToken: (key, token) => {\n      return Promise.resolve().then(() => {\n        $window.localStorage.setItem(key, token);\n      });\n    },\n    getToken: (key) => {\n      return Promise.resolve().then(() => {\n        return $window.localStorage.getItem(key);\n      });\n    },\n    removeToken: (key) => {\n      return Promise.resolve().then(() => {\n        $window.localStorage.removeItem(key);\n      });\n    }\n  }\n\n  //Is A User Logged In\n  service.isLoggedIn = () => {\n    return tokenStorage.getToken('user-token')\n      .then((token) => {\n        if (token) {\n          let payload = token.split('.')[1];\n          payload = $window.atob(payload);\n          payload = JSON.parse(payload);\n          return payload.exp > Date.now() / 1000;\n        }\n        else {\n          return false;\n        }\n      }, (error) => {\n        console.log(error);\n      });\n  };\n\n  //Return The Current User\n  service.currentUser = function () {\n    return service.isLoggedIn()\n      .then((response) => {\n        if (response) {\n          return tokenStorage.getToken('user-token')\n            .then((token) => {\n              let payload = token.split('.')[1];\n              payload = $window.atob(payload);\n              payload = JSON.parse(payload);\n\n              return {\n                _id: payload._id,\n                userName: payload.userName,\n                firstName: payload.firstName,\n                email: payload.email,\n                leagues: payload.leagues\n              };\n            }, (error) => {\n              console.log(error);\n            });\n        }\n      }, (error) => {\n        console.log(error);\n      });\n  };\n\n  service.updateToken = (token) => {\n    return tokenStorage.removeToken('user-token')\n      .then(() => {\n        return tokenStorage.setToken('user-token', token)\n          .then(() => {\n            return \"Token Set!\";\n          }, (error) => {\n            console.log(error);\n          })\n      }, (error) => {\n        console.log(error);\n      });\n  };\n\n  service.register = function (user, callback) {\n    return UserFactory.register(user)\n      .then((response) => {\n        if (response.data.token) {\n          return tokenStorage.setToken('user-token', response.data.token)\n            .then(() => {\n              return \"Token Set!\";\n            });\n        }\n        else if (response.message) {\n          return reponse.message;\n        }\n        else {\n          return \"Unknown Error\";\n        }\n      }, (error) => {\n        console.log(error);\n      });\n  };\n\n  service.login = (user) => {\n    return UserFactory.login(user)\n      .then((response) => {\n        if (response.data.token) {\n          return tokenStorage.setToken('user-token', response.data.token)\n            .then(() => {\n              return \"Token Set!\"\n            }, (error) => {\n              console.log(error);\n            });\n        }\n        if (response.status == 401) {\n          return \"Incorrect Username or Password!\";\n        }\n        else {\n          return \"Unknown Error!\"\n        }\n      }, (error) => {\n        console.log(error);\n      });\n  };\n\n  service.logOut = () => {\n    $window.localStorage.clear();\n    $rootScope = $rootScope.$new(true);\n  };\n\n  return service;\n});\n","angular.module('DraftService', []).service('DraftService', function ($window, $state, $q, DraftFactory, AuthenticationService, LeagueService) {\n    let service = {};\n\n    service.startDraft = () => {\n\n        //Gets League from LeagueService\n        return LeagueService.getLeague().then((response) => {\n\n            //Checks if any teams have not been assigned a draft pick\n            for (let x = 0; x < response.teams.length; x++) {\n                if (!response.teams[x].pick) {\n                    return { error: \"Please Assign All Picks\" };\n                }\n            }\n            //Sets the field for a new draft\n            let draftField = [];\n            for (let x = 1; x <= response.size; x++) {\n                let position = { position: x };\n                response.teams.forEach((team) => {\n                    if (team.pick == x) {\n                        position._user = team._user._id;\n                    }\n                });\n                draftField.push(position);\n            }\n\n            let newDraftObject = {};\n            newDraftObject.teams = draftField;\n\n            return DraftFactory.startDraft(newDraftObject)\n                .then((response) => {\n                    return LeagueService.getLeague()\n                        .then((response) => {\n                            return response;\n                        }, (error) => {\n                            console.log(error);\n                        });\n                }, (error) => {\n                    console.log(error);\n                });\n        }, (error) => {\n            console.log(error);\n        });\n    };\n\n    service.joinDraft = () => {\n        let getCurrentLeague = LeagueService.getLeague();\n        getCurrentLeague.then((response) => {\n            //Get draft object from league.draft_id\n        })\n    };\n\n    service.getDraft = () => {\n        return DraftFactory.getDraft()\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    service.onClock = () => {\n\n    };\n\n    service.draftPlayer = function (draftPick) {\n        return DraftFactory.draftPlayer(draftPick)\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    service.downloadPlayers = function () {\n        DraftFactory.downloadPlayers();\n    };\n\n    return service;\n});","angular.module(\"LeagueService\", []).service(\"LeagueService\", function ($window, $state, $stateParams, $q, $location, LeagueFactory, AuthenticationService) {\n    let service = {};\n\n    let deferred = $q.defer();\n\n    //Current User\n    let currentUser = {};\n    let getCurrentUser = AuthenticationService.currentUser();\n    getCurrentUser.then((response) => {\n        currentUser = response;\n    }, (error) => {\n        console.log(error);\n    });\n\n    //Current League\n    let currentLeague = {};\n    service.getLeague = () => {\n        if ($stateParams.leagueID) {\n            return LeagueFactory.getLeague($stateParams.leagueID)\n                .then((response) => {\n                    if (response.data) {\n                        currentLeague = response.data;\n                        return response.data;\n                    }\n                }, (error) => {\n                    console.log(error);\n                });\n        }\n\n    };\n\n    service.createNewLeague = function (newLeagueInfo) {\n        return LeagueFactory.createLeague(newLeagueInfo)\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    service.joinLeague = function (joinPac) {\n        return LeagueFactory.joinLeague(joinPac)\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    service.newLeagueMessage = (messagePack) => {\n        return LeagueFactory.newLeagueMessage(messagePack)\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    service.updateTeamPick = (pickPack) => {\n        return LeagueFactory.updateTeamPick(pickPack)\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    service.deleteLeagueTeam = (team) => {\n        return LeagueFactory.deleteLeagueTeam(team)\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    service.getUserLeagues = (id) => {\n        return LeagueFactory.getUserLeagues(id)\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    return service;\n});","angular.module('DashboardController', []).controller('DashboardController', function (AuthenticationService, LeagueService) {\n    let vm = this;\n\n    vm.currentLeagues = [];\n    vm.currentUser = AuthenticationService.currentUser().then((response) => {\n        vm.currentUser = response;\n        return LeagueService.getUserLeagues(response._id).then((leagues) => {\n            vm.currentLeagues = leagues.data\n        }, (error) => {\n            console.log(error);\n        })\n    }, (error) => {\n        console.log(error);\n    });\n    \n});","angular.module(\"DraftController\", []).controller(\"DraftController\", function ($state, $stateParams, AuthenticationService, LeagueService, DraftService, DraftFactory) {\n    let vm = this;\n\n    vm.message = \"\";\n\n    vm.onClock = \"\";\n\n    vm.currentUser = AuthenticationService.currentUser().then((response) => {\n        vm.currentUser = response;\n    });\n\n    vm.availablePlayers = [];\n    vm.currentDraft = DraftService.getDraft().then((response) => {\n        draftSort(response.data.draft, response.data.players);\n    });\n\n    vm.draftPlayer = (player_id) => {\n        let draftPick = {\n            position: vm.onClock.position,\n            player_id: player_id\n        };\n        return DraftService.draftPlayer(draftPick).then((response) => {\n\n            $state.reload();\n        }, (error) => {\n            console.log(error);\n        });\n    };\n\n    let draftSort = (draft, players) => {\n        let sortedDraft = [];\n        let sorted = false;\n        let x = 0;\n        while (sorted == false) {\n            for (let y = 0; y < draft.field.length; y++) {\n                if (draft.field[y].picks[x]) {\n                    sortedDraft.push({ _id: draft.field[y].picks[x]._player });\n                }\n                else {\n                    vm.onClock = draft.field[y];\n                    sorted = true;\n                    break;\n                }\n            }\n            x++;\n            if (sorted == false) {\n                for (let z = 9; z >= 0; z--) {\n                    if (draft.field[z].picks[x]) {\n                        sortedDraft.push({ _id: draft.field[z].picks[x]._player });\n                    }\n                    else {\n                        vm.onClock = draft.field[z];\n                        sorted = true;\n                        break;\n                    }\n                }\n                x++;\n            }\n        }\n\n        for (let p = 0; p < players.length; p++) {\n            for (let d = 0; d < sortedDraft.length; d++) {\n                if (players[p]._id == sortedDraft[d]._id) {\n                    sortedDraft[d].displayName = players[p].displayName;\n                    sortedDraft[d].team = players[p].team;\n                    sortedDraft[d].position = players[p].position;\n                    players.splice(p, 1);\n                }\n            }\n        }\n        vm.draft = sortedDraft;\n        vm.availablePlayers = players;\n\n    };\n});","angular.module('LeagueCommishController', []).controller('LeagueCommishController', function ($rootScope, $scope, $q, $state, AuthenticationService, LeagueService) {\n    let vm = this;\n\n    vm.message = \"\";\n\n    //Current User\n    vm.currentUser = {};\n    let getCurrentUser = AuthenticationService.currentUser();\n    getCurrentUser.then((response) => {\n        vm.currentUser = response;\n        return;\n    }, (error) => {\n        console.log(error);\n    });\n\n    //Current League\n    vm.league = {};\n    let getLeague = LeagueService.getLeague();\n    getLeague.then((response) => {\n        vm.league = response;\n        createPicksList(response);\n    }, (error) => {\n        console.log(error);\n    });\n\n    //Commish Auth\n    vm.isCommish = (userID, league) => {\n        let commish = false;\n        if (userID && league) {\n            league.forEach((element) => {\n                if (element == userID) {\n                    commish = true;\n                }\n            });\n            return commish;\n        }\n        return commish;\n    };\n\n    vm.leagueField = [];\n\n    let createPicksList = (league) => {\n        if (league) {\n            let draftOrder = { title: \"Draft Order\", teams: [] };\n            let size = league.size;\n            let currentTeams = league.teams;\n            for (let x = 1; x <= size; x++) {\n                let draftPick = { 'pick': x };\n                // angular.forEach(currentTeams, (team, index) => {\n                //     if (team.pick == x) {\n                //         draftPick = team;\n                //         currentTeams.splice(index, 1);\n                //     }\n                // });\n                currentTeams.forEach((team, index) => {\n                    if (team.pick == x) {\n                        draftPick = team;\n                        currentTeams.splice(index, 1);\n                    }\n                });\n                draftOrder.teams.push(draftPick);\n            }\n            vm.leagueField.push(draftOrder);\n            if (currentTeams.length > 0) {\n                let teams = { title: \"Needs Pick\", teams: [] };\n                currentTeams.forEach((team) => {\n                    teams.teams.push(team);\n                });\n                vm.leagueField.push(teams);\n            }\n        }\n    };\n\n    $scope.onDrop = function (srcList, srcIndex, targetList, targetIndex) {\n        // Copy the item from source to target.\n        targetList.splice(targetIndex, 0, srcList[srcIndex]);\n        // Remove the item from the source, possibly correcting the index first.\n        // We must do this immediately, otherwise ng-repeat complains about duplicates.\n        if (srcList == targetList && targetIndex <= srcIndex) srcIndex++;\n        srcList.splice(srcIndex, 1);\n        for (let x = 0; x < targetList.length; x++) {\n            if (targetList[x]._id == this.team._id) {\n                let team = this.team;\n                let pick = x + 1;\n                return updatePick(team, pick).then(() => {\n                    return true;\n                }, (error) => {\n                    console.log(error);\n                });\n            }\n        }\n        // By returning true from dnd-drop we signalize we already inserted the item.\n        return true;\n    };\n\n    let updatePick = (team, pick) => {\n        let pickPack = {\n            pick: pick,\n            team: team\n        };\n        return LeagueService.updateTeamPick(pickPack)\n            .then((response) => {\n                $state.reload();\n                return;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n    \n    vm.deleteTeam = (id) => {\n        let team = {\n            team_id: id\n        };\n        return LeagueService.deleteLeagueTeam(team)\n            .then((response) => {\n                $state.reload();\n                return\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n});","angular.module('LeagueController', []).controller('LeagueController', function ($scope, $q, $uibModal, $confirm, $state, $stateParams, AuthenticationService, LeagueService, DraftService) {\n\n    let vm = this;\n\n    vm.message = \"\";\n\n    vm.params = $stateParams;\n\n    //Current User\n    vm.currentUser = {};\n    let getCurrentUser = AuthenticationService.currentUser();\n    getCurrentUser.then((response) => {\n        vm.currentUser = response;\n        return;\n    }, (error) => {\n        console.log(error);\n    });\n\n    //Current League\n    vm.league = {};\n    let getLeague = LeagueService.getLeague();\n    getLeague.then((response) => {\n        vm.league = response;\n        return;\n    }, (error) => {\n        console.log(error);\n    });\n\n    //Commish Auth\n    vm.isCommish = (userID, league) => {\n        let commish = false;\n        if (userID && league) {\n            league.forEach((element) => {\n                if (element == userID) {\n                    commish = true;\n                }\n            });\n            return commish;\n        }\n        return commish;\n    };\n\n    //Open New League Message Modal\n    vm.newMessage = () => {\n        $scope.modalInstance = $uibModal.open({\n            animation: true,\n            size: \"lg\",\n            templateUrl: 'newMessageModal.html',\n            controller: 'LeagueController',\n            controllerAs: 'vm',\n            scope: $scope,\n            backdrop: \"static\",\n        });\n    };\n\n    vm.sendMessage = () => {\n\n        let messagePack = {\n            \"leagueID\": vm.league._id,\n            \"userID\": vm.currentUser._id,\n            \"message\": vm.newLeagueMessage\n        };\n\n        return LeagueService.newLeagueMessage(messagePack)\n            .then((response) => {\n                console.log(response);\n                if (response.statusText == \"OK\") {\n                    $state.reload();\n                }\n                console.log(response);\n            }, (error) => {\n                console.log(error);\n            });\n    };\n    \n    vm.cancel = () => {\n        $scope.modalInstance.dismiss('cancel');\n    };\n\n    vm.dismissError = () => {\n        vm.message = \"\";\n    };\n\n    vm.startDraft = () => {\n        let startLeagueDraft = DraftService.startDraft();\n        startLeagueDraft.then((response) => {\n            if (response.error) {\n                vm.message = response.error;\n            }\n            else {\n                $state.reload();\n            }\n        }, (error) => {\n            console.log(error);\n        });\n    };\n});","angular.module('LeagueJoinController', []).controller('LeagueJoinController', function($q, $rootScope, $scope, $state, AuthenticationService, LeagueService) {\n    let vm = this;\n\n    vm.message = \"\";\n\n    //Current User\n    vm.currentUser = {};\n    let getCurrentUser = AuthenticationService.currentUser();\n    getCurrentUser.then((response) => {\n        vm.currentUser = response;\n        return;\n    }, (error) => {\n        console.log(error);\n    });\n\n    //Join League\n    vm.joinLeague = () => {\n        let code = \"\";\n        for (var x in vm.data) {\n            code += vm.data[x];\n        }\n        let leaguePack = {\n            \"user_id\": vm.currentUser._id,\n            \"league_code\": code,\n        };\n        return LeagueService.joinLeague(leaguePack)\n            .then((response) => {\n                if (response.data.message) {\n                    vm.message = response.data.message;\n                    \n                }\n                else {\n                    $state.transitionTo('dashboard');\n                }\n\n            }, (error) => {\n                console.log(error);\n            });\n    };\n    \n    //Moves Focus After Input\n    vm.moveFocus = (nextId) => {\n        $('#' + nextId).focus();\n    };\n\n    vm.dismissError = () => {\n        vm.message = \"\";\n    };\n});","angular.module('LeagueNewController', []).controller('LeagueNewController', function ($q, $state, AuthenticationService, LeagueService) {\n    let vm = this;\n\n    vm.messsage = \"\";\n\n    //Current User\n    vm.currentUser = {};\n    let getCurrentUser = AuthenticationService.currentUser();\n    getCurrentUser.then((response) => {\n        vm.currentUser = response;\n        return;\n    }, (error) => {\n        console.log(error);\n    });\n\n    //Create New League\n    vm.createNewLeague = () => {\n        let newLeagueInfo = {\n            \"leagueName\": vm.newLeague.leagueName,\n            \"leagueSize\": vm.newLeague.leagueSize,\n            \"user_id\": vm.currentUser._id\n        };\n\n        return LeagueService.createNewLeague(newLeagueInfo)\n            .then((response) => {\n                $state.transitionTo('dashboard');\n            }, (error) => {\n                console.log(error);\n            });\n    };\n})","angular.module('UserLoginController', []).controller('UserLoginController', function ($state, AuthenticationService) {\n    let vm = this;\n\n    vm.message = \"\";\n\n    vm.loginInfo = {\n        email: \"\",\n        password: \"\"\n    };\n\n    vm.login = () => {\n        return AuthenticationService.login(vm.loginInfo)\n            .then((response) => {\n                if (response == \"Token Set!\") {\n                    $state.transitionTo('dashboard');\n                }\n                else {\n                    vm.message = response;\n                }\n            }, (error) => {\n                console.log(error);\n            });\n    };\n    \n    // vm.onSignIn = (googleUser) => {\n    //     console.log(\"Fired onSign In\");\n    //     if (googleUser) {\n    //         var profile = googleUser.getBasicProfile();\n    //         console.log(\"Email: \" + profile.getEmail());\n    //     }\n    // };\n\n    vm.dismissError = () => {\n        vm.message = \"\";\n    };\n});","angular.module('UserRegisterController', []).controller('UserRegisterController', function ($state, AuthenticationService) {\n    let vm = this;\n\n    vm.message = \"\";\n\n    vm.registerInfo = {\n        email: \"\",\n        userName: \"\",\n        firstName: \"\",\n        password: \"\"\n    };\n\n    vm.registerNew = function () {\n        return AuthenticationService.register(vm.registerInfo)\n            .then((response) => {\n                $state.transitionTo('dashboard');\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    vm.dismissError = () => {\n        vm.message = \"\";\n    };\n});","angular.module('UserSettingsController', []).controller('UserSettingsController', function (AuthenticationService) {\n    let vm = this;\n\n    vm.message = \"\";\n\n    vm.currentUser = {};\n    let getCurrentUser = AuthenticationService.currentUser();\n    getCurrentUser.then((response) => {\n        vm.currentUser = response;\n    }, (error) => {\n        console.log(error);\n    });\n\n    vm.tab = 1;\n\n    vm.setTab = (tabId) => {\n        vm.tab = tabId;\n    };\n\n    vm.isSet = (tabId) => {\n        return vm.tab === tabId;\n    };\n\n    \n\n    \n\n    \n\n    \n\n    \n    \n    vm.dismissError = () => {\n        vm.message = \"\";\n    }\n\n});\n\n"]}