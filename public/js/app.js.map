{"version":3,"sources":["app.js","controllers/AppController.js","controllers/ChatController.js","services/AuthenticationService.js","services/DraftService.js","services/LeagueService.js","factories/ChatFactory.js","factories/DraftFactory.js","factories/LeagueFactory.js","factories/UserFactory.js","controllers/dashboard/DashboardController.js","controllers/draft/DraftController.js","controllers/league/LeagueCommishController.js","controllers/league/LeagueController.js","controllers/league/LeagueJoinController.js","controllers/league/LeagueNewController.js","controllers/user/UserLoginController.js","controllers/user/UserRegisterController.js","controllers/user/UserSettingsController.js"],"names":["DraftApp","angular","module","config","$urlRouterProvider","otherwise","$stateProvider","state","url","templateProvider","views","content","controller","$templateCache","controllerAs","get","authenticate","header","league","LeagueService","resolve","$stateParams","_draft","DraftService","getDraft","run","AuthenticationService","trans","transitionTo","log","error","$transitions","$state","$location","onStart","console","to","response","isLoggedIn","then","getLoginStatus","vm","this","currentUser","downloadPlayers","data","deleteAllPlayers","logOut","directive","$scope","element","attrs","bind","event","which","$apply","$eval","ngEnter","preventDefault","ChatFactory","currentLeague","messages","message","filterText","socket","io","connect","on","reverse","unshift","sendMessage","postMessage","result","err","window","alert","service","$window","$rootScope","$q","UserFactory","tokenStorage","setToken","key","token","Promise","localStorage","setItem","getToken","getItem","removeToken","removeItem","payload","split","atob","JSON","parse","exp","Date","now","_id","userName","firstName","email","leagues","updateToken","register","user","callback","reponse","login","status","clear","$new","DraftFactory","draftStorage","setDraft","id","draft","sessionStorage","removeDraft","stringify","startDraft","getLeague","x","teams","length","pick","draftField","size","position","forEach","team","_user","push","_loop","newDraftObject","joinDraft","onClock","availablePlayers","draftList","pDraft","sortedDraft","sorted","y","field","picks","_player","z","draftPlayer","draftPick","LeagueFactory","defer","leagueID","createNewLeague","newLeagueInfo","createLeague","joinLeague","joinPac","newLeagueMessage","messagePack","updateTeamPick","pickPack","deleteLeagueTeam","getUserLeagues","factory","$http","post","success","deleteAllChat","draftID","player_id","getDraftedPlayers","output","leaguePack","patch","params","user_id","registerInfo","loginInfo","currentLeagues","sortType","sortReverse","searchPlayer","players","reload","createPicksList","isCommish","userID","commish","leagueField","draftOrder","title","currentTeams","index","splice","onDrop","srcList","srcIndex","targetList","targetIndex","updatePick","deleteTeam","team_id","$uibModal","$confirm","newMessage","modalInstance","open","animation","templateUrl","scope","backdrop","statusText","cancel","dismiss","dismissError","code","league_code","moveFocus","nextId","$","focus","messsage","leagueName","newLeague","leagueSize","password","go","registerNew","tab","setTab","tabId","isSet"],"mappings":"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","file":"app.js","sourcesContent":["let DraftApp = angular.module(\"DraftApp\", [\"ngRoute\", \"ngMessages\", \"ngAnimate\",\n    \"ui.router\", \"ui.bootstrap\", \"dndLists\", \"angular-confirm\",\n    \"AppController\", \"ChatController\", \"DashboardController\", \"LeagueController\", \"LeagueCommishController\", \"LeagueJoinController\", \"LeagueNewController\", \"UserSettingsController\", \"UserLoginController\", \"UserRegisterController\", \"DraftController\",\n    \"AuthenticationService\", \"DraftService\", \"LeagueService\",\n    \"ChatFactory\", \"DraftFactory\", \"LeagueFactory\", \"UserFactory\"]);\n\nangular.module('DraftApp').config(function ($stateProvider, $urlRouterProvider) {\n\n    $urlRouterProvider.otherwise(\"/\");\n\n    $stateProvider\n        .state(\"index\", {\n            url: \"/\",\n            views: {\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('welcome.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        })\n        .state(\"login\", {\n            url: \"/login\",\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: \"vm\",\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('auth/login.html');\n                    },\n                    controller: \"UserLoginController\",\n                    controllerAs: \"vm\"\n                },\n            }\n        })\n        .state('register', {\n            url: \"/register\",\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: 'vm'\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('auth/register.html');\n                    },\n                    controller: \"UserRegisterController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        })\n        .state(\"settings\", {\n            url: \"/settings\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: 'vm',\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('auth/settings.html');\n                    },\n                    controller: \"UserSettingsController\",\n                    controllerAs: \"vm\",\n                }\n            }\n        })\n        .state(\"dashboard\", {\n            url: \"/dashboard\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: 'vm',\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('dashboard.html');\n                    },\n                    controller: \"DashboardController\",\n                    controllerAs: \"vm\",\n                }\n            }\n        })\n        .state('newLeague', {\n            url: \"/league/new\",\n            authenticate: true,\n            views: {\n                'header': {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: 'vm'\n                },\n                'content': {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('league/league.new.html');\n                    },\n                    controller: \"LeagueNewController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        })\n        .state('joinLeague', {\n            url: \"/league/join\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: 'vm'\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('league/league.join.html');\n                    },\n                    controller: \"LeagueJoinController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        })\n        .state('league', {\n            url: \"/league/:leagueID/index\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: 'vm'\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('league/league.index.html');\n                    },\n                    controller: \"LeagueController\",\n                    controllerAs: \"vm\",\n                    resolve: {\n                        league: function (LeagueService, $stateParams) {\n                            return LeagueService.get();\n                        }\n                    }\n                }\n            }\n        })\n        .state('leagueCommish', {\n            url: \"/league/:leagueID/commish\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: 'vm'\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('league/league.commish.html');\n                    },\n                    controller: \"LeagueCommishController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        })\n        .state(\"draft\", {\n            url: \"/league/:leagueID/draft/:draftID/index\",\n            authenticate: true,\n            resolve: {\n                _draft: function (DraftService, $stateParams) {\n                    return DraftService.getDraft($stateParams);\n                }\n            },\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: \"vm\"\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('draft/draft.index.html');\n                    },\n                    controller: \"DraftController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        })\n        .state(\"draftBoard\", {\n            url: \"/league/:leagueID/draft/:draftID/draftBoard\",\n            authenticate: true,\n            resolve: {\n                _draft: function (DraftService, $stateParams) {\n                    return DraftService.getDraft($stateParams);\n                }\n            },\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: \"vm\",\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('draft/draftBoard.html');\n                    },\n                    controller: \"DraftBoardController\",\n                    controllerAs: \"vm\",\n                }\n            }\n        })\n        .state(\"chat\", {\n            url: \"/chat\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: \"vm\"\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('chat.html');\n                    },\n                    controller: \"ChatController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        });\n});\n\nangular.module('DraftApp').run(function ($transitions, $state, $location, AuthenticationService) {\n\n    $transitions.onStart({ to: '*' }, (trans) => {\n        return AuthenticationService.isLoggedIn().then((response) => {\n            if (trans.to().authenticate && response == false) {\n                $state.transitionTo('login');\n            }\n        }, (error) => {\n            console.log(error);\n        });\n    });\n    $transitions.onStart({ to: 'login' }, (trans) => {\n        return  AuthenticationService.isLoggedIn().then((response) => {\n            if (response == true) {\n                $state.transitionTo('dashboard');\n            }\n        }, (error) => {\n            console.log(error);\n        });\n    });\n});","angular.module('AppController', []).controller('AppController', function (AuthenticationService, DraftService, LeagueService) {\n\n    let vm = this;\n\n    vm.isLoggedIn = false;\n    let getLoginStatus = AuthenticationService.isLoggedIn();\n    getLoginStatus.then((response) => {\n        vm.isLoggedIn = response;\n        // if (response == true) {\n        //   vm.isLoggedIn = true;\n        // }\n        // if (response == false) {\n        //   vm.isLoggedIn = false;\n        // }\n    }, (error) => {\n        console.log(error);\n    });\n\n    vm.currentUser = {};\n    let getCurrentUser = AuthenticationService.currentUser();\n    getCurrentUser.then((response) => {\n        vm.currentUser = response;\n    }, (error) => {\n        console.log(error);\n    });\n\n\n    vm.downloadPlayers = function () {\n        DraftService.downloadPlayers(function (data) {\n            console.log(data);\n        });\n    };\n\n    vm.deleteAllPlayers = function () {\n        DraftService.deleteAllPlayers(function (data) {\n            console.log(data);\n        });\n    };\n\n    vm.logOut = () => {\n        AuthenticationService.logOut();\n    };\n});","angular.module('ngEnter', []).directive('ngEnter', function ($scope, element, attrs) {\n\n    element.bind(\"keypress\", function (event) {\n        if (event.which === 13) {\n            $scope.$apply(function () {\n                $scope.$eval(attrs.ngEnter);\n            });\n            event.preventDefault();\n        }\n    });\n});\n\nangular.module('ChatController', []).controller('ChatController', function ($scope, AuthenticationService, LeagueService, ChatFactory) {\n\n    var vm = this;\n\n    vm.currentUser = AuthenticationService.currentUser();\n\n    vm.currentLeague = LeagueService.currentLeague();\n\n    vm.messages = [];\n\n    vm.message = \"\";\n    vm.filterText = \"\";\n\n    \n    var socket = io.connect();\n\n    socket.on(\"pastMessages\", function (data) {\n        $scope.$apply(function(){\n            vm.messages = data.reverse();\n        });\n    });\n\n    socket.on(\"receiveMessage\", function(data){\n        $scope.$apply(function(){\n            vm.messages.unshift(data);\n        });\n    });\n\n    vm.sendMessage = function () {\n        // var chatMessage = {\n        //     \"_id\": vm.currentLeague.chat._id,\n        //     \"userName\": vm.currentUser.firstName,\n        //     \"message\": vm.message\n        // };\n        LeagueService.postMessage(vm.message, function (result, err) {\n            if (err) {\n                window.alert(\"Error!\");\n            }\n            // else{\n            //     socket.emit(\"receiveMessage\", result);\n            //     vm.message = \"\";\n            // }\n        });\n    };\n});","angular.module('AuthenticationService', []).service('AuthenticationService', function ($window, $state, $rootScope, $q, UserFactory) {\n  let service = {};\n\n  const tokenStorage = {\n    setToken: (key, token) => {\n      return Promise.resolve().then(() => {\n        $window.localStorage.setItem(key, token);\n      });\n    },\n    getToken: (key) => {\n      return Promise.resolve().then(() => {\n        return $window.localStorage.getItem(key);\n      });\n    },\n    removeToken: (key) => {\n      return Promise.resolve().then(() => {\n        $window.localStorage.removeItem(key);\n      });\n    }\n  }\n\n  //Is A User Logged In\n  service.isLoggedIn = () => {\n    return tokenStorage.getToken('user-token')\n      .then((token) => {\n        if (token) {\n          let payload = token.split('.')[1];\n          payload = $window.atob(payload);\n          payload = JSON.parse(payload);\n          return payload.exp > Date.now() / 1000;\n        }\n        else {\n          return false;\n        }\n      }, (error) => {\n        console.log(error);\n      });\n  };\n\n  //Return The Current User\n  service.currentUser = function () {\n    return service.isLoggedIn()\n      .then((response) => {\n        if (response) {\n          return tokenStorage.getToken('user-token')\n            .then((token) => {\n              let payload = token.split('.')[1];\n              payload = $window.atob(payload);\n              payload = JSON.parse(payload);\n\n              return {\n                _id: payload._id,\n                userName: payload.userName,\n                firstName: payload.firstName,\n                email: payload.email,\n                leagues: payload.leagues\n              };\n            }, (error) => {\n              console.log(error);\n            });\n        }\n      }, (error) => {\n        console.log(error);\n      });\n  };\n\n  service.updateToken = (token) => {\n    return tokenStorage.removeToken('user-token')\n      .then(() => {\n        return tokenStorage.setToken('user-token', token)\n          .then(() => {\n            return \"Token Set!\";\n          }, (error) => {\n            console.log(error);\n          })\n      }, (error) => {\n        console.log(error);\n      });\n  };\n\n  service.register = function (user, callback) {\n    return UserFactory.register(user)\n      .then((response) => {\n        if (response.data.token) {\n          return tokenStorage.setToken('user-token', response.data.token)\n            .then(() => {\n              return \"Token Set!\";\n            });\n        }\n        else if (response.message) {\n          return reponse.message;\n        }\n        else {\n          return \"Unknown Error\";\n        }\n      }, (error) => {\n        console.log(error);\n      });\n  };\n\n  service.login = (user) => {\n    return UserFactory.login(user)\n      .then((response) => {\n        if (response.data.token) {\n          return tokenStorage.setToken('user-token', response.data.token)\n            .then(() => {\n              return \"Token Set!\"\n            }, (error) => {\n              console.log(error);\n            });\n        }\n        if (response.status == 401) {\n          return \"Incorrect Username or Password!\";\n        }\n        else {\n          return \"Unknown Error!\"\n        }\n      }, (error) => {\n        console.log(error);\n      });\n  };\n\n  service.logOut = () => {\n    $window.localStorage.clear();\n    $rootScope = $rootScope.$new(true);\n  };\n\n  return service;\n});\n","angular.module('DraftService', []).service('DraftService', function ($window, $state, DraftFactory, AuthenticationService, LeagueService) {\n    let service = {};\n\n    const draftStorage = {\n        setDraft: (id, draft) => {\n            return Promise.resolve().then(() => {\n                $window.sessionStorage.setItem(id, draft);\n            });\n        },\n        getDraft: (id) => {\n            return Promise.resolve().then(() => {\n                return $window.sessionStorage.getItem(id);\n            });\n        },\n        removeDraft: () => {\n            return Promise.resolve().then(() => {\n                $window.sessionStorage.removeItem(id);\n            });\n        }\n    };\n\n    service.getDraft = ($stateParams) => {\n        return DraftFactory.getDraft($stateParams)\n            .then((response) => {\n                return draftStorage.setDraft(\"draft\", JSON.stringify(response.data))\n                    .then(() => {\n                        return\n                        // console.log(\"Done\");\n                    }, (error) => {\n                        console.log(error);\n                    });\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    service.startDraft = () => {\n\n        //Gets League from LeagueService\n        return LeagueService.getLeague().then((response) => {\n\n            //Checks if any teams have not been assigned a draft pick\n            for (let x = 0; x < response.teams.length; x++) {\n                if (!response.teams[x].pick) {\n                    return { error: \"Please Assign All Picks\" };\n                }\n            }\n            //Sets the field for a new draft\n            let draftField = [];\n            for (let x = 1; x <= response.size; x++) {\n                let position = { position: x };\n                response.teams.forEach((team) => {\n                    if (team.pick == x) {\n                        position._user = team._user._id;\n                    }\n                });\n                draftField.push(position);\n            }\n\n            let newDraftObject = {};\n            newDraftObject.teams = draftField;\n\n            return DraftFactory.startDraft(newDraftObject)\n                .then((response) => {\n                    return LeagueService.getLeague()\n                        .then((response) => {\n                            return response;\n                        }, (error) => {\n                            console.log(error);\n                        });\n                }, (error) => {\n                    console.log(error);\n                });\n        }, (error) => {\n            console.log(error);\n        });\n    };\n\n    service.joinDraft = () => {\n        let getCurrentLeague = LeagueService.getLeague();\n        getCurrentLeague.then((response) => {\n            //Get draft object from league.draft_id\n        });\n    };\n\n    service.onClock = () => {\n        return draftStorage.getDraft('draft').then((draft) => {\n            let pDraft = JSON.parse(draft);\n            return pDraft.onClock;\n        }, (error) => {\n            console.log(error);\n        });\n    };\n\n    service.availablePlayers = () => {\n        return draftStorage.getDraft('draft').then((draft) => {\n            let pDraft = JSON.parse(draft);\n            return pDraft.availablePlayers;\n        }, (error) => {\n            console.log(error);\n        });\n    };\n\n    service.draftList = () => {\n        return draftStorage.getDraft('draft').then((draft) => {\n            let pDraft = JSON.parse(draft);\n            let sortedDraft = [];\n            let sorted = false;\n            let x = 0;\n            while (sorted == false) {\n                for (let y = 0; y < pDraft.draft.field.length; y++) {\n                    if (pDraft.draft.field[y].picks[x]) {\n                        sortedDraft.push(pDraft.draft.field[y].picks[x]._player);\n                    }\n                    else {\n                        sorted = true;\n                        break;\n                    }\n                }\n                x++;\n                if (sorted == false) {\n                    for (let z = pDraft.draft.field.length - 1; z >= 0; z--) {\n                        if (pDraft.draft.field[z].picks[x]) {\n                            sortedDraft.push(pDraft.draft.field[z].picks[x]._player);\n                        }\n                        else {\n                            sorted = true;\n                            break;\n                        }\n                    }\n                    x++;\n                }\n            }\n            return sortedDraft;\n        }, (error) => {\n            console.log(error);\n        });\n    };\n\n    service.draftPlayer = (draftPick) => {\n        return DraftFactory.draftPlayer(draftPick)\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    service.downloadPlayers = function () {\n        DraftFactory.downloadPlayers();\n    };\n\n    \n\n    return service;\n});","angular.module(\"LeagueService\", []).service(\"LeagueService\", function ($window, $state, $stateParams, $q, $location, LeagueFactory, AuthenticationService) {\n    let service = {};\n\n    let deferred = $q.defer();\n\n    //Current User\n    let currentUser = {};\n    let getCurrentUser = AuthenticationService.currentUser();\n    getCurrentUser.then((response) => {\n        currentUser = response;\n    }, (error) => {\n        console.log(error);\n    });\n\n    //Current League\n    let currentLeague = {};\n    service.getLeague = () => {\n        if ($stateParams.leagueID) {\n            return LeagueFactory.getLeague($stateParams.leagueID)\n                .then((response) => {\n                    if (response.data) {\n                        currentLeague = response.data;\n                        return response.data;\n                    }\n                }, (error) => {\n                    console.log(error);\n                });\n        }\n\n    };\n\n    service.createNewLeague = function (newLeagueInfo) {\n        return LeagueFactory.createLeague(newLeagueInfo)\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    service.joinLeague = function (joinPac) {\n        return LeagueFactory.joinLeague(joinPac)\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    service.newLeagueMessage = (messagePack) => {\n        return LeagueFactory.newLeagueMessage(messagePack)\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    service.updateTeamPick = (pickPack) => {\n        return LeagueFactory.updateTeamPick(pickPack)\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    service.deleteLeagueTeam = (team) => {\n        return LeagueFactory.deleteLeagueTeam(team)\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    service.getUserLeagues = (id) => {\n        return LeagueFactory.getUserLeagues(id)\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    return service;\n});","angular.module(\"ChatFactory\", []).factory(\"ChatFactory\", function($http){\n\n    var factory = {};\n\n    factory.postMessage = function(message, callback){\n        $http.post(\"/message\", message).success(function(data, status){\n            callback(data, false);\n        })\n        .error(function(data, status){\n            callback(data, true);\n        });\n    };\n\n    factory.deleteAllChat = function(){\n        $http.post(\"/deleteAllChat\").success(function(data){\n            console.log(data);\n        });\n    };\n\n    return factory;\n});","angular.module(\"DraftFactory\", []).factory(\"DraftFactory\", function($http, $stateParams){\n    var factory = {};\n\n    factory.startDraft = (newDraftObject) => {\n        return $http.post(\"/league/\" + $stateParams.leagueID + \"/draft/new\", newDraftObject)\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n    \n    factory.getDraft = ($stateParams) => {\n        return $http.get(\"/league/\" + $stateParams.leagueID + \"/draft/\" + $stateParams.draftID + \"/get\")\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    factory.downloadPlayers = () => {\n        return $http.post(\"/downloadPlayers\").then((response)=>{\n            console.log(response);\n        }, (error) => {\n            console.log(error);\n        });\n    };\n\n    factory.draftPlayer = function (draftPick) {\n        return $http.post(\"/league/\" + $stateParams.leagueID + \"/draft/\" + $stateParams.draftID + \"/position/\" + draftPick.position + \"/player/\" + draftPick.player_id)\n            .then(function (response) {\n                console.log(response);\n                return response;\n            }, function(error){\n                console.log(error);\n            });\n    };\n\n    factory.getDraftedPlayers = function(callback){\n        $http.get(\"/getDraftedPlayers\").success(function(output){\n            callback(output);\n        });\n    };\n\n    return factory;\n});","angular.module(\"LeagueFactory\", []).factory(\"LeagueFactory\", function ($http, $stateParams) {\n    let factory = {};\n\n    factory.createLeague = (newLeagueInfo) => {\n        return $http.post(\"/league/create\", newLeagueInfo)\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    factory.joinLeague = (leaguePack) => {\n        return $http.patch(\"/league/join\", leaguePack)\n            .then(function (response) {\n                return response;\n            }, function (error) {\n                console.log(error);\n            });\n    };\n\n    factory.getLeague = (id) => {\n        return $http.get(\"/getLeague/\", { params: { _id: id } })\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n    \n    factory.newLeagueMessage = (messagePack) => {\n        return $http.post('/league/newMessage', messagePack)\n            .then((response) => {\n                return response\n            }, (error) => {\n                console.log(error);\n            });\n    };\n    \n    factory.updateTeamPick = (pickPack) => {\n        return $http.post('/league/' + $stateParams.leagueID, pickPack)\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n    \n    factory.deleteLeagueTeam = (team) => {\n        console.log(team);\n        return $http.post(\"/league/\" + $stateParams.leagueID + \"/deleteLeagueTeam\", team)\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n    \n    factory.getUserLeagues = (user_id) => {\n        return $http.get('/leagues/user/' + user_id)\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    return factory;\n});","angular.module('UserFactory', []).factory('UserFactory', function ($http) {\n  let factory = {};\n\n  factory.register = (registerInfo) => {\n    return $http.post(\"/register\", registerInfo)\n      .then((response) => {\n        return response;\n      }, (error) => {\n        console.log(error);\n        return error;\n    });\n  };\n\n  factory.login = (loginInfo) => {\n    return $http.post(\"/login\", loginInfo)\n      .then((response) => {\n        return response;\n      }, (error) => {\n        console.log(error);\n        return error;\n      });\n  };\n\n  return factory;\n});","angular.module('DashboardController', []).controller('DashboardController', function (AuthenticationService, LeagueService) {\n    let vm = this;\n\n    vm.currentLeagues = [];\n    vm.currentUser = AuthenticationService.currentUser().then((response) => {\n        vm.currentUser = response;\n        return LeagueService.getUserLeagues(response._id).then((leagues) => {\n            vm.currentLeagues = leagues.data\n        }, (error) => {\n            console.log(error);\n        })\n    }, (error) => {\n        console.log(error);\n    });\n    \n});","angular.module(\"DraftController\", []).controller(\"DraftController\", function ($state, _draft, $stateParams, AuthenticationService, LeagueService, DraftService, DraftFactory) {\n    let vm = this;\n\n    vm.message = \"\";\n\n    vm.sortType = 'displayName';\n    vm.sortReverse = false;\n    vm.searchPlayer = \"\";\n\n    vm.currentUser = AuthenticationService.currentUser().then((response) => {\n        vm.currentUser = response;\n    });\n\n    let getAvailablePlayers = DraftService.availablePlayers();\n    getAvailablePlayers.then((players) => {\n        vm.availablePlayers = players;\n    }, (error) => {\n        console.log(error);\n    });\n\n    let getOnClock = DraftService.onClock();\n    getOnClock.then((position) => {\n        vm.onClock = position;\n    }, (error) => {\n        console.log(error);\n    });\n\n    let getDraftList = DraftService.draftList();\n    getDraftList.then((draft) => {\n        vm.draft = draft;\n    }, (error) => {\n        console.log(error);\n    });\n\n    vm.draftPlayer = (player_id) => {\n        let draftPick = {\n            position: vm.onClock.position,\n            player_id: player_id\n        };\n        return DraftService.draftPlayer(draftPick).then((response) => {\n            $state.reload();\n        }, (error) => {\n            console.log(error);\n        });\n    };\n\n\n});","angular.module('LeagueCommishController', []).controller('LeagueCommishController', function ($rootScope, $scope, $q, $state, AuthenticationService, LeagueService) {\n    let vm = this;\n\n    vm.message = \"\";\n\n    //Current User\n    vm.currentUser = {};\n    let getCurrentUser = AuthenticationService.currentUser();\n    getCurrentUser.then((response) => {\n        vm.currentUser = response;\n        return;\n    }, (error) => {\n        console.log(error);\n    });\n\n    //Current League\n    vm.league = {};\n    let getLeague = LeagueService.getLeague();\n    getLeague.then((response) => {\n        vm.league = response;\n        createPicksList(response);\n    }, (error) => {\n        console.log(error);\n    });\n\n    //Commish Auth\n    vm.isCommish = (userID, league) => {\n        let commish = false;\n        if (userID && league) {\n            league.forEach((element) => {\n                if (element == userID) {\n                    commish = true;\n                }\n            });\n            return commish;\n        }\n        return commish;\n    };\n\n    vm.leagueField = [];\n\n    let createPicksList = (league) => {\n        if (league) {\n            let draftOrder = { title: \"Draft Order\", teams: [] };\n            let size = league.size;\n            let currentTeams = league.teams;\n            for (let x = 1; x <= size; x++) {\n                let draftPick = { 'pick': x };\n                // angular.forEach(currentTeams, (team, index) => {\n                //     if (team.pick == x) {\n                //         draftPick = team;\n                //         currentTeams.splice(index, 1);\n                //     }\n                // });\n                currentTeams.forEach((team, index) => {\n                    if (team.pick == x) {\n                        draftPick = team;\n                        currentTeams.splice(index, 1);\n                    }\n                });\n                draftOrder.teams.push(draftPick);\n            }\n            vm.leagueField.push(draftOrder);\n            if (currentTeams.length > 0) {\n                let teams = { title: \"Needs Pick\", teams: [] };\n                currentTeams.forEach((team) => {\n                    teams.teams.push(team);\n                });\n                vm.leagueField.push(teams);\n            }\n        }\n    };\n\n    $scope.onDrop = function (srcList, srcIndex, targetList, targetIndex) {\n        // Copy the item from source to target.\n        targetList.splice(targetIndex, 0, srcList[srcIndex]);\n        // Remove the item from the source, possibly correcting the index first.\n        // We must do this immediately, otherwise ng-repeat complains about duplicates.\n        if (srcList == targetList && targetIndex <= srcIndex) srcIndex++;\n        srcList.splice(srcIndex, 1);\n        for (let x = 0; x < targetList.length; x++) {\n            if (targetList[x]._id == this.team._id) {\n                let team = this.team;\n                let pick = x + 1;\n                return updatePick(team, pick).then(() => {\n                    return true;\n                }, (error) => {\n                    console.log(error);\n                });\n            }\n        }\n        // By returning true from dnd-drop we signalize we already inserted the item.\n        return true;\n    };\n\n    let updatePick = (team, pick) => {\n        let pickPack = {\n            pick: pick,\n            team: team\n        };\n        return LeagueService.updateTeamPick(pickPack)\n            .then((response) => {\n                $state.reload();\n                return;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n    \n    vm.deleteTeam = (id) => {\n        let team = {\n            team_id: id\n        };\n        return LeagueService.deleteLeagueTeam(team)\n            .then((response) => {\n                $state.reload();\n                return\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n});","angular.module('LeagueController', []).controller('LeagueController', function ($scope, $q, $uibModal, $confirm, $state, $stateParams, AuthenticationService, LeagueService, DraftService) {\n\n    let vm = this;\n\n    vm.message = \"\";\n\n    vm.params = $stateParams;\n\n    //Current User\n    vm.currentUser = {};\n    let getCurrentUser = AuthenticationService.currentUser();\n    getCurrentUser.then((response) => {\n        vm.currentUser = response;\n        return;\n    }, (error) => {\n        console.log(error);\n    });\n\n    //Current League\n    vm.league = {};\n    let getLeague = LeagueService.getLeague();\n    getLeague.then((response) => {\n        vm.league = response;\n        return;\n    }, (error) => {\n        console.log(error);\n    });\n\n    //Commish Auth\n    vm.isCommish = (userID, league) => {\n        let commish = false;\n        if (userID && league) {\n            league.forEach((element) => {\n                if (element == userID) {\n                    commish = true;\n                }\n            });\n            return commish;\n        }\n        return commish;\n    };\n\n    //Open New League Message Modal\n    vm.newMessage = () => {\n        $scope.modalInstance = $uibModal.open({\n            animation: true,\n            size: \"lg\",\n            templateUrl: 'newMessageModal.html',\n            controller: 'LeagueController',\n            controllerAs: 'vm',\n            scope: $scope,\n            backdrop: \"static\",\n        });\n    };\n\n    vm.sendMessage = () => {\n\n        let messagePack = {\n            \"leagueID\": vm.league._id,\n            \"userID\": vm.currentUser._id,\n            \"message\": vm.newLeagueMessage\n        };\n\n        return LeagueService.newLeagueMessage(messagePack)\n            .then((response) => {\n                console.log(response);\n                if (response.statusText == \"OK\") {\n                    $state.reload();\n                }\n                console.log(response);\n            }, (error) => {\n                console.log(error);\n            });\n    };\n    \n    vm.cancel = () => {\n        $scope.modalInstance.dismiss('cancel');\n    };\n\n    vm.dismissError = () => {\n        vm.message = \"\";\n    };\n\n    vm.startDraft = () => {\n        let startLeagueDraft = DraftService.startDraft();\n        startLeagueDraft.then((response) => {\n            if (response.error) {\n                vm.message = response.error;\n            }\n            else {\n                $state.reload();\n            }\n        }, (error) => {\n            console.log(error);\n        });\n    };\n});","angular.module('LeagueJoinController', []).controller('LeagueJoinController', function($q, $rootScope, $scope, $state, AuthenticationService, LeagueService) {\n    let vm = this;\n\n    vm.message = \"\";\n\n    //Current User\n    vm.currentUser = {};\n    let getCurrentUser = AuthenticationService.currentUser();\n    getCurrentUser.then((response) => {\n        vm.currentUser = response;\n        return;\n    }, (error) => {\n        console.log(error);\n    });\n\n    //Join League\n    vm.joinLeague = () => {\n        let code = \"\";\n        for (var x in vm.data) {\n            code += vm.data[x];\n        }\n        let leaguePack = {\n            \"user_id\": vm.currentUser._id,\n            \"league_code\": code,\n        };\n        return LeagueService.joinLeague(leaguePack)\n            .then((response) => {\n                if (response.data.message) {\n                    vm.message = response.data.message;\n                    \n                }\n                else {\n                    $state.transitionTo('dashboard');\n                }\n\n            }, (error) => {\n                console.log(error);\n            });\n    };\n    \n    //Moves Focus After Input\n    vm.moveFocus = (nextId) => {\n        $('#' + nextId).focus();\n    };\n\n    vm.dismissError = () => {\n        vm.message = \"\";\n    };\n});","angular.module('LeagueNewController', []).controller('LeagueNewController', function ($q, $state, AuthenticationService, LeagueService) {\n    let vm = this;\n\n    vm.messsage = \"\";\n\n    //Current User\n    vm.currentUser = {};\n    let getCurrentUser = AuthenticationService.currentUser();\n    getCurrentUser.then((response) => {\n        vm.currentUser = response;\n        return;\n    }, (error) => {\n        console.log(error);\n    });\n\n    //Create New League\n    vm.createNewLeague = () => {\n        let newLeagueInfo = {\n            \"leagueName\": vm.newLeague.leagueName,\n            \"leagueSize\": vm.newLeague.leagueSize,\n            \"user_id\": vm.currentUser._id\n        };\n\n        return LeagueService.createNewLeague(newLeagueInfo)\n            .then((response) => {\n                $state.transitionTo('dashboard');\n            }, (error) => {\n                console.log(error);\n            });\n    };\n})","angular.module('UserLoginController', []).controller('UserLoginController', function ($state, $location, $stateParams, AuthenticationService) {\n    let vm = this;\n\n    vm.message = \"\";\n\n    vm.loginInfo = {\n        email: \"\",\n        password: \"\"\n    };\n\n    vm.login = () => {\n        return AuthenticationService.login(vm.loginInfo)\n            .then((response) => {\n                if (response == \"Token Set!\") {\n                    $state.go('dashboard');\n                }\n                else {\n                    vm.message = response;\n                }\n            }, (error) => {\n                console.log(error);\n            });\n    };\n    \n    // vm.onSignIn = (googleUser) => {\n    //     console.log(\"Fired onSign In\");\n    //     if (googleUser) {\n    //         var profile = googleUser.getBasicProfile();\n    //         console.log(\"Email: \" + profile.getEmail());\n    //     }\n    // };\n\n    vm.dismissError = () => {\n        vm.message = \"\";\n    };\n});","angular.module('UserRegisterController', []).controller('UserRegisterController', function ($state, AuthenticationService) {\n    let vm = this;\n\n    vm.message = \"\";\n\n    vm.registerInfo = {\n        email: \"\",\n        userName: \"\",\n        firstName: \"\",\n        password: \"\"\n    };\n\n    vm.registerNew = function () {\n        return AuthenticationService.register(vm.registerInfo)\n            .then((response) => {\n                $state.transitionTo('dashboard');\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    vm.dismissError = () => {\n        vm.message = \"\";\n    };\n});","angular.module('UserSettingsController', []).controller('UserSettingsController', function (AuthenticationService) {\n    let vm = this;\n\n    vm.message = \"\";\n\n    vm.currentUser = {};\n    let getCurrentUser = AuthenticationService.currentUser();\n    getCurrentUser.then((response) => {\n        vm.currentUser = response;\n    }, (error) => {\n        console.log(error);\n    });\n\n    vm.tab = 1;\n\n    vm.setTab = (tabId) => {\n        vm.tab = tabId;\n    };\n\n    vm.isSet = (tabId) => {\n        return vm.tab === tabId;\n    };\n\n    \n\n    \n\n    \n\n    \n\n    \n    \n    vm.dismissError = () => {\n        vm.message = \"\";\n    }\n\n});\n\n"]}