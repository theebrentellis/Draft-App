{"version":3,"sources":["app.js","controllers/AppController.js","controllers/ChatController.js","controllers/PlayerController.js","factories/ChatFactory.js","factories/DraftFactory.js","factories/LeagueFactory.js","factories/UserFactory.js","services/AuthenticationService.js","services/DraftService.js","services/LeagueService.js","controllers/dashboard/DashboardController.js","controllers/league/LeagueCommishController.js","controllers/league/LeagueController.js","controllers/league/LeagueJoinController.js","controllers/league/LeagueNewController.js","controllers/user/UserLoginController.js","controllers/user/UserRegisterController.js","controllers/user/UserSettingsController.js"],"names":["DraftApp","angular","module","config","$urlRouterProvider","otherwise","$stateProvider","state","url","templateProvider","views","content","controller","$templateCache","controllerAs","get","authenticate","header","league","log","LeagueService","$stateParams","console","run","onStart","trans","transitionTo","isLoggedIn","$transitions","$location","$state","$q","AuthenticationService","getLoginStatus","response","AuthService","$scope","DraftService","vm","this","then","error","currentUser","setCurrentLeague","leagueId","setCurrentLeagueId","getLeague","reload","deleteAllDBs","deleteAllPlayers","deleteAllUsers","deleteAllChat","deleteAllDrafts","downloadPlayers","data","path","deleteAllLeagues","currentUserLogOut","directive","element","attrs","bind","event","which","$apply","$eval","ngEnter","preventDefault","ChatFactory","currentLeague","messages","message","filterText","socket","io","connect","on","reverse","unshift","sendMessage","postMessage","result","err","window","alert","$confirm","$timeout","DraftFactory","available_players","allDraftedPlayers","setColorOnClock","team","onClock","_id","font-weight","getPlayers","position","startDraft","id","draftPackage","draftId","draft","draftOrder","draftPlayer","isOnClock","pick","checkBox","value","getDraftedPlayers","factory","$http","callback","post","success","status","params","output","createLeague","newLeagueInfo","joinLeague","leaguePack","patch","newLeagueMessage","messagePack","updateTeamPick","pickPack","leagueID","register","registerInfo","login","loginInfo","service","$window","$rootScope","UserFactory","tokenStorage","setToken","key","token","Promise","resolve","localStorage","setItem","getToken","getItem","removeToken","removeItem","payload","split","atob","JSON","parse","exp","Date","now","userName","firstName","email","leagues","updateToken","user","reponse","clear","$new","statusText","undraftedPlayers","draftedPlayers","LeagueFactory","defer","createNewLeague","joinPac","createPicksList","isCommish","userID","commish","forEach","leaguePickMaker","title","teams","size","currentTeams","x","draftPick","index","splice","push","_loop","length","onDrop","srcList","srcIndex","targetList","targetIndex","updatePick","$view","$uibModal","newMessage","modalInstance","open","animation","templateUrl","scope","backdrop","cancel","dismiss","dismissError","code","user_id","league_code","moveFocus","nextId","$","focus","messsage","leagueName","newLeague","leagueSize","password","onSignIn","googleUser","profile","getBasicProfile","getEmail","registerNew","tab","setTab","tabId","isSet"],"mappings":"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","file":"app.js","sourcesContent":["let DraftApp = angular.module(\"DraftApp\", [\"ngRoute\", \"ngMessages\", \"ngAnimate\",\n    \"ui.router\", \"ui.bootstrap\", \"dndLists\", \"angular-confirm\",\n    \"AppController\", \"ChatController\", \"DashboardController\", \"LeagueController\", \"LeagueCommishController\", \"LeagueJoinController\", \"LeagueNewController\", \"PlayerController\", \"UserSettingsController\", \"UserLoginController\", \"UserRegisterController\",\n    \"AuthenticationService\", \"DraftService\", \"LeagueService\",\n    \"ChatFactory\", \"DraftFactory\", \"LeagueFactory\", \"UserFactory\"]);\n\nangular.module('DraftApp').config(function ($stateProvider, $urlRouterProvider) {\n\n    $urlRouterProvider.otherwise(\"/\");\n\n    $stateProvider\n        .state(\"index\", {\n            url: \"/\",\n            views: {\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('welcome.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        })\n        .state(\"login\", {\n            url: \"/login\",\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: \"vm\",\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('auth/login.html');\n                    },\n                    controller: \"UserLoginController\",\n                    controllerAs: \"vm\"\n                },\n            }\n        })\n        .state('register', {\n            url: \"/register\",\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: 'vm'\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('auth/register.html');\n                    },\n                    controller: \"UserRegisterController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        })\n        .state(\"settings\", {\n            url: \"/settings\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: 'vm',\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('auth/settings.html');\n                    },\n                    controller: \"UserSettingsController\",\n                    controllerAs: \"vm\",\n                }\n            }\n        })\n        .state(\"dashboard\", {\n            url: \"/dashboard\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: 'vm',\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('dashboard.html');\n                    },\n                    controller: \"DashboardController\",\n                    controllerAs: \"vm\",\n                }\n            }\n        })\n        .state('newLeague', {\n            url: \"/league/new\",\n            authenticate: true,\n            views: {\n                'header': {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: 'vm'\n                },\n                'content': {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('league/league.new.html');\n                    },\n                    controller: \"LeagueNewController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        })\n        .state('joinLeague', {\n            url: \"/league/join\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: 'vm'\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('league/league.join.html');\n                    },\n                    controller: \"LeagueJoinController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        })\n        .state('league', {\n            url: \"/league/:leagueID/index\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: 'vm'\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('league/league.index.html');\n                    },\n                    controller: \"LeagueController\",\n                    controllerAs: \"vm\",\n                    resolve: {\n                        league: function(LeagueService, $stateParams) {\n                            console.log(\"Start Resolve\");\n                            return LeagueService.get();\n                        }\n                    }\n                }\n            }\n        })\n        .state('leagueCommish', {\n            url: \"/league/:leagueID/commish\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: 'vm'\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('league/league.commish.html');\n                    },\n                    controller: \"LeagueCommishController\",\n                    controllerAs: \"vm\",\n                    // resolve: {\n                    //     league: (LeagueService, $stateParams) => {\n                    //         console.log($stateParams)\n                    //         // let theLeague = LeagueService.getLeague();\n                    //         // theLeague.then((response) => {\n\n                    //         // }, (error) => {\n                    //         //     console.log(error);\n                    //         // });\n                    //     }\n                    // }\n                }\n            }\n        })\n        .state(\"availablePlayers\", {\n            url: \"/availablePlayers\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: \"vm\",\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('availablePlayers.html');\n                    },\n                    controller: \"PlayerController\",\n                    controllerAs: \"vm\",\n                }\n            }\n        })\n        .state(\"draftboard\", {\n            url: \"/draftboard\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: \"vm\"\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('draftBoard.html');\n                    },\n                    controller: \"PlayerController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        })\n        .state(\"chat\", {\n            url: \"/chat\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: \"vm\"\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('chat.html');\n                    },\n                    controller: \"ChatController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        });\n});\n\nangular.module('DraftApp').run(function ($transitions, $location, $state, $q, AuthenticationService) {\n    $transitions.onStart({ to: '*' }, function (trans) {\n        let AuthService = trans.injector().get('AuthenticationService');\n        if (trans.to().authenticate && !AuthService.isLoggedIn()) {\n            $state.transitionTo('login');\n        }\n    });\n});","angular.module('AppController', []).controller('AppController', function ($scope, $location, $q, $state, AuthenticationService, DraftService, LeagueService) {\n\n  let vm = this;\n  \n  vm.isLoggedIn = false;\n  let getLoginStatus = AuthenticationService.isLoggedIn();\n  getLoginStatus.then((response) => {\n    if (response == true) {\n      vm.isLoggedIn = true;\n    }\n    if (response == false) {\n      vm.isLoggedIn = false;\n    }\n  }, (error) => {\n    console.log(error);\n  });\n      \n  vm.currentUser = {};\n  let getCurrentUser = AuthenticationService.currentUser();\n  getCurrentUser.then((response) => {\n    vm.currentUser = response;\n  }, (error) => {\n    console.log(error);\n  });\n\n    // vm.currentLeague = LeagueService.currentLeague();\n\n\n    //Sets A League and Returns League Info\n    vm.setCurrentLeague = function(leagueId){\n      return LeagueService.setCurrentLeagueId(leagueId)\n        .then(function(){\n          return LeagueService.getLeague()\n            .then(function(){\n              $state.reload();\n            }, function(error){\n              console.log(error);\n            });\n        }, function(error){\n          console.log(error);\n        });\n    };\n\n    //Dev Tools (Not For Production)\n    vm.deleteAllDBs = function(){\n      DraftService.deleteAllPlayers();\n      AuthenticationService.deleteAllUsers();\n      LeagueService.deleteAllChat();\n      DraftService.deleteAllDrafts();\n    };\n  \n    vm.downloadPlayers = function(){\n      DraftService.downloadPlayers(function(data){\n        console.log(data);\n      });\n    };\n  \n    vm.deleteAllPlayers = function(){\n      DraftService.deleteAllPlayers(function(data){\n        console.log(data);\n      });\n    };\n  \n    vm.deleteAllUsers = function(){\n      AuthenticationService.deleteAllUsers();\n      $location.path(\"/login\");\n    };\n  \n    vm.deleteAllChat = function(){\n      LeagueService.deleteAllChat();\n    };\n  \n    vm.deleteAllLeagues = function(){\n      LeagueService.deleteAllLeagues();\n    };\n  \n    vm.deleteAllDrafts = function(){\n      DraftService.deleteAllDrafts();\n    };\n  \n    vm.currentUserLogOut = function(){\n      AuthenticationService.currentUserLogOut();\n    };\n});","angular.module('ngEnter', []).directive('ngEnter', function ($scope, element, attrs) {\n\n    element.bind(\"keypress\", function (event) {\n        if (event.which === 13) {\n            $scope.$apply(function () {\n                $scope.$eval(attrs.ngEnter);\n            });\n            event.preventDefault();\n        }\n    });\n});\n\nangular.module('ChatController', []).controller('ChatController', function ($scope, AuthenticationService, LeagueService, ChatFactory) {\n\n    var vm = this;\n\n    vm.currentUser = AuthenticationService.currentUser();\n\n    vm.currentLeague = LeagueService.currentLeague();\n\n    vm.messages = [];\n\n    vm.message = \"\";\n    vm.filterText = \"\";\n\n    \n    var socket = io.connect();\n\n    socket.on(\"pastMessages\", function (data) {\n        $scope.$apply(function(){\n            vm.messages = data.reverse();\n        });\n    });\n\n    socket.on(\"receiveMessage\", function(data){\n        $scope.$apply(function(){\n            vm.messages.unshift(data);\n        });\n    });\n\n    vm.sendMessage = function () {\n        // var chatMessage = {\n        //     \"_id\": vm.currentLeague.chat._id,\n        //     \"userName\": vm.currentUser.firstName,\n        //     \"message\": vm.message\n        // };\n        LeagueService.postMessage(vm.message, function (result, err) {\n            if (err) {\n                window.alert(\"Error!\");\n            }\n            // else{\n            //     socket.emit(\"receiveMessage\", result);\n            //     vm.message = \"\";\n            // }\n        });\n    };\n});","angular.module('PlayerController', []).controller('PlayerController', function ($scope, $location, $confirm, $timeout, $q, DraftFactory, AuthenticationService, DraftService, LeagueService) {\n\n  var vm = this;\n\n  vm.available_players = [];\n\n  vm.allDraftedPlayers = [];\n\n  vm.message = \"\";\n\n  vm.currentUser = AuthenticationService.currentUser();\n\n  vm.currentLeague = LeagueService.currentLeague();\n\n  vm.setColorOnClock = function(team){\n      if(vm.currentLeague.onClock === team._id){\n        return {\"font-weight\": \"bold\"};\n      }\n  };\n\n  vm.getPlayers = function (position) {\n    DraftFactory.getPlayers(position, function (data) {\n      vm.available_players = data;\n    });\n  };\n\n  vm.startDraft = function(id){\n    var draftPackage = {\n      draftId: vm.currentLeague.draft._id,\n      draftOrder: vm.currentLeague.draftOrder\n\n    };\n    return DraftService.startDraft(draftPackage)\n      .then(function(response){\n        console.log(response);\n      }, function(error){\n        console.log(error);\n      });\n  };\n\n  vm.draftPlayer = function (id) {\n    if(DraftService.isOnClock() === true){\n\n      var draftPackage = {\n        draftId: vm.currentLeague.draft._id,\n        leagueId: vm.currentLeague._id,\n        team: vm.currentUser._id,\n        pick: id,\n      };\n      \n      return DraftService.draftPlayer(draftPackage)\n        .then(function(response){\n          console.log(response);\n          if(response === true){\n            $location.path(\"/draftBoard\");\n          }\n          if(response === false){\n            console.log(\"Error in PlayerControiller draftPlayer\");\n          }\n        }, function(error){\n          console.log(error);\n        });\n    }\n    if(DraftService.isOnClock() === false){\n      vm.message = \"You Are Not On The Clock!\";\n      vm.checkBox.value = false;\n      $timeout(function(){\n        vm.message = false;\n      }, 5000);\n    }\n  };\n\n  var getDraftedPlayers = function () {\n    DraftFactory.getDraftedPlayers(function (data) {\n      vm.allDraftedPlayers = data;\n    });\n  };\n  getDraftedPlayers();\n});\n","angular.module(\"ChatFactory\", []).factory(\"ChatFactory\", function($http){\n\n    var factory = {};\n\n    factory.postMessage = function(message, callback){\n        $http.post(\"/message\", message).success(function(data, status){\n            callback(data, false);\n        })\n        .error(function(data, status){\n            callback(data, true);\n        });\n    };\n\n    factory.deleteAllChat = function(){\n        $http.post(\"/deleteAllChat\").success(function(data){\n            console.log(data);\n        });\n    };\n\n    return factory;\n});","angular.module(\"DraftFactory\", []).factory(\"DraftFactory\", function($http, $q){\n    var factory = {};\n\n    factory.downloadPlayers = function(){\n        $http.post(\"/downloadPlayers\").success(function(data){\n            console.log(data);\n        });\n    };\n\n    factory.getPlayers = function(position, callback){\n        $http.get(\"/getPlayers/\", {params: {position: position}}).success(function(output){\n            callback(output);\n        });\n    };\n\n    factory.deleteAllPlayers = function(callback){\n        $http.post(\"/deleteAllPlayers\").success(function(data){\n            callback(data);\n        });\n    };\n\n    factory.startDraft = function(draftPackage){\n        return $http.post(\"/startDraft\", draftPackage)\n            .then(function(response){\n                console.log(response);\n            }, function(error){\n                console.log(error);\n            });\n    };\n\n    factory.draftPlayer = function(draftPackage){\n        return $http.post(\"/draftPlayer\", draftPackage)\n            .then(function(response){\n                return response;\n            }, function(error){\n                console.log(error);\n            });\n    };\n\n    factory.getDraftedPlayers = function(callback){\n        $http.get(\"/getDraftedPlayers\").success(function(output){\n            callback(output);\n        });\n    };\n\n    factory.deleteAllDrafts = function(){\n        return $http.post(\"/deleteAllDrafts\");\n    };\n\n    return factory;\n});","angular.module(\"LeagueFactory\", []).factory(\"LeagueFactory\", function ($http, $stateParams) {\n    let factory = {};\n\n    factory.createLeague = (newLeagueInfo) => {\n        return $http.post(\"/createLeague\", newLeagueInfo)\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    factory.joinLeague = (leaguePack) => {\n        return $http.patch(\"/joinLeague/\", leaguePack)\n            .then(function (response) {\n                return response;\n            }, function (error) {\n                console.log(error);\n            });\n    };\n\n    factory.getLeague = (id) => {\n        return $http.get(\"/getLeague/\", { params: { _id: id } })\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n    \n    factory.newLeagueMessage = (messagePack) => {\n        return $http.post('/league/newMessage', messagePack)\n            .then((response) => {\n                return response\n            }, (error) => {\n                console.log(error);\n            });\n    };\n    \n    factory.updateTeamPick = (pickPack) => {\n        return $http.post('/league/' + $stateParams.leagueID, pickPack)\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    }\n\n    return factory;\n});","angular.module('UserFactory', []).factory('UserFactory', function ($http) {\n  let factory = {};\n\n  factory.register = (registerInfo) => {\n    return $http.post(\"/register\", registerInfo)\n      .then((response) => {\n        return response;\n      }, (error) => {\n        console.log(error);\n        return error;\n    });\n  };\n\n  factory.login = (loginInfo) => {\n    return $http.post(\"/login\", loginInfo)\n      .then((response) => {\n        return response;\n      }, (error) => {\n        console.log(error);\n        return error;\n      });\n  };\n\n  return factory;\n});","angular.module('AuthenticationService', []).service('AuthenticationService', function ($window, $state, $rootScope, $q, UserFactory) {\n  let service = {};\n\n  const tokenStorage = {\n    setToken: (key, token) => {\n      return Promise.resolve().then(() => {\n        $window.localStorage.setItem(key, token);\n      });\n    },\n    getToken: (key) => {\n      return Promise.resolve().then(() => {\n        return $window.localStorage.getItem(key);\n      });\n    },\n    removeToken: (key) => {\n      return Promise.resolve().then(() => {\n        $window.localStorage.removeItem(key);\n      });\n    }\n  }\n\n  //Is A User Logged In\n  service.isLoggedIn = () => {\n    return tokenStorage.getToken('user-token')\n      .then((token) => {\n        if (token) {\n          let payload = token.split('.')[1];\n          payload = $window.atob(payload);\n          payload = JSON.parse(payload);\n          return payload.exp > Date.now() / 1000;\n        }\n        else {\n          return false;\n        }\n      }, (error) => {\n        console.log(error);\n      });\n  };\n\n  //Return The Current User\n  service.currentUser = function () {\n    return service.isLoggedIn()\n      .then((response) => {\n        if (response) {\n          return tokenStorage.getToken('user-token')\n            .then((token) => {\n              let payload = token.split('.')[1];\n              payload = $window.atob(payload);\n              payload = JSON.parse(payload);\n\n              return {\n                _id: payload._id,\n                userName: payload.userName,\n                firstName: payload.firstName,\n                email: payload.email,\n                leagues: payload.leagues\n              };\n            }, (error) => {\n              console.log(error);\n            });\n        }\n      }, (error) => {\n        console.log(error);\n      });\n  };\n\n  service.updateToken = (token) => {\n    return tokenStorage.removeToken('user-token')\n      .then(() => {\n        return tokenStorage.setToken('user-token', token)\n          .then(() => {\n            return \"Token Set!\";\n          }, (error) => {\n            console.log(error);\n          })\n      }, (error) => {\n        console.log(error);\n      });\n  };\n\n  service.register = function (user, callback) {\n    return UserFactory.register(user)\n      .then((response) => {\n        if (response.data.token) {\n          return tokenStorage.setToken('user-token', response.data.token)\n            .then(() => {\n              return \"Token Set!\";\n            });\n        }\n        else if (response.message) {\n          return reponse.message;\n        }\n        else {\n          return \"Unknown Error\";\n        }\n      }, (error) => {\n        console.log(error);\n      });\n  };\n\n  service.login = (user) => {\n    return UserFactory.login(user)\n      .then((response) => {\n        if (response.data.token) {\n          return tokenStorage.setToken('user-token', response.data.token)\n            .then(() => {\n              return \"Token Set!\"\n            }, (error) => {\n              console.log(error);\n            });\n        }\n        if (response.status == 401) {\n          return \"Incorrect Username or Password!\";\n        }\n        else {\n          return \"Unknown Error!\"\n        }\n      }, (error) => {\n        console.log(error);\n      });\n  };\n\n  service.currentUserLogOut = () => {\n    $window.localStorage.clear();\n    $rootScope = $rootScope.$new(true);\n  };\n\n  return service;\n});\n","angular.module('DraftService', []).service('DraftService', function ($window, $state, $q, DraftFactory, AuthenticationService, LeagueService) {\n    var service = {};\n\n    var vm = this;\n\n    // vm.currentUser = AuthenticationService.currentUser();\n\n    // vm.isLoggedIn = AuthenticationService.isLoggedIn();\n\n    // vm.currentLeague = LeagueService.currentLeague();\n\n    service.startDraft = function(draftPackage){\n        return DraftFactory.startDraft(draftPackage)\n            .then(function(reponse){\n                console.log(response);\n            }, function(error){\n                console.log(error);\n            });\n    };\n\n    service.isOnClock = function(){\n        if(vm.currentLeague.onClock === vm.currentUser._id){\n            return true;\n        }\n        else{\n            return false;\n        }\n    };\n\n    service.draftPlayer = function(draftPackage){\n        return DraftFactory.draftPlayer(draftPackage)\n            .then(function(response){\n                if(response.statusText === \"OK\"){\n                    return true;\n                }\n                else{\n                    return false;\n                }\n            }, function(error){\n                console.log(error);\n            });\n    };\n\n    service.undraftedPlayers = function () {\n\n    };\n\n    service.draftedPlayers = function () {\n\n    };\n\n    service.downloadPlayers = function(){\n        DraftFactory.downloadPlayers();\n    };\n\n    service.deleteAllChat = function(){\n        ChatFactory.deleteAllChat();\n    };\n\n    service.deleteAllDrafts = function(){\n        DraftFactory.deleteAllDrafts();\n    };\n\n    service.deleteAllPlayers = function(callback){\n        DraftFactory.deleteAllPlayers(function(data){\n            callback(data);\n        });\n    };\n\n    return service;\n});","angular.module(\"LeagueService\", []).service(\"LeagueService\", function ($window, $state, $stateParams, $q, $location, LeagueFactory, ChatFactory, AuthenticationService) {\n    let service = {};\n    let vm = this;\n\n    let deferred = $q.defer();\n\n    //Current User\n    vm.currentUser = {};\n    let getCurrentUser = AuthenticationService.currentUser();\n    getCurrentUser.then((response) => {\n        vm.currentUser = response;\n    }, (error) => {\n        console.log(error);\n    });\n\n    //Current League\n    let currentLeague = {};\n    service.getLeague = () => {\n        return LeagueFactory.getLeague($stateParams.leagueID)\n            .then((response) => {\n                if (response.data) {\n                    currentLeague = response.data;\n                    return response.data;\n                }\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    service.createNewLeague = function (newLeagueInfo) {\n        return LeagueFactory.createLeague(newLeagueInfo)\n            .then((response) => {\n                return AuthenticationService.updateToken(response.data.token)\n                    .then(() => {\n                        $state.transitionTo('dashboard');\n                    }, (error) => {\n                        console.log(error);\n                    });\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    service.joinLeague = function (joinPac) {\n        return LeagueFactory.joinLeague(joinPac)\n            .then((response) => {\n                if (response.data.token) {\n                    return AuthenticationService.updateToken(response.data.token)\n                        .then(() => {\n                            return \"League Joined\";\n                        }, (error) => {\n                            console.log(error);\n                        });\n                }\n                else {\n                    return response.data.message;\n                }\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    service.newLeagueMessage = (messagePack) => {\n        return LeagueFactory.newLeagueMessage(messagePack)\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n    \n    service.updateTeamPick = (pickPack) => {\n        return LeagueFactory.updateTeamPick(pickPack)\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    return service;\n});","angular.module('DashboardController', []).controller('DashboardController', function (AuthenticationService) {\n    let vm = this;\n\n    vm.currentUser = {};\n    let getCurrentUser = AuthenticationService.currentUser();\n    getCurrentUser.then((response) => {\n        vm.currentUser = response;\n    }, (error) => {\n        console.log(error);\n    });\n\n    \n});","angular.module('LeagueCommishController', []).controller('LeagueCommishController', function ($rootScope, $scope, $q, $state, AuthenticationService, LeagueService) {\n    let vm = this;\n\n    vm.message = \"\";\n\n    //Current User\n    vm.currentUser = {};\n    let getCurrentUser = AuthenticationService.currentUser();\n    getCurrentUser.then((response) => {\n        vm.currentUser = response;\n        return;\n    }, (error) => {\n        console.log(error);\n    });\n\n    //Current League\n    vm.league = {};\n    let getLeague = LeagueService.getLeague();\n    getLeague.then((response) => {\n        vm.league = response;\n        createPicksList(response);\n    }, (error) => {\n        console.log(error);\n    });\n\n    //Commish Auth\n    vm.isCommish = (userID, league) => {\n        let commish = false;\n        if (userID && league) {\n            league.forEach((element) => {\n                if (element == userID) {\n                    commish = true;\n                }\n            });\n            return commish;\n        }\n        return commish;\n    };\n\n    vm.leaguePickMaker = [];\n\n    let createPicksList = (league) => {\n        if (league) {\n            let draftOrder = { title: \"Draft Order\", teams: [] };\n            let size = league.size;\n            let currentTeams = league.teams;\n            for (let x = 1; x <= size; x++) {\n                let draftPick = { 'pick': x };\n                // angular.forEach(currentTeams, (team, index) => {\n                //     if (team.pick == x) {\n                //         draftPick = team;\n                //         currentTeams.splice(index, 1);\n                //     }\n                // });\n                currentTeams.forEach((team, index) => {\n                    if (team.pick == x) {\n                        draftPick = team;\n                        currentTeams.splice(index, 1);\n                    }\n                });\n                draftOrder.teams.push(draftPick);\n            }\n            vm.leaguePickMaker.push(draftOrder);\n            if (currentTeams.length > 0) {\n                let teams = { title: \"Needs Pick\", teams: [] };\n                currentTeams.forEach((team) => {\n                    teams.teams.push(team);\n                });\n                vm.leaguePickMaker.push(teams);\n            }\n        }\n    };\n\n    $scope.onDrop = function (srcList, srcIndex, targetList, targetIndex) {\n        // Copy the item from source to target.\n        targetList.splice(targetIndex, 0, srcList[srcIndex]);\n        // Remove the item from the source, possibly correcting the index first.\n        // We must do this immediately, otherwise ng-repeat complains about duplicates.\n        if (srcList == targetList && targetIndex <= srcIndex) srcIndex++;\n        srcList.splice(srcIndex, 1);\n        for (let x = 0; x < targetList.length; x++) {\n            if (targetList[x]._id == this.team._id) {\n                let team = this.team;\n                let pick = x + 1;\n                return updatePick(team, pick).then(() => {\n                    return true;\n                }, (error) => {\n                    console.log(error);\n                });\n            }\n        }\n        // By returning true from dnd-drop we signalize we already inserted the item.\n        return true;\n    };\n\n    let updatePick = (team, pick) => {\n        let pickPack = {\n            pick: pick,\n            team: team\n        };\n        return LeagueService.updateTeamPick(pickPack)\n            .then((response) => {\n                $state.reload();\n                return;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n});","angular.module('LeagueController', []).controller('LeagueController', function ($rootScope, $scope, $q, $view, $uibModal, $confirm, $location, $state, AuthenticationService, LeagueService) {\n\n    let vm = this;\n\n    vm.message = \"\";\n\n    //Current User\n    vm.currentUser = {};\n    let getCurrentUser = AuthenticationService.currentUser();\n    getCurrentUser.then((response) => {\n        vm.currentUser = response;\n        return response;\n    }, (error) => {\n        console.log(error);\n    });\n\n    //Current League\n    vm.league = {};\n    let getLeague = LeagueService.getLeague();\n    getLeague.then((response) => {\n        vm.league = response;\n        return;\n        // createPicksList(response);\n    }, (error) => {\n        console.log(error);\n    });\n\n    //Commish Auth\n    vm.isCommish = (userID, league) => {\n        let commish = false;\n        if (userID && league) {\n            league.forEach((element) => {\n                if (element == userID) {\n                    commish = true;\n                }\n            });\n            return commish;\n        }\n        return commish;\n    };\n\n    //Open New League Message Modal\n    vm.newMessage = () => {\n        $scope.modalInstance = $uibModal.open({\n            animation: true,\n            size: \"lg\",\n            templateUrl: 'newMessageModal.html',\n            controller: 'LeagueController',\n            controllerAs: 'vm',\n            scope: $scope,\n            backdrop: \"static\",\n        });\n    };\n\n    vm.sendMessage = () => {\n\n        let messagePack = {\n            \"leagueID\": vm.league._id,\n            \"userID\": vm.currentUser._id,\n            \"message\": vm.newLeagueMessage\n        };\n\n        return LeagueService.newLeagueMessage(messagePack)\n            .then((response) => {\n                console.log(response);\n                if (response.statusText == \"OK\") {\n                    $state.reload();\n                }\n                console.log(response);\n            }, (error) => {\n                console.log(error);\n            });\n    };\n    \n    vm.cancel = () => {\n        $scope.modalInstance.dismiss('cancel');\n    };\n\n    vm.dismissError = () => {\n        vm.message = \"\";\n    };\n\n    vm.startDraft = () => {\n        console.log(\"Start Draft\");\n    }\n});","angular.module('LeagueJoinController', []).controller('LeagueJoinController', function($q, $rootScope, $scope, $state, AuthenticationService, LeagueService) {\n    let vm = this;\n\n    vm.message = \"\";\n\n    //Current User\n    vm.currentUser = {};\n    let getCurrentUser = AuthenticationService.currentUser();\n    getCurrentUser.then((response) => {\n        vm.currentUser = response;\n        return;\n    }, (error) => {\n        console.log(error);\n    });\n\n    //Join League\n    vm.joinLeague = () => {\n        let code = \"\";\n        for (var x in vm.data) {\n            code += vm.data[x];\n        }\n        let leaguePack = {\n            \"user_id\": vm.currentUser._id,\n            \"league_code\": code,\n        };\n        return LeagueService.joinLeague(leaguePack)\n            .then((response) => {\n                if (response == \"League Joined\") {\n                    $state.transitionTo('dashboard');\n                }\n                else {\n                    vm.message = response;\n                }\n\n            }, (error) => {\n                console.log(error);\n            });\n    };\n    \n    //Moves Focus After Input\n    vm.moveFocus = (nextId) => {\n        $('#' + nextId).focus();\n    };\n});","angular.module('LeagueNewController', []).controller('LeagueNewController', function ($q, AuthenticationService, LeagueService) {\n    let vm = this;\n\n    vm.messsage = \"\";\n\n    //Current User\n    vm.currentUser = {};\n    let getCurrentUser = AuthenticationService.currentUser();\n    getCurrentUser.then((response) => {\n        vm.currentUser = response;\n        return;\n    }, (error) => {\n        console.log(error);\n    });\n\n    //Create New League\n    vm.createNewLeague = () => {\n        let newLeagueInfo = {\n            \"leagueName\": vm.newLeague.leagueName,\n            \"leagueSize\": vm.newLeague.leagueSize,\n            \"user_id\": vm.currentUser._id\n        };\n\n        return LeagueService.createNewLeague(newLeagueInfo)\n            .then((response) => {\n                $state.transitionTo('dashboard');\n            }, (error) => {\n                console.log(error);\n            });\n    };\n})","angular.module('UserLoginController', []).controller('UserLoginController', function ($state, AuthenticationService) {\n    let vm = this;\n\n    vm.message = \"\";\n\n    vm.loginInfo = {\n        email: \"\",\n        password: \"\"\n    };\n\n    vm.login = () => {\n        return AuthenticationService.login(vm.loginInfo)\n            .then((response) => {\n                if (response == \"Token Set!\") {\n                    $state.transitionTo('dashboard');\n                }\n                else {\n                    vm.message = response;\n                }\n            }, (error) => {\n                console.log(error);\n            });\n    };\n    \n    vm.onSignIn = (googleUser) => {\n        console.log(\"Fired onSign In\");\n        if (googleUser) {\n            var profile = googleUser.getBasicProfile();\n            console.log(\"Email: \" + profile.getEmail());\n        }\n    };\n\n    vm.dismissError = () => {\n        vm.message = \"\";\n    };\n});","angular.module('UserRegisterController', []).controller('UserRegisterController', function ($state, AuthenticationService) {\n    let vm = this;\n\n    vm.message = \"\";\n\n    vm.registerInfo = {\n        email: \"\",\n        userName: \"\",\n        firstName: \"\",\n        password: \"\"\n    };\n\n    vm.registerNew = function () {\n        return AuthenticationService.register(vm.registerInfo)\n            .then((response) => {\n                $state.transitionTo('dashboard');\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    vm.dismissError = () => {\n        vm.message = \"\";\n    };\n});","angular.module('UserSettingsController', []).controller('UserSettingsController', function (AuthenticationService) {\n    let vm = this;\n\n    vm.message = \"\";\n\n    vm.currentUser = {};\n    let getCurrentUser = AuthenticationService.currentUser();\n    getCurrentUser.then((response) => {\n        vm.currentUser = response;\n    }, (error) => {\n        console.log(error);\n    });\n\n    vm.tab = 1;\n\n    vm.setTab = (tabId) => {\n        vm.tab = tabId;\n    };\n\n    vm.isSet = (tabId) => {\n        return vm.tab === tabId;\n    };\n\n    \n\n    \n\n    \n\n    \n\n    \n    \n    vm.dismissError = () => {\n        vm.message = \"\";\n    }\n\n});\n\n"]}