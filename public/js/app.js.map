{"version":3,"sources":["app.js","controllers/AppController.js","controllers/ChatController.js","factories/ChatFactory.js","factories/DraftFactory.js","factories/LeagueFactory.js","factories/UserFactory.js","services/AuthenticationService.js","services/DraftService.js","services/LeagueService.js","controllers/dashboard/DashboardController.js","controllers/draft/DraftController.js","controllers/league/LeagueCommishController.js","controllers/league/LeagueController.js","controllers/league/LeagueJoinController.js","controllers/league/LeagueNewController.js","controllers/user/UserLoginController.js","controllers/user/UserRegisterController.js","controllers/user/UserSettingsController.js"],"names":["DraftApp","angular","module","config","$urlRouterProvider","otherwise","$stateProvider","state","url","templateProvider","views","content","controller","$templateCache","controllerAs","get","authenticate","header","league","LeagueService","resolve","$stateParams","run","AuthenticationService","trans","transitionTo","log","error","$transitions","$state","$location","onStart","console","to","response","isLoggedIn","then","getLoginStatus","DraftService","vm","this","currentUser","downloadPlayers","data","deleteAllPlayers","logOut","directive","$scope","element","attrs","bind","event","which","$apply","$eval","ngEnter","preventDefault","ChatFactory","currentLeague","messages","message","filterText","socket","io","connect","on","reverse","unshift","sendMessage","postMessage","result","err","window","alert","factory","$http","callback","post","success","status","deleteAllChat","startDraft","newDraftObject","leagueID","getDraft","draftID","getPlayers","position","params","output","draftPlayer","draftPick","player_id","getDraftedPlayers","createLeague","newLeagueInfo","joinLeague","leaguePack","patch","getLeague","id","_id","newLeagueMessage","messagePack","updateTeamPick","pickPack","deleteLeagueTeam","team","getUserLeagues","user_id","register","registerInfo","login","loginInfo","service","$window","$rootScope","$q","UserFactory","tokenStorage","setToken","key","token","Promise","localStorage","setItem","getToken","getItem","removeToken","removeItem","payload","split","atob","JSON","parse","exp","Date","now","userName","firstName","email","leagues","updateToken","user","reponse","clear","$new","DraftFactory","x","teams","length","pick","draftField","size","forEach","_user","push","_loop","joinDraft","onClock","LeagueFactory","defer","createNewLeague","joinPac","currentLeagues","availablePlayers","currentDraft","draftSort","draft","players","reload","sortedDraft","sorted","y","field","picks","_player","z","p","d","displayName","splice","createPicksList","isCommish","userID","commish","leagueField","draftOrder","title","currentTeams","index","onDrop","srcList","srcIndex","targetList","targetIndex","updatePick","deleteTeam","team_id","$uibModal","$confirm","newMessage","modalInstance","open","animation","templateUrl","scope","backdrop","statusText","cancel","dismiss","dismissError","code","league_code","moveFocus","nextId","$","focus","messsage","leagueName","newLeague","leagueSize","password","go","registerNew","tab","setTab","tabId","isSet"],"mappings":"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","file":"app.js","sourcesContent":["let DraftApp = angular.module(\"DraftApp\", [\"ngRoute\", \"ngMessages\", \"ngAnimate\",\n    \"ui.router\", \"ui.bootstrap\", \"dndLists\", \"angular-confirm\",\n    \"AppController\", \"ChatController\", \"DashboardController\", \"LeagueController\", \"LeagueCommishController\", \"LeagueJoinController\", \"LeagueNewController\", \"UserSettingsController\", \"UserLoginController\", \"UserRegisterController\", \"DraftController\",\n    \"AuthenticationService\", \"DraftService\", \"LeagueService\",\n    \"ChatFactory\", \"DraftFactory\", \"LeagueFactory\", \"UserFactory\"]);\n\nangular.module('DraftApp').config(function ($stateProvider, $urlRouterProvider) {\n\n    $urlRouterProvider.otherwise(\"/\");\n\n    $stateProvider\n        .state(\"index\", {\n            url: \"/\",\n            views: {\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('welcome.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        })\n        .state(\"login\", {\n            url: \"/login\",\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: \"vm\",\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('auth/login.html');\n                    },\n                    controller: \"UserLoginController\",\n                    controllerAs: \"vm\"\n                },\n            }\n        })\n        .state('register', {\n            url: \"/register\",\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: 'vm'\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('auth/register.html');\n                    },\n                    controller: \"UserRegisterController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        })\n        .state(\"settings\", {\n            url: \"/settings\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: 'vm',\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('auth/settings.html');\n                    },\n                    controller: \"UserSettingsController\",\n                    controllerAs: \"vm\",\n                }\n            }\n        })\n        .state(\"dashboard\", {\n            url: \"/dashboard\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: 'vm',\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('dashboard.html');\n                    },\n                    controller: \"DashboardController\",\n                    controllerAs: \"vm\",\n                }\n            }\n        })\n        .state('newLeague', {\n            url: \"/league/new\",\n            authenticate: true,\n            views: {\n                'header': {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: 'vm'\n                },\n                'content': {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('league/league.new.html');\n                    },\n                    controller: \"LeagueNewController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        })\n        .state('joinLeague', {\n            url: \"/league/join\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: 'vm'\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('league/league.join.html');\n                    },\n                    controller: \"LeagueJoinController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        })\n        .state('league', {\n            url: \"/league/:leagueID/index\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: 'vm'\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('league/league.index.html');\n                    },\n                    controller: \"LeagueController\",\n                    controllerAs: \"vm\",\n                    resolve: {\n                        league: function (LeagueService, $stateParams) {\n                            return LeagueService.get();\n                        }\n                    }\n                }\n            }\n        })\n        .state('leagueCommish', {\n            url: \"/league/:leagueID/commish\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: 'vm'\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('league/league.commish.html');\n                    },\n                    controller: \"LeagueCommishController\",\n                    controllerAs: \"vm\",\n                    // resolve: {\n                    //     league: (LeagueService, $stateParams) => {\n                    //         console.log($stateParams)\n                    //         // let theLeague = LeagueService.getLeague();\n                    //         // theLeague.then((response) => {\n\n                    //         // }, (error) => {\n                    //         //     console.log(error);\n                    //         // });\n                    //     }\n                    // }\n                }\n            }\n        })\n        .state(\"draft\", {\n            url: \"/league/:leagueID/draft/:draftID/index\",\n            // authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: \"vm\"\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('draft/draft.index.html');\n                    },\n                    controller: \"DraftController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        })\n        .state(\"availablePlayers\", {\n            url: \"/availablePlayers\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: \"vm\",\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('availablePlayers.html');\n                    },\n                    controller: \"PlayerController\",\n                    controllerAs: \"vm\",\n                }\n            }\n        })\n        .state(\"chat\", {\n            url: \"/chat\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: \"vm\"\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('chat.html');\n                    },\n                    controller: \"ChatController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        });\n});\n\nangular.module('DraftApp').run(function ($transitions, $state, $location, AuthenticationService) {\n\n    $transitions.onStart({ to: '*' }, (trans) => {\n        return AuthenticationService.isLoggedIn().then((response) => {\n            if (trans.to().authenticate && response == false) {\n                $state.transitionTo('login');\n            }\n        }, (error) => {\n            console.log(error);\n        });\n    });\n    $transitions.onStart({ to: 'login' }, (trans) => {\n        return  AuthenticationService.isLoggedIn().then((response) => {\n            if (response == true) {\n                $state.transitionTo('dashboard');\n            }\n        }, (error) => {\n            console.log(error);\n        });\n    });\n});","angular.module('AppController', []).controller('AppController', function (AuthenticationService, DraftService, LeagueService) {\n\n  let vm = this;\n  \n  vm.isLoggedIn = false;\n  let getLoginStatus = AuthenticationService.isLoggedIn();\n  getLoginStatus.then((response) => {\n    vm.isLoggedIn = response;\n    // if (response == true) {\n    //   vm.isLoggedIn = true;\n    // }\n    // if (response == false) {\n    //   vm.isLoggedIn = false;\n    // }\n  }, (error) => {\n    console.log(error);\n  });\n      \n  vm.currentUser = {};\n  let getCurrentUser = AuthenticationService.currentUser();\n  getCurrentUser.then((response) => {\n    vm.currentUser = response;\n  }, (error) => {\n    console.log(error);\n  });\n\n  \n    vm.downloadPlayers = function(){\n      DraftService.downloadPlayers(function(data){\n        console.log(data);\n      });\n    };\n  \n    vm.deleteAllPlayers = function(){\n      DraftService.deleteAllPlayers(function(data){\n        console.log(data);\n      });\n    };\n  \n  vm.logOut = () => {\n    AuthenticationService.logOut();\n  };\n});","angular.module('ngEnter', []).directive('ngEnter', function ($scope, element, attrs) {\n\n    element.bind(\"keypress\", function (event) {\n        if (event.which === 13) {\n            $scope.$apply(function () {\n                $scope.$eval(attrs.ngEnter);\n            });\n            event.preventDefault();\n        }\n    });\n});\n\nangular.module('ChatController', []).controller('ChatController', function ($scope, AuthenticationService, LeagueService, ChatFactory) {\n\n    var vm = this;\n\n    vm.currentUser = AuthenticationService.currentUser();\n\n    vm.currentLeague = LeagueService.currentLeague();\n\n    vm.messages = [];\n\n    vm.message = \"\";\n    vm.filterText = \"\";\n\n    \n    var socket = io.connect();\n\n    socket.on(\"pastMessages\", function (data) {\n        $scope.$apply(function(){\n            vm.messages = data.reverse();\n        });\n    });\n\n    socket.on(\"receiveMessage\", function(data){\n        $scope.$apply(function(){\n            vm.messages.unshift(data);\n        });\n    });\n\n    vm.sendMessage = function () {\n        // var chatMessage = {\n        //     \"_id\": vm.currentLeague.chat._id,\n        //     \"userName\": vm.currentUser.firstName,\n        //     \"message\": vm.message\n        // };\n        LeagueService.postMessage(vm.message, function (result, err) {\n            if (err) {\n                window.alert(\"Error!\");\n            }\n            // else{\n            //     socket.emit(\"receiveMessage\", result);\n            //     vm.message = \"\";\n            // }\n        });\n    };\n});","angular.module(\"ChatFactory\", []).factory(\"ChatFactory\", function($http){\n\n    var factory = {};\n\n    factory.postMessage = function(message, callback){\n        $http.post(\"/message\", message).success(function(data, status){\n            callback(data, false);\n        })\n        .error(function(data, status){\n            callback(data, true);\n        });\n    };\n\n    factory.deleteAllChat = function(){\n        $http.post(\"/deleteAllChat\").success(function(data){\n            console.log(data);\n        });\n    };\n\n    return factory;\n});","angular.module(\"DraftFactory\", []).factory(\"DraftFactory\", function($http, $stateParams){\n    var factory = {};\n\n    factory.startDraft = (newDraftObject) => {\n        return $http.post(\"/league/\" + $stateParams.leagueID + \"/draft/new\", newDraftObject)\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n    \n    factory.getDraft = () => {\n        return $http.get(\"/league/\" + $stateParams.leagueID + \"/draft/\" + $stateParams.draftID + \"/get\")\n    };\n\n    factory.downloadPlayers = () => {\n        return $http.post(\"/downloadPlayers\").then((response)=>{\n            console.log(response);\n        }, (error) => {\n            console.log(error);\n        });\n    };\n\n    factory.getPlayers = function(position, callback){\n        $http.get(\"/getPlayers/\", {params: {position: position}}).success(function(output){\n            callback(output);\n        });\n    };\n\n    factory.deleteAllPlayers = function(callback){\n        $http.post(\"/deleteAllPlayers\").success(function(data){\n            callback(data);\n        });\n    };\n\n    factory.draftPlayer = function (draftPick) {\n        return $http.post(\"/league/\" + $stateParams.leagueID + \"/draft/\" + $stateParams.draftID + \"/position/\" + draftPick.position + \"/player/\" + draftPick.player_id)\n            .then(function (response) {\n                console.log(response);\n                return response;\n            }, function(error){\n                console.log(error);\n            });\n    };\n\n    factory.getDraftedPlayers = function(callback){\n        $http.get(\"/getDraftedPlayers\").success(function(output){\n            callback(output);\n        });\n    };\n\n    return factory;\n});","angular.module(\"LeagueFactory\", []).factory(\"LeagueFactory\", function ($http, $stateParams) {\n    let factory = {};\n\n    factory.createLeague = (newLeagueInfo) => {\n        return $http.post(\"/league/create\", newLeagueInfo)\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    factory.joinLeague = (leaguePack) => {\n        return $http.patch(\"/league/join\", leaguePack)\n            .then(function (response) {\n                return response;\n            }, function (error) {\n                console.log(error);\n            });\n    };\n\n    factory.getLeague = (id) => {\n        return $http.get(\"/getLeague/\", { params: { _id: id } })\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n    \n    factory.newLeagueMessage = (messagePack) => {\n        return $http.post('/league/newMessage', messagePack)\n            .then((response) => {\n                return response\n            }, (error) => {\n                console.log(error);\n            });\n    };\n    \n    factory.updateTeamPick = (pickPack) => {\n        return $http.post('/league/' + $stateParams.leagueID, pickPack)\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n    \n    factory.deleteLeagueTeam = (team) => {\n        console.log(team);\n        return $http.post(\"/league/\" + $stateParams.leagueID + \"/deleteLeagueTeam\", team)\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n    \n    factory.getUserLeagues = (user_id) => {\n        return $http.get('/leagues/user/' + user_id)\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    return factory;\n});","angular.module('UserFactory', []).factory('UserFactory', function ($http) {\n  let factory = {};\n\n  factory.register = (registerInfo) => {\n    return $http.post(\"/register\", registerInfo)\n      .then((response) => {\n        return response;\n      }, (error) => {\n        console.log(error);\n        return error;\n    });\n  };\n\n  factory.login = (loginInfo) => {\n    return $http.post(\"/login\", loginInfo)\n      .then((response) => {\n        return response;\n      }, (error) => {\n        console.log(error);\n        return error;\n      });\n  };\n\n  return factory;\n});","angular.module('AuthenticationService', []).service('AuthenticationService', function ($window, $state, $rootScope, $q, UserFactory) {\n  let service = {};\n\n  const tokenStorage = {\n    setToken: (key, token) => {\n      return Promise.resolve().then(() => {\n        $window.localStorage.setItem(key, token);\n      });\n    },\n    getToken: (key) => {\n      return Promise.resolve().then(() => {\n        return $window.localStorage.getItem(key);\n      });\n    },\n    removeToken: (key) => {\n      return Promise.resolve().then(() => {\n        $window.localStorage.removeItem(key);\n      });\n    }\n  }\n\n  //Is A User Logged In\n  service.isLoggedIn = () => {\n    return tokenStorage.getToken('user-token')\n      .then((token) => {\n        if (token) {\n          let payload = token.split('.')[1];\n          payload = $window.atob(payload);\n          payload = JSON.parse(payload);\n          return payload.exp > Date.now() / 1000;\n        }\n        else {\n          return false;\n        }\n      }, (error) => {\n        console.log(error);\n      });\n  };\n\n  //Return The Current User\n  service.currentUser = function () {\n    return service.isLoggedIn()\n      .then((response) => {\n        if (response) {\n          return tokenStorage.getToken('user-token')\n            .then((token) => {\n              let payload = token.split('.')[1];\n              payload = $window.atob(payload);\n              payload = JSON.parse(payload);\n\n              return {\n                _id: payload._id,\n                userName: payload.userName,\n                firstName: payload.firstName,\n                email: payload.email,\n                leagues: payload.leagues\n              };\n            }, (error) => {\n              console.log(error);\n            });\n        }\n      }, (error) => {\n        console.log(error);\n      });\n  };\n\n  service.updateToken = (token) => {\n    return tokenStorage.removeToken('user-token')\n      .then(() => {\n        return tokenStorage.setToken('user-token', token)\n          .then(() => {\n            return \"Token Set!\";\n          }, (error) => {\n            console.log(error);\n          })\n      }, (error) => {\n        console.log(error);\n      });\n  };\n\n  service.register = function (user, callback) {\n    return UserFactory.register(user)\n      .then((response) => {\n        if (response.data.token) {\n          return tokenStorage.setToken('user-token', response.data.token)\n            .then(() => {\n              return \"Token Set!\";\n            });\n        }\n        else if (response.message) {\n          return reponse.message;\n        }\n        else {\n          return \"Unknown Error\";\n        }\n      }, (error) => {\n        console.log(error);\n      });\n  };\n\n  service.login = (user) => {\n    return UserFactory.login(user)\n      .then((response) => {\n        if (response.data.token) {\n          return tokenStorage.setToken('user-token', response.data.token)\n            .then(() => {\n              return \"Token Set!\"\n            }, (error) => {\n              console.log(error);\n            });\n        }\n        if (response.status == 401) {\n          return \"Incorrect Username or Password!\";\n        }\n        else {\n          return \"Unknown Error!\"\n        }\n      }, (error) => {\n        console.log(error);\n      });\n  };\n\n  service.logOut = () => {\n    $window.localStorage.clear();\n    $rootScope = $rootScope.$new(true);\n  };\n\n  return service;\n});\n","angular.module('DraftService', []).service('DraftService', function ($window, $state, $q, DraftFactory, AuthenticationService, LeagueService) {\n    let service = {};\n\n    service.startDraft = () => {\n\n        //Gets League from LeagueService\n        return LeagueService.getLeague().then((response) => {\n\n            //Checks if any teams have not been assigned a draft pick\n            for (let x = 0; x < response.teams.length; x++) {\n                if (!response.teams[x].pick) {\n                    return { error: \"Please Assign All Picks\" };\n                }\n            }\n            //Sets the field for a new draft\n            let draftField = [];\n            for (let x = 1; x <= response.size; x++) {\n                let position = { position: x };\n                response.teams.forEach((team) => {\n                    if (team.pick == x) {\n                        position._user = team._user._id;\n                    }\n                });\n                draftField.push(position);\n            }\n\n            let newDraftObject = {};\n            newDraftObject.teams = draftField;\n\n            return DraftFactory.startDraft(newDraftObject)\n                .then((response) => {\n                    return LeagueService.getLeague()\n                        .then((response) => {\n                            return response;\n                        }, (error) => {\n                            console.log(error);\n                        });\n                }, (error) => {\n                    console.log(error);\n                });\n        }, (error) => {\n            console.log(error);\n        });\n    };\n\n    service.joinDraft = () => {\n        let getCurrentLeague = LeagueService.getLeague();\n        getCurrentLeague.then((response) => {\n            //Get draft object from league.draft_id\n        })\n    };\n\n    service.getDraft = () => {\n        return DraftFactory.getDraft()\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    service.onClock = () => {\n\n    };\n\n    service.draftPlayer = function (draftPick) {\n        return DraftFactory.draftPlayer(draftPick)\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    service.downloadPlayers = function () {\n        DraftFactory.downloadPlayers();\n    };\n\n    return service;\n});","angular.module(\"LeagueService\", []).service(\"LeagueService\", function ($window, $state, $stateParams, $q, $location, LeagueFactory, AuthenticationService) {\n    let service = {};\n\n    let deferred = $q.defer();\n\n    //Current User\n    let currentUser = {};\n    let getCurrentUser = AuthenticationService.currentUser();\n    getCurrentUser.then((response) => {\n        currentUser = response;\n    }, (error) => {\n        console.log(error);\n    });\n\n    //Current League\n    let currentLeague = {};\n    service.getLeague = () => {\n        if ($stateParams.leagueID) {\n            return LeagueFactory.getLeague($stateParams.leagueID)\n                .then((response) => {\n                    if (response.data) {\n                        currentLeague = response.data;\n                        return response.data;\n                    }\n                }, (error) => {\n                    console.log(error);\n                });\n        }\n\n    };\n\n    service.createNewLeague = function (newLeagueInfo) {\n        return LeagueFactory.createLeague(newLeagueInfo)\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    service.joinLeague = function (joinPac) {\n        return LeagueFactory.joinLeague(joinPac)\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    service.newLeagueMessage = (messagePack) => {\n        return LeagueFactory.newLeagueMessage(messagePack)\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    service.updateTeamPick = (pickPack) => {\n        return LeagueFactory.updateTeamPick(pickPack)\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    service.deleteLeagueTeam = (team) => {\n        return LeagueFactory.deleteLeagueTeam(team)\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    service.getUserLeagues = (id) => {\n        return LeagueFactory.getUserLeagues(id)\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    return service;\n});","angular.module('DashboardController', []).controller('DashboardController', function (AuthenticationService, LeagueService) {\n    let vm = this;\n\n    vm.currentLeagues = [];\n    vm.currentUser = AuthenticationService.currentUser().then((response) => {\n        vm.currentUser = response;\n        return LeagueService.getUserLeagues(response._id).then((leagues) => {\n            vm.currentLeagues = leagues.data\n        }, (error) => {\n            console.log(error);\n        })\n    }, (error) => {\n        console.log(error);\n    });\n    \n});","angular.module(\"DraftController\", []).controller(\"DraftController\", function ($state, $stateParams, AuthenticationService, LeagueService, DraftService, DraftFactory) {\n    let vm = this;\n\n    vm.message = \"\";\n\n    vm.onClock = \"\";\n\n    vm.currentUser = AuthenticationService.currentUser().then((response) => {\n        vm.currentUser = response;\n    });\n\n    vm.availablePlayers = [];\n    vm.currentDraft = DraftService.getDraft().then((response) => {\n        draftSort(response.data.draft, response.data.players);\n    });\n\n    vm.draftPlayer = (player_id) => {\n        let draftPick = {\n            position: vm.onClock.position,\n            player_id: player_id\n        };\n        return DraftService.draftPlayer(draftPick).then((response) => {\n\n            $state.reload();\n        }, (error) => {\n            console.log(error);\n        });\n    };\n\n    let draftSort = (draft, players) => {\n        let sortedDraft = [];\n        let sorted = false;\n        let x = 0;\n        while (sorted == false) {\n            for (let y = 0; y < draft.field.length; y++) {\n                if (draft.field[y].picks[x]) {\n                    sortedDraft.push({ _id: draft.field[y].picks[x]._player });\n                }\n                else {\n                    vm.onClock = draft.field[y];\n                    sorted = true;\n                    break;\n                }\n            }\n            x++;\n            if (sorted == false) {\n                for (let z = 9; z >= 0; z--) {\n                    if (draft.field[z].picks[x]) {\n                        sortedDraft.push({ _id: draft.field[z].picks[x]._player });\n                    }\n                    else {\n                        vm.onClock = draft.field[z];\n                        sorted = true;\n                        break;\n                    }\n                }\n                x++;\n            }\n        }\n\n        for (let p = 0; p < players.length; p++) {\n            for (let d = 0; d < sortedDraft.length; d++) {\n                if (players[p]._id == sortedDraft[d]._id) {\n                    sortedDraft[d].displayName = players[p].displayName;\n                    sortedDraft[d].team = players[p].team;\n                    sortedDraft[d].position = players[p].position;\n                    players.splice(p, 1);\n                }\n            }\n        }\n        vm.draft = sortedDraft;\n        vm.availablePlayers = players;\n\n    };\n});","angular.module('LeagueCommishController', []).controller('LeagueCommishController', function ($rootScope, $scope, $q, $state, AuthenticationService, LeagueService) {\n    let vm = this;\n\n    vm.message = \"\";\n\n    //Current User\n    vm.currentUser = {};\n    let getCurrentUser = AuthenticationService.currentUser();\n    getCurrentUser.then((response) => {\n        vm.currentUser = response;\n        return;\n    }, (error) => {\n        console.log(error);\n    });\n\n    //Current League\n    vm.league = {};\n    let getLeague = LeagueService.getLeague();\n    getLeague.then((response) => {\n        vm.league = response;\n        createPicksList(response);\n    }, (error) => {\n        console.log(error);\n    });\n\n    //Commish Auth\n    vm.isCommish = (userID, league) => {\n        let commish = false;\n        if (userID && league) {\n            league.forEach((element) => {\n                if (element == userID) {\n                    commish = true;\n                }\n            });\n            return commish;\n        }\n        return commish;\n    };\n\n    vm.leagueField = [];\n\n    let createPicksList = (league) => {\n        if (league) {\n            let draftOrder = { title: \"Draft Order\", teams: [] };\n            let size = league.size;\n            let currentTeams = league.teams;\n            for (let x = 1; x <= size; x++) {\n                let draftPick = { 'pick': x };\n                // angular.forEach(currentTeams, (team, index) => {\n                //     if (team.pick == x) {\n                //         draftPick = team;\n                //         currentTeams.splice(index, 1);\n                //     }\n                // });\n                currentTeams.forEach((team, index) => {\n                    if (team.pick == x) {\n                        draftPick = team;\n                        currentTeams.splice(index, 1);\n                    }\n                });\n                draftOrder.teams.push(draftPick);\n            }\n            vm.leagueField.push(draftOrder);\n            if (currentTeams.length > 0) {\n                let teams = { title: \"Needs Pick\", teams: [] };\n                currentTeams.forEach((team) => {\n                    teams.teams.push(team);\n                });\n                vm.leagueField.push(teams);\n            }\n        }\n    };\n\n    $scope.onDrop = function (srcList, srcIndex, targetList, targetIndex) {\n        // Copy the item from source to target.\n        targetList.splice(targetIndex, 0, srcList[srcIndex]);\n        // Remove the item from the source, possibly correcting the index first.\n        // We must do this immediately, otherwise ng-repeat complains about duplicates.\n        if (srcList == targetList && targetIndex <= srcIndex) srcIndex++;\n        srcList.splice(srcIndex, 1);\n        for (let x = 0; x < targetList.length; x++) {\n            if (targetList[x]._id == this.team._id) {\n                let team = this.team;\n                let pick = x + 1;\n                return updatePick(team, pick).then(() => {\n                    return true;\n                }, (error) => {\n                    console.log(error);\n                });\n            }\n        }\n        // By returning true from dnd-drop we signalize we already inserted the item.\n        return true;\n    };\n\n    let updatePick = (team, pick) => {\n        let pickPack = {\n            pick: pick,\n            team: team\n        };\n        return LeagueService.updateTeamPick(pickPack)\n            .then((response) => {\n                $state.reload();\n                return;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n    \n    vm.deleteTeam = (id) => {\n        let team = {\n            team_id: id\n        };\n        return LeagueService.deleteLeagueTeam(team)\n            .then((response) => {\n                $state.reload();\n                return\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n});","angular.module('LeagueController', []).controller('LeagueController', function ($scope, $q, $uibModal, $confirm, $state, $stateParams, AuthenticationService, LeagueService, DraftService) {\n\n    let vm = this;\n\n    vm.message = \"\";\n\n    vm.params = $stateParams;\n\n    //Current User\n    vm.currentUser = {};\n    let getCurrentUser = AuthenticationService.currentUser();\n    getCurrentUser.then((response) => {\n        vm.currentUser = response;\n        return;\n    }, (error) => {\n        console.log(error);\n    });\n\n    //Current League\n    vm.league = {};\n    let getLeague = LeagueService.getLeague();\n    getLeague.then((response) => {\n        vm.league = response;\n        return;\n    }, (error) => {\n        console.log(error);\n    });\n\n    //Commish Auth\n    vm.isCommish = (userID, league) => {\n        let commish = false;\n        if (userID && league) {\n            league.forEach((element) => {\n                if (element == userID) {\n                    commish = true;\n                }\n            });\n            return commish;\n        }\n        return commish;\n    };\n\n    //Open New League Message Modal\n    vm.newMessage = () => {\n        $scope.modalInstance = $uibModal.open({\n            animation: true,\n            size: \"lg\",\n            templateUrl: 'newMessageModal.html',\n            controller: 'LeagueController',\n            controllerAs: 'vm',\n            scope: $scope,\n            backdrop: \"static\",\n        });\n    };\n\n    vm.sendMessage = () => {\n\n        let messagePack = {\n            \"leagueID\": vm.league._id,\n            \"userID\": vm.currentUser._id,\n            \"message\": vm.newLeagueMessage\n        };\n\n        return LeagueService.newLeagueMessage(messagePack)\n            .then((response) => {\n                console.log(response);\n                if (response.statusText == \"OK\") {\n                    $state.reload();\n                }\n                console.log(response);\n            }, (error) => {\n                console.log(error);\n            });\n    };\n    \n    vm.cancel = () => {\n        $scope.modalInstance.dismiss('cancel');\n    };\n\n    vm.dismissError = () => {\n        vm.message = \"\";\n    };\n\n    vm.startDraft = () => {\n        let startLeagueDraft = DraftService.startDraft();\n        startLeagueDraft.then((response) => {\n            if (response.error) {\n                vm.message = response.error;\n            }\n            else {\n                $state.reload();\n            }\n        }, (error) => {\n            console.log(error);\n        });\n    };\n});","angular.module('LeagueJoinController', []).controller('LeagueJoinController', function($q, $rootScope, $scope, $state, AuthenticationService, LeagueService) {\n    let vm = this;\n\n    vm.message = \"\";\n\n    //Current User\n    vm.currentUser = {};\n    let getCurrentUser = AuthenticationService.currentUser();\n    getCurrentUser.then((response) => {\n        vm.currentUser = response;\n        return;\n    }, (error) => {\n        console.log(error);\n    });\n\n    //Join League\n    vm.joinLeague = () => {\n        let code = \"\";\n        for (var x in vm.data) {\n            code += vm.data[x];\n        }\n        let leaguePack = {\n            \"user_id\": vm.currentUser._id,\n            \"league_code\": code,\n        };\n        return LeagueService.joinLeague(leaguePack)\n            .then((response) => {\n                if (response.data.message) {\n                    vm.message = response.data.message;\n                    \n                }\n                else {\n                    $state.transitionTo('dashboard');\n                }\n\n            }, (error) => {\n                console.log(error);\n            });\n    };\n    \n    //Moves Focus After Input\n    vm.moveFocus = (nextId) => {\n        $('#' + nextId).focus();\n    };\n\n    vm.dismissError = () => {\n        vm.message = \"\";\n    };\n});","angular.module('LeagueNewController', []).controller('LeagueNewController', function ($q, $state, AuthenticationService, LeagueService) {\n    let vm = this;\n\n    vm.messsage = \"\";\n\n    //Current User\n    vm.currentUser = {};\n    let getCurrentUser = AuthenticationService.currentUser();\n    getCurrentUser.then((response) => {\n        vm.currentUser = response;\n        return;\n    }, (error) => {\n        console.log(error);\n    });\n\n    //Create New League\n    vm.createNewLeague = () => {\n        let newLeagueInfo = {\n            \"leagueName\": vm.newLeague.leagueName,\n            \"leagueSize\": vm.newLeague.leagueSize,\n            \"user_id\": vm.currentUser._id\n        };\n\n        return LeagueService.createNewLeague(newLeagueInfo)\n            .then((response) => {\n                $state.transitionTo('dashboard');\n            }, (error) => {\n                console.log(error);\n            });\n    };\n})","angular.module('UserLoginController', []).controller('UserLoginController', function ($state, $location, $stateParams, AuthenticationService) {\n    let vm = this;\n\n    vm.message = \"\";\n\n    vm.loginInfo = {\n        email: \"\",\n        password: \"\"\n    };\n\n    vm.login = () => {\n        return AuthenticationService.login(vm.loginInfo)\n            .then((response) => {\n                if (response == \"Token Set!\") {\n                    $state.go('dashboard');\n                }\n                else {\n                    vm.message = response;\n                }\n            }, (error) => {\n                console.log(error);\n            });\n    };\n    \n    // vm.onSignIn = (googleUser) => {\n    //     console.log(\"Fired onSign In\");\n    //     if (googleUser) {\n    //         var profile = googleUser.getBasicProfile();\n    //         console.log(\"Email: \" + profile.getEmail());\n    //     }\n    // };\n\n    vm.dismissError = () => {\n        vm.message = \"\";\n    };\n});","angular.module('UserRegisterController', []).controller('UserRegisterController', function ($state, AuthenticationService) {\n    let vm = this;\n\n    vm.message = \"\";\n\n    vm.registerInfo = {\n        email: \"\",\n        userName: \"\",\n        firstName: \"\",\n        password: \"\"\n    };\n\n    vm.registerNew = function () {\n        return AuthenticationService.register(vm.registerInfo)\n            .then((response) => {\n                $state.transitionTo('dashboard');\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    vm.dismissError = () => {\n        vm.message = \"\";\n    };\n});","angular.module('UserSettingsController', []).controller('UserSettingsController', function (AuthenticationService) {\n    let vm = this;\n\n    vm.message = \"\";\n\n    vm.currentUser = {};\n    let getCurrentUser = AuthenticationService.currentUser();\n    getCurrentUser.then((response) => {\n        vm.currentUser = response;\n    }, (error) => {\n        console.log(error);\n    });\n\n    vm.tab = 1;\n\n    vm.setTab = (tabId) => {\n        vm.tab = tabId;\n    };\n\n    vm.isSet = (tabId) => {\n        return vm.tab === tabId;\n    };\n\n    \n\n    \n\n    \n\n    \n\n    \n    \n    vm.dismissError = () => {\n        vm.message = \"\";\n    }\n\n});\n\n"]}