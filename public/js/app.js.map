{"version":3,"sources":["app.js","controllers/AppController.js","controllers/ChatController.js","factories/ChatFactory.js","factories/DraftFactory.js","factories/LeagueFactory.js","factories/UserFactory.js","services/AuthenticationService.js","services/DraftService.js","services/LeagueService.js","controllers/dashboard/DashboardController.js","controllers/draft/DraftController.js","controllers/league/LeagueCommishController.js","controllers/league/LeagueController.js","controllers/league/LeagueJoinController.js","controllers/league/LeagueNewController.js","controllers/user/UserLoginController.js","controllers/user/UserRegisterController.js","controllers/user/UserSettingsController.js"],"names":["DraftApp","angular","module","config","$urlRouterProvider","otherwise","$stateProvider","state","url","templateProvider","views","content","controller","$templateCache","controllerAs","get","authenticate","header","league","LeagueService","resolve","$stateParams","_draft","DraftService","getDraft","run","AuthenticationService","trans","transitionTo","log","error","$transitions","$state","$location","onStart","console","to","response","isLoggedIn","then","getLoginStatus","vm","this","currentUser","downloadPlayers","data","deleteAllPlayers","logOut","directive","$scope","element","attrs","bind","event","which","$apply","$eval","ngEnter","preventDefault","ChatFactory","currentLeague","messages","message","filterText","socket","io","connect","on","reverse","unshift","sendMessage","postMessage","result","err","window","alert","factory","$http","callback","post","success","status","deleteAllChat","startDraft","newDraftObject","leagueID","draftID","draftPlayer","draftPick","position","player_id","createLeague","newLeagueInfo","joinLeague","leaguePack","patch","getLeague","id","params","_id","newLeagueMessage","messagePack","updateTeamPick","pickPack","deleteLeagueTeam","team","getUserLeagues","user_id","register","registerInfo","login","loginInfo","service","$window","$rootScope","$q","UserFactory","tokenStorage","setToken","key","token","Promise","localStorage","setItem","getToken","getItem","removeToken","removeItem","payload","split","atob","JSON","parse","exp","Date","now","userName","firstName","email","leagues","updateToken","user","reponse","clear","$new","DraftFactory","draftStorage","setDraft","draft","sessionStorage","removeDraft","stringify","x","teams","length","pick","draftField","size","forEach","_user","push","_loop","joinDraft","onClock","availablePlayers","draftList","pDraft","sortedDraft","sorted","y","field","picks","_player","z","emit","reload","LeagueFactory","defer","createNewLeague","joinPac","currentLeagues","sortType","sortReverse","searchPlayer","players","createPicksList","isCommish","userID","commish","leagueField","draftOrder","title","currentTeams","index","splice","onDrop","srcList","srcIndex","targetList","targetIndex","updatePick","deleteTeam","team_id","$uibModal","$confirm","newMessage","modalInstance","open","animation","templateUrl","scope","backdrop","statusText","cancel","dismiss","dismissError","code","league_code","moveFocus","nextId","$","focus","messsage","leagueName","newLeague","leagueSize","password","go","registerNew","tab","setTab","tabId","isSet"],"mappings":"AAAA,aAAA,IAAAA,SAAAC,QAAAC,OAAA,YAAA,UAAA,aAAA,YACI,YAAa,eAAgB,WAAY,kBADzCF,gBAAWC,iBAAe,sBAAwB,mBAClD,0BAAa,uBAA4B,sBACzC,yBAAmC,sBAAuB,yBAAoB,kBAC9E,wBAAyB,eAAgB,gBAG7CA,cAAe,eAAYE,gBAAAA,gBAA3BF,QAEIG,OAAAA,YAAmBC,QAAAA,iBAAAA,qBAAU,SAAAC,EAAAF,GAE7BE,EACKC,UAAM,KADXD,EACKC,MAGO,SAFJC,IAGQC,IAFRC,OACIC,SAIIC,kBAAAA,iBAAY,SAAAC,GACZC,OAAcD,EAAAE,IAAA,kBADdH,WAAY,gBAKjBE,aAAS,SAAfP,MAAM,SACHC,IAAK,SACLE,OAKQE,QACAE,kBAAAA,iBAAc,SAAAD,GAHV,OAAOA,EAAeE,IAAI,cAM9BN,WAAAA,gBACIK,aAAOD,MAEXD,SACAE,kBAAAA,iBAAc,SAAAD,GAHV,OAAOA,EAAeE,IAAI,qBAOnCH,WAAY,sBACVE,aAAA,SADRP,MAAM,YACHC,IAAK,YACLE,OAMQI,QAJAL,kBAAAA,iBAAkB,SAACI,GAMZ,OAAAA,EAAAE,IAAA,cAEHH,WAAOC,gBAJXC,aAAc,MAOdA,SAJAL,kBAAAA,iBAAkB,SAACI,GACf,OAAOA,EAAeE,IAAI,wBAQjCH,WAAA,yBACLI,aAAc,SAFjBT,MAAM,YACHC,IAAK,YACLQ,cAMQJ,EALRF,OACIO,QAOAR,kBAAAA,iBAAW,SAAAI,GACPJ,OAAAA,EAAAA,IAAAA,cAJAG,WAAY,gBAOZA,aAAY,MAJhBD,SACIF,kBAAAA,iBAAkB,SAACI,GAQxB,OAAaA,EAAAE,IAAA,wBAEhBC,WAAc,yBACPF,aAAA,SAHVP,MAAM,aACHC,IAOQI,aANRI,cAOQF,EANRJ,OAQIO,QACIR,kBAAAA,iBAAAA,SAAAA,GACI,OAAOI,EAAmBE,IAAA,cAE9BH,WAAY,gBACZE,aAAc,MALlBH,SASDF,kBAAAA,iBAAa,SAAAI,GACX,OAAAA,EAAAE,IAAA,oBAEEH,WAAA,sBACHE,aAAU,SAJjBP,MAAM,aACHC,IAQQM,cAPRE,cAAc,EASVN,OACID,QACIA,kBAAAA,iBAAOI,SAAAA,GAPP,OAAOA,EAAeE,IAAI,cAU9BD,WAAc,gBAPdA,aAAc,MAWnBH,SACEF,kBAAAA,iBAAA,SAAAI,GACS,OAAAA,EAAAE,IAAA,4BAEVH,WAAU,sBACNH,aAAAA,SALXF,MAAM,cACHC,IAAK,eAUDQ,cAAW,EARfN,OACIO,QACIR,kBAAAA,iBAAkB,SAACI,GAUnBD,OAAYC,EAAAE,IAAA,cAPZH,WAAY,gBACZE,aAAc,MAYjBH,SACLK,kBAAAA,iBAAc,SAAAH,GACP,OAAAA,EAAAE,IAAA,6BAECN,WAAAA,uBACIK,aAAOD,SANtBN,MAAM,UAWCC,IAAA,0BATJQ,cAUQP,EATRC,OACIO,QAWIL,kBAAAA,iBAAY,SAAAC,GACZC,OAAcD,EAAAE,IAAA,cAEVG,WAAAA,gBATJJ,aAUeK,MARnBR,SACIF,kBAAAA,iBAAkB,SAACI,GACf,OAAOA,EAAeE,IAAI,8BAajCH,WAAA,mBACLI,aAAc,KACPI,SACOF,QAAAA,gBAAAA,eAAA,SAAAC,EAAAE,GACNZ,OAAAA,EAAAA,aALXF,MAWO,iBAVJC,IAWQC,4BAVRO,cAWY,EAVZN,OAYQE,QACAE,kBAAAA,iBAAc,SAAAD,GAVV,OAAOA,EAAeE,IAAI,cAcnCH,WAAS,gBACPE,aAAA,MAELM,SACIE,kBAAAA,iBAAAA,SAAAA,GACWC,OAAAA,EAAsBF,IAAAA,gCAV7BT,WAAY,0BAabE,aAAA,SARVP,MAAM,SACHC,IAYQI,yCAXRI,cAYQF,EAXRM,SAaIE,QAAAA,eAAAA,eAAW,SAAAC,EAAAF,GACPZ,OAAAA,EAAAA,SAAAA,MATRC,OAaQI,QAXAL,kBAAAA,iBAAkB,SAACI,GACf,OAAOA,EAAeE,IAAI,cAejCH,WAAA,gBACLI,aAAc,MAEVM,SACIb,kBAAAA,iBAAoBe,SAAAA,GAZhB,OAAOX,EAAeE,IAAI,4BAe/BH,WAAA,kBACHE,aAAU,SATjBP,MAAM,cACHC,IAaQM,8CAZRE,cAAc,EAcVI,SACIX,QAAAA,eAAAA,eAAAA,SAAAA,EAAAA,GACI,OAAOI,EAAAA,SAAmBQ,MAVtCX,OACIO,QACIR,kBAAAA,iBAAkB,SAACI,GAehB,OAAAA,EAAAE,IAAA,cAEXC,WAAc,gBACPF,aAAA,MAECL,SACIA,kBAAAA,iBAAOI,SAAAA,GAbP,OAAOA,EAAeE,IAAI,2BAgB9BD,WAAc,uBAbdA,aAAc,SAIzBP,MAAM,QACHC,IAcQI,QAbRI,cAcQF,EAbRJ,OACIO,QACIR,kBAAAA,iBAAkB,SAACI,GACf,OAAOA,EAAeE,IAAI,cAgBnCH,WAAYa,gBAbPX,aAAc,MAgBnBY,SACCC,kBAAAA,iBAAWX,SAAAA,GACJY,OAAAA,EAAab,IAAA,eAEzBH,WAAW,iBACFiB,aAAIC,YARxB7B,QAAQC,OAAO,YAcQ0B,KAAAA,eAAAA,SAAAA,YAAAA,wBAAAA,SAAaG,EAAAC,EAAAC,EAAAP,GAZhCK,EAcOG,SAACJ,GAAU,KAAA,SAAAH,GAbd,OAcIQ,EAAYL,aAAAA,KAAAA,SAAAA,GAbRH,EAAMS,KAAKpB,cAA4B,GAAZqB,GAC3BL,EAAOJ,aAAa,UCvQpC,SAAAE,GD0QYK,QAAQN,IAAIC,OCxQpBC,EAASG,SAAAE,GAAA,SAAA,SAAAT,GD4QL,OAAQD,EAAsBY,aAAaC,KAAK,SAACF,GC1QrC,GAAbC,GACCE,EAAAA,aAAiBd,cAEdY,SAAAA,GD4QCH,QAAQN,IAAIC,UCnRxB7B,QAAQC,OAAO,oBAAqBU,WAAW,iBAAA,wBAAA,eAAA,gBAAiB,SAAUc,EAAuBH,EAAcJ,GAE3G,IAAIsB,EAAKC,KAETD,EAAGH,YAAa,EACKZ,EAAsBY,aAC5BC,KAAK,SAACF,GACjBI,EAAGH,WAAaD,GAOjB,SAACP,GACAK,QAAQN,IAAIC,KAGhBW,EAAGE,eACkBjB,EAAsBiB,cAC5BJ,KAAK,SAACF,GACjBI,EAAGE,YAAcN,GAClB,SAACP,GACAK,QAAQN,IAAIC,KAIhBW,EAAGG,gBAAkB,WACjBrB,EAAaqB,gBAAgB,SAAUC,GACnCV,QAAQN,IAAIgB,MAIpBJ,EAAGK,iBAAmB,WAClBvB,EAAauB,iBAAiB,SAAUD,GACpCV,QAAQN,IAAIgB,MAIpBJ,EAAGM,OAAS,WACRrB,EAAsBqB,aCxC9B9C,QAAQC,OAAO,cAAe8C,UAAU,WAAA,SAAA,UAAA,QAAW,SAAUC,EAAQC,EAASC,GAE1ED,EAAQE,KAAK,WAAY,SAAUC,GACX,KAAhBA,EAAMC,QACNL,EAAOM,OAAO,WACVN,EAAOO,MAAML,EAAMM,WAEvBJ,EAAMK,uBAKlBzD,QAAQC,OAAO,qBAAsBU,WAAW,kBAAA,SAAA,wBAAA,gBAAA,cAAkB,SAAUqC,EAAQvB,EAAuBP,EAAewC,GAEtH,IAAIlB,EAAKC,KAETD,EAAGE,YAAcjB,EAAsBiB,cAEvCF,EAAGmB,cAAgBzC,EAAcyC,gBAEjCnB,EAAGoB,YAEHpB,EAAGqB,QAAU,GACbrB,EAAGsB,WAAa,GAGhB,IAAIC,EAASC,GAAGC,UAEhBF,EAAOG,GAAG,eAAgB,SAAUtB,GAChCI,EAAOM,OAAO,WACVd,EAAGoB,SAAWhB,EAAKuB,cAI3BJ,EAAOG,GAAG,iBAAkB,SAAStB,GACjCI,EAAOM,OAAO,WACVd,EAAGoB,SAASQ,QAAQxB,OAI5BJ,EAAG6B,YAAc,WAMbnD,EAAcoD,YAAY9B,EAAGqB,QAAS,SAAUU,EAAQC,GAChDA,GACAC,OAAOC,MAAM,gBChD7B1E,QAAQC,OAAO,kBAAmB0E,QAAQ,eAAA,QAAe,SAASC,GAE9D,IAAID,KAiBJ,OAfAA,EAAQL,YAAc,SAAST,EAASgB,GACpCD,EAAME,KAAK,WAAYjB,GAASkB,QAAQ,SAASnC,EAAMoC,GACnDH,EAASjC,GAAM,KAElBf,MAAM,SAASe,EAAMoC,GAClBH,EAASjC,GAAM,MAIvB+B,EAAQM,cAAgB,WACpBL,EAAME,KAAK,kBAAkBC,QAAQ,SAASnC,GAC1CV,QAAQN,IAAIgB,MAIb+B,KCnBX3E,QAAQC,OAAO,mBAAoB0E,QAAQ,gBAAA,QAAA,eAAgB,SAAUC,EAAOxD,GACxE,IAAIuD,KAqCJ,OAnCAA,EAAQO,WAAa,SAACC,GAClB,OAAOP,EAAME,KAAK,WAAa1D,EAAagE,SAAW,aAAcD,GAChE7C,KAAK,SAACF,GACH,OAAOA,GACR,SAACP,GACAK,QAAQN,IAAIC,MAIxB8C,EAAQpD,SAAW,SAACH,GAChB,OAAOwD,EAAM9D,IAAI,WAAaM,EAAagE,SAAW,UAAYhE,EAAaiE,QAAU,QACpF/C,KAAK,SAACF,GACH,OAAOA,GACR,SAACP,GACAK,QAAQN,IAAIC,MAIxB8C,EAAQhC,gBAAkB,WACtB,OAAOiC,EAAME,KAAK,oBAAoBxC,KAAK,SAACF,GACxCF,QAAQN,IAAIQ,IACb,SAACP,GACAK,QAAQN,IAAIC,MAIpB8C,EAAQW,YAAc,SAACC,GACnB,OAAOX,EAAME,KAAK,WAAa1D,EAAagE,SAAW,UAAYhE,EAAaiE,QAAU,aAAeE,EAAUC,SAAW,WAAaD,EAAUE,WAChJnD,KAAK,SAACF,GACH,OAAOA,GACR,SAACP,GACAK,QAAQN,IAAIC,MAIjB8C,KCtCX3E,QAAQC,OAAO,oBAAqB0E,QAAQ,iBAAA,QAAA,eAAiB,SAAUC,EAAOxD,GAC1E,IAAIuD,KAkEJ,OAhEAA,EAAQe,aAAe,SAACC,GACpB,OAAOf,EAAME,KAAK,iBAAkBa,GAC/BrD,KAAK,SAACF,GACH,OAAOA,GACR,SAACP,GACAK,QAAQN,IAAIC,MAIxB8C,EAAQiB,WAAa,SAACC,GAClB,OAAOjB,EAAMkB,MAAM,eAAgBD,GAC9BvD,KAAK,SAAUF,GACZ,OAAOA,GACR,SAAUP,GACTK,QAAQN,IAAIC,MAIxB8C,EAAQoB,UAAY,SAACC,GACjB,OAAOpB,EAAM9D,IAAI,eAAiBmF,QAAUC,IAAKF,KAC5C1D,KAAK,SAACF,GACH,OAAOA,GACR,SAACP,GACAK,QAAQN,IAAIC,MAIxB8C,EAAQwB,iBAAmB,SAACC,GACxB,OAAOxB,EAAME,KAAK,qBAAsBsB,GACnC9D,KAAK,SAACF,GACH,OAAOA,GACR,SAACP,GACAK,QAAQN,IAAIC,MAIxB8C,EAAQ0B,eAAiB,SAACC,GACtB,OAAO1B,EAAME,KAAK,WAAa1D,EAAagE,SAAUkB,GACjDhE,KAAK,SAACF,GACH,OAAOA,GACR,SAACP,GACAK,QAAQN,IAAIC,MAIxB8C,EAAQ4B,iBAAmB,SAACC,GAExB,OADAtE,QAAQN,IAAI4E,GACL5B,EAAME,KAAK,WAAa1D,EAAagE,SAAW,oBAAqBoB,GACvElE,KAAK,SAACF,GACH,OAAOA,GACR,SAACP,GACAK,QAAQN,IAAIC,MAIxB8C,EAAQ8B,eAAiB,SAACC,GACtB,OAAO9B,EAAM9D,IAAI,iBAAmB4F,GAC/BpE,KAAK,SAACF,GACH,OAAOA,GACR,SAACP,GACAK,QAAQN,IAAIC,MAIjB8C,KCnEX3E,QAAQC,OAAO,kBAAmB0E,QAAQ,eAAA,QAAe,SAAUC,GACjE,IAAID,KAsBJ,OApBAA,EAAQgC,SAAW,SAACC,GAClB,OAAOhC,EAAME,KAAK,YAAa8B,GAC5BtE,KAAK,SAACF,GACL,OAAOA,GACN,SAACP,GAEF,OADAK,QAAQN,IAAIC,GACLA,KAIb8C,EAAQkC,MAAQ,SAACC,GACf,OAAOlC,EAAME,KAAK,SAAUgC,GACzBxE,KAAK,SAACF,GACL,OAAOA,GACN,SAACP,GAEF,OADAK,QAAQN,IAAIC,GACLA,KAIN8C,KCvBT3E,QAAQC,OAAO,4BAA6B8G,QAAQ,yBAAA,UAAA,SAAA,aAAA,KAAA,cAAyB,SAAUC,EAASjF,EAAQkF,EAAYC,EAAIC,GACtH,IAAIJ,KAEEK,GACJC,SAAU,SAACC,EAAKC,GACd,OAAOC,QAAQrG,UAAUmB,KAAK,WAC5B0E,EAAQS,aAAaC,QAAQJ,EAAKC,MAGtCI,SAAU,SAACL,GACT,OAAOE,QAAQrG,UAAUmB,KAAK,WAC5B,OAAO0E,EAAQS,aAAaG,QAAQN,MAGxCO,YAAa,SAACP,GACZ,OAAOE,QAAQrG,UAAUmB,KAAK,WAC5B0E,EAAQS,aAAaK,WAAWR,OA+GtC,OAzGAP,EAAQ1E,WAAa,WACnB,OAAO+E,EAAaO,SAAS,cAC1BrF,KAAK,SAACiF,GACL,GAAIA,EAAO,CACT,IAAIQ,EAAUR,EAAMS,MAAM,KAAK,GAG/B,OAFAD,EAAUf,EAAQiB,KAAKF,IACvBA,EAAUG,KAAKC,MAAMJ,IACNK,IAAMC,KAAKC,MAAQ,IAGlC,OAAO,GAER,SAACzG,GACFK,QAAQN,IAAIC,MAKlBkF,EAAQrE,YAAc,WACpB,OAAOqE,EAAQ1E,aACZC,KAAK,SAACF,GACL,GAAIA,EACF,OAAOgF,EAAaO,SAAS,cAC1BrF,KAAK,SAACiF,GACL,IAAIQ,EAAUR,EAAMS,MAAM,KAAK,GAI/B,OAHAD,EAAUf,EAAQiB,KAAKF,GACvBA,EAAUG,KAAKC,MAAMJ,IAGnB7B,IAAK6B,EAAQ7B,IACbqC,SAAUR,EAAQQ,SAClBC,UAAWT,EAAQS,UACnBC,MAAOV,EAAQU,MACfC,QAASX,EAAQW,UAElB,SAAC7G,GACFK,QAAQN,IAAIC,MAGjB,SAACA,GACFK,QAAQN,IAAIC,MAIlBkF,EAAQ4B,YAAc,SAACpB,GACrB,OAAOH,EAAaS,YAAY,cAC7BvF,KAAK,WACJ,OAAO8E,EAAaC,SAAS,aAAcE,GACxCjF,KAAK,WACJ,MAAO,cACN,SAACT,GACFK,QAAQN,IAAIC,MAEf,SAACA,GACFK,QAAQN,IAAIC,MAIlBkF,EAAQJ,SAAW,SAAUiC,EAAM/D,GACjC,OAAOsC,EAAYR,SAASiC,GACzBtG,KAAK,SAACF,GACL,OAAIA,EAASQ,KAAK2E,MACTH,EAAaC,SAAS,aAAcjF,EAASQ,KAAK2E,OACtDjF,KAAK,WACJ,MAAO,eAGJF,EAASyB,QACTgF,QAAQhF,QAGR,iBAER,SAAChC,GACFK,QAAQN,IAAIC,MAIlBkF,EAAQF,MAAQ,SAAC+B,GACf,OAAOzB,EAAYN,MAAM+B,GACtBtG,KAAK,SAACF,GACL,OAAIA,EAASQ,KAAK2E,MACTH,EAAaC,SAAS,aAAcjF,EAASQ,KAAK2E,OACtDjF,KAAK,WACJ,MAAO,cACN,SAACT,GACFK,QAAQN,IAAIC,KAGK,KAAnBO,EAAS4C,OACJ,kCAGA,kBAER,SAACnD,GACFK,QAAQN,IAAIC,MAIlBkF,EAAQjE,OAAS,WACfkE,EAAQS,aAAaqB,QACrB7B,EAAaA,EAAW8B,MAAK,IAGxBhC,KC/HT/G,QAAQC,OAAO,mBAAoB8G,QAAQ,gBAAA,UAAA,SAAA,eAAA,wBAAA,gBAAgB,SAAUC,EAASjF,EAAQiH,EAAcvH,EAAuBP,GACvH,IAAI6F,KAEAhD,EAASC,GAAGC,UAEVgF,GACFC,SAAU,SAAClD,EAAImD,GACX,OAAO3B,QAAQrG,UAAUmB,KAAK,WAC1B0E,EAAQoC,eAAe1B,QAAQ1B,EAAImD,MAG3C5H,SAAU,SAACyE,GACP,OAAOwB,QAAQrG,UAAUmB,KAAK,WAC1B,OAAO0E,EAAQoC,eAAexB,QAAQ5B,MAG9CqD,YAAa,WACT,OAAO7B,QAAQrG,UAAUmB,KAAK,WAC1B0E,EAAQoC,eAAetB,WAAW9B,QA8I9C,OAzIAe,EAAQxF,SAAW,SAACH,GAChB,OAAO4H,EAAazH,SAASH,GACxBkB,KAAK,SAACF,GACH,OAAO6G,EAAaC,SAAS,QAAShB,KAAKoB,UAAUlH,EAASQ,OACzDN,KAAK,aAGH,SAACT,GACAK,QAAQN,IAAIC,MAErB,SAACA,GACAK,QAAQN,IAAIC,MAIxBkF,EAAQ7B,WAAa,WAGjB,OAAOhE,EAAc6E,YAAYzD,KAAK,SAACF,GAGnC,IAAK,IAAImH,EAAI,EAAGA,EAAInH,EAASoH,MAAMC,OAAQF,IACvC,IAAKnH,EAASoH,MAAMD,GAAGG,KACnB,OAAS7H,MAAO,2BAKxB,IAAK,IADD8H,KACKJ,EAAI,EAAGA,GAAKnH,EAASwH,KAAML,KAVY,SAUvCA,GACL,IAAI/D,GAAaA,SAAU+D,GAC3BnH,EAASoH,MAAMK,QAAQ,SAACrD,GAChBA,EAAKkD,MAAQH,IACb/D,EAASsE,MAAQtD,EAAKsD,MAAM5D,OAGpCyD,EAAWI,KAAKvE,GAPqBwE,CAAhCT,GAUT,IAAIpE,KAGJ,OAFAA,EAAeqE,MAAQG,EAEhBX,EAAa9D,WAAWC,GAC1B7C,KAAK,SAACF,GACH,OAAOlB,EAAc6E,YAChBzD,KAAK,SAACF,GACH,OAAOA,GACR,SAACP,GACAK,QAAQN,IAAIC,MAErB,SAACA,GACAK,QAAQN,IAAIC,MAErB,SAACA,GACAK,QAAQN,IAAIC,MAIpBkF,EAAQkD,UAAY,WACO/I,EAAc6E,YACpBzD,KAAK,SAACF,OAK3B2E,EAAQmD,QAAU,WACd,OAAOjB,EAAa1H,SAAS,SAASe,KAAK,SAAC6G,GAExC,OADajB,KAAKC,MAAMgB,GACVe,SACf,SAACrI,GACAK,QAAQN,IAAIC,MAIpBkF,EAAQoD,iBAAmB,WACvB,OAAOlB,EAAa1H,SAAS,SAASe,KAAK,SAAC6G,GAExC,OADajB,KAAKC,MAAMgB,GACVgB,kBACf,SAACtI,GACAK,QAAQN,IAAIC,MAIpBkF,EAAQqD,UAAY,WAChB,OAAOnB,EAAa1H,SAAS,SAASe,KAAK,SAAC6G,GAKxC,IAJA,IAAIkB,EAASnC,KAAKC,MAAMgB,GACpBmB,KACAC,GAAS,EACThB,EAAI,EACS,GAAVgB,GAAiB,CACpB,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAOlB,MAAMsB,MAAMhB,OAAQe,IAAK,CAChD,IAAIH,EAAOlB,MAAMsB,MAAMD,GAAGE,MAAMnB,GAG3B,CACDgB,GAAS,EACT,MAJAD,EAAYP,KAAKM,EAAOlB,MAAMsB,MAAMD,GAAGE,MAAMnB,GAAGoB,SAQxD,GADApB,IACc,GAAVgB,EAAiB,CACjB,IAAK,IAAIK,EAAIP,EAAOlB,MAAMsB,MAAMhB,OAAS,EAAGmB,GAAK,EAAGA,IAAK,CACrD,IAAIP,EAAOlB,MAAMsB,MAAMG,GAAGF,MAAMnB,GAG3B,CACDgB,GAAS,EACT,MAJAD,EAAYP,KAAKM,EAAOlB,MAAMsB,MAAMG,GAAGF,MAAMnB,GAAGoB,SAOxDpB,KAGR,OAAOe,GACR,SAACzI,GACAK,QAAQN,IAAIC,MAIpBkF,EAAQzB,YAAc,SAACC,GAEnB,OAAOyD,EAAa1D,YAAYC,GAC3BjD,KAAK,SAACF,GAEH,OADA2B,EAAO8G,KAAK,kBACLzI,GACR,SAACP,GACAK,QAAQN,IAAIC,MAIxBkF,EAAQpE,gBAAkB,WACtBqG,EAAarG,mBAGjBoB,EAAOG,GAAG,cAAe,WACrBnC,EAAO+I,WAGJ/D,KChKX/G,QAAQC,OAAO,oBAAqB8G,QAAQ,iBAAA,UAAA,SAAA,eAAA,KAAA,YAAA,gBAAA,wBAAiB,SAAUC,EAASjF,EAAQX,EAAc8F,EAAIlF,EAAW+I,EAAetJ,GAChI,IAAIsF,KAKArE,GAHWwE,EAAG8D,YAIGvJ,EAAsBiB,cAC5BJ,KAAK,SAACF,GACjBM,EAAcN,GACf,SAACP,GACAK,QAAQN,IAAIC,KAIhB,IAAI8B,KAsEJ,OArEAoD,EAAQhB,UAAY,WAChB,GAAI3E,EAAagE,SACb,OAAO2F,EAAchF,UAAU3E,EAAagE,UACvC9C,KAAK,SAACF,GACH,GAAIA,EAASQ,KAET,OADAe,EAAgBvB,EAASQ,KAClBR,EAASQ,MAErB,SAACf,GACAK,QAAQN,IAAIC,MAM5BkF,EAAQkE,gBAAkB,SAAUtF,GAChC,OAAOoF,EAAcrF,aAAaC,GAC7BrD,KAAK,SAACF,GACH,OAAOA,GACR,SAACP,GACAK,QAAQN,IAAIC,MAIxBkF,EAAQnB,WAAa,SAAUsF,GAC3B,OAAOH,EAAcnF,WAAWsF,GAC3B5I,KAAK,SAACF,GACH,OAAOA,GACR,SAACP,GACAK,QAAQN,IAAIC,MAIxBkF,EAAQZ,iBAAmB,SAACC,GACxB,OAAO2E,EAAc5E,iBAAiBC,GACjC9D,KAAK,SAACF,GACH,OAAOA,GACR,SAACP,GACAK,QAAQN,IAAIC,MAIxBkF,EAAQV,eAAiB,SAACC,GACtB,OAAOyE,EAAc1E,eAAeC,GAC/BhE,KAAK,SAACF,GACH,OAAOA,GACR,SAACP,GACAK,QAAQN,IAAIC,MAIxBkF,EAAQR,iBAAmB,SAACC,GACxB,OAAOuE,EAAcxE,iBAAiBC,GACjClE,KAAK,SAACF,GACH,OAAOA,GACR,SAACP,GACAK,QAAQN,IAAIC,MAIxBkF,EAAQN,eAAiB,SAACT,GACtB,OAAO+E,EAActE,eAAeT,GAC/B1D,KAAK,SAACF,GACH,OAAOA,GACR,SAACP,GACAK,QAAQN,IAAIC,MAIjBkF,KCrFX/G,QAAQC,OAAO,0BAA2BU,WAAW,uBAAA,wBAAA,gBAAuB,SAAUc,EAAuBP,GACzG,IAAIsB,EAAKC,KAETD,EAAG2I,kBACH3I,EAAGE,YAAcjB,EAAsBiB,cAAcJ,KAAK,SAACF,GAEvD,OADAI,EAAGE,YAAcN,EACVlB,EAAcuF,eAAerE,EAAS8D,KAAK5D,KAAK,SAACoG,GACpDlG,EAAG2I,eAAiBzC,EAAQ9F,MAC7B,SAACf,GACAK,QAAQN,IAAIC,MAEjB,SAACA,GACAK,QAAQN,IAAIC,QCZpB7B,QAAQC,OAAO,sBAAuBU,WAAW,mBAAA,SAAA,SAAA,eAAA,wBAAA,gBAAA,eAAA,eAAmB,SAAUoB,EAAQV,EAAQD,EAAcK,EAAuBP,EAAeI,EAAc0H,GAC5J,IAAIxG,EAAKC,KAETD,EAAGqB,QAAU,GAEbrB,EAAG4I,SAAW,cACd5I,EAAG6I,aAAc,EACjB7I,EAAG8I,aAAe,GAElB9I,EAAGE,YAAcjB,EAAsBiB,cAAcJ,KAAK,SAACF,GACvDI,EAAGE,YAAcN,IAGKd,EAAa6I,mBACnB7H,KAAK,SAACiJ,GACtB/I,EAAG2H,iBAAmBoB,GACvB,SAAC1J,GACAK,QAAQN,IAAIC,KAGCP,EAAa4I,UACnB5H,KAAK,SAACkE,GACbhE,EAAG0H,QAAU1D,GACd,SAAC3E,GACAK,QAAQN,IAAIC,KAGGP,EAAa8I,YACnB9H,KAAK,SAAC6G,GACf3G,EAAG2G,MAAQA,GACZ,SAACtH,GACAK,QAAQN,IAAIC,KAGhBW,EAAG8C,YAAc,SAACG,GACd,IAAIF,GACAC,SAAUhD,EAAG0H,QAAQ1E,SACrBC,UAAWA,GAEf,OAAOnE,EAAagE,YAAYC,GAAWjD,KAAK,SAACF,KAG9C,SAACP,GACAK,QAAQN,IAAIC,SC3CxB7B,QAAQC,OAAO,8BAA+BU,WAAW,2BAAA,aAAA,SAAA,KAAA,SAAA,wBAAA,gBAA2B,SAAUsG,EAAYjE,EAAQkE,EAAInF,EAAQN,EAAuBP,GACjJ,IAAIsB,EAAKC,KAETD,EAAGqB,QAAU,GAGbrB,EAAGE,eACkBjB,EAAsBiB,cAC5BJ,KAAK,SAACF,GACjBI,EAAGE,YAAcN,GAElB,SAACP,GACAK,QAAQN,IAAIC,KAIhBW,EAAGvB,UACaC,EAAc6E,YACpBzD,KAAK,SAACF,GACZI,EAAGvB,OAASmB,EACZoJ,EAAgBpJ,IACjB,SAACP,GACAK,QAAQN,IAAIC,KAIhBW,EAAGiJ,UAAY,SAACC,EAAQzK,GACpB,IAAI0K,GAAU,EACd,OAAID,GAAUzK,GACVA,EAAO4I,QAAQ,SAAC5G,GACRA,GAAWyI,IACXC,GAAU,KAGXA,GAEJA,GAGXnJ,EAAGoJ,eAEH,IAAIJ,EAAkB,SAACvK,GACfA,GAAQ,WAIR,IAAK,IAHD4K,GAAeC,MAAO,cAAetC,UACrCI,EAAO3I,EAAO2I,KACdmC,EAAe9K,EAAOuI,MACjBD,EAAI,EAAGA,GAAKK,EAAML,KAJnB,SAICA,GACL,IAAIhE,GAAcmE,KAAQH,GAO1BwC,EAAalC,QAAQ,SAACrD,EAAMwF,GACpBxF,EAAKkD,MAAQH,IACbhE,EAAYiB,EACZuF,EAAaE,OAAOD,EAAO,MAGnCH,EAAWrC,MAAMO,KAAKxE,GAdMyE,CAAvBT,GAiBT,GADA/G,EAAGoJ,YAAY7B,KAAK8B,GAChBE,EAAatC,OAAS,EAAG,CACzB,IAAID,GAAUsC,MAAO,aAActC,UACnCuC,EAAalC,QAAQ,SAACrD,GAClBgD,EAAMA,MAAMO,KAAKvD,KAErBhE,EAAGoJ,YAAY7B,KAAKP,IA1BhB,IA+BhBxG,EAAOkJ,OAAS,SAAUC,EAASC,EAAUC,EAAYC,GAErDD,EAAWJ,OAAOK,EAAa,EAAGH,EAAQC,IAGtCD,GAAWE,GAAcC,GAAeF,GAAUA,IACtDD,EAAQF,OAAOG,EAAU,GACzB,IAAK,IAAI7C,EAAI,EAAGA,EAAI8C,EAAW5C,OAAQF,IACnC,GAAI8C,EAAW9C,GAAGrD,KAAOzD,KAAK+D,KAAKN,IAAK,CACpC,IAAIM,EAAO/D,KAAK+D,KAEhB,OAAO+F,EAAW/F,EADP+C,EAAI,GACejH,KAAK,WAC/B,OAAO,GACR,SAACT,GACAK,QAAQN,IAAIC,KAKxB,OAAO,GAGX,IAAI0K,EAAa,SAAC/F,EAAMkD,GACpB,IAAIpD,GACAoD,KAAMA,EACNlD,KAAMA,GAEV,OAAOtF,EAAcmF,eAAeC,GAC/BhE,KAAK,SAACF,GACHL,EAAO+I,UAER,SAACjJ,GACAK,QAAQN,IAAIC,MAIxBW,EAAGgK,WAAa,SAACxG,GACb,IAAIQ,GACAiG,QAASzG,GAEb,OAAO9E,EAAcqF,iBAAiBC,GACjClE,KAAK,SAACF,GACHL,EAAO+I,UAER,SAACjJ,GACAK,QAAQN,IAAIC,SCtH5B7B,QAAQC,OAAO,uBAAwBU,WAAW,oBAAA,SAAA,KAAA,YAAA,WAAA,SAAA,eAAA,wBAAA,gBAAA,eAAoB,SAAUqC,EAAQkE,EAAIwF,EAAWC,EAAU5K,EAAQX,EAAcK,EAAuBP,EAAeI,GAEzK,IAAIkB,EAAKC,KAETD,EAAGqB,QAAU,GAEbrB,EAAGyD,OAAS7E,EAGZoB,EAAGE,eACkBjB,EAAsBiB,cAC5BJ,KAAK,SAACF,GACjBI,EAAGE,YAAcN,GAElB,SAACP,GACAK,QAAQN,IAAIC,KAIhBW,EAAGvB,UACaC,EAAc6E,YACpBzD,KAAK,SAACF,GACZI,EAAGvB,OAASmB,GAEb,SAACP,GACAK,QAAQN,IAAIC,KAIhBW,EAAGiJ,UAAY,SAACC,EAAQzK,GACpB,IAAI0K,GAAU,EACd,OAAID,GAAUzK,GACVA,EAAO4I,QAAQ,SAAC5G,GACRA,GAAWyI,IACXC,GAAU,KAGXA,GAEJA,GAIXnJ,EAAGoK,WAAa,WACZ5J,EAAO6J,cAAgBH,EAAUI,MAC7BC,WAAW,EACXnD,KAAM,KACNoD,YAAa,uBACbrM,WAAY,mBACZE,aAAc,KACdoM,MAAOjK,EACPkK,SAAU,YAIlB1K,EAAG6B,YAAc,WAEb,IAAI+B,GACAhB,SAAY5C,EAAGvB,OAAOiF,IACtBwF,OAAUlJ,EAAGE,YAAYwD,IACzBrC,QAAWrB,EAAG2D,kBAGlB,OAAOjF,EAAciF,iBAAiBC,GACjC9D,KAAK,SAACF,GACHF,QAAQN,IAAIQ,GACe,MAAvBA,EAAS+K,YACTpL,EAAO+I,SAEX5I,QAAQN,IAAIQ,IACb,SAACP,GACAK,QAAQN,IAAIC,MAIxBW,EAAG4K,OAAS,WACRpK,EAAO6J,cAAcQ,QAAQ,WAGjC7K,EAAG8K,aAAe,WACd9K,EAAGqB,QAAU,IAGjBrB,EAAG0C,WAAa,WACW5D,EAAa4D,aACnB5C,KAAK,SAACF,GACfA,EAASP,MACTW,EAAGqB,QAAUzB,EAASP,MAGtBE,EAAO+I,UAEZ,SAACjJ,GACAK,QAAQN,IAAIC,SC7FxB7B,QAAQC,OAAO,2BAA4BU,WAAW,wBAAA,KAAA,aAAA,SAAA,SAAA,wBAAA,gBAAwB,SAASuG,EAAID,EAAYjE,EAAQjB,EAAQN,EAAuBP,GAC1I,IAAIsB,EAAKC,KAETD,EAAGqB,QAAU,GAGbrB,EAAGE,eACkBjB,EAAsBiB,cAC5BJ,KAAK,SAACF,GACjBI,EAAGE,YAAcN,GAElB,SAACP,GACAK,QAAQN,IAAIC,KAIhBW,EAAGoD,WAAa,WACZ,IAAI2H,EAAO,GACX,IAAK,IAAIhE,KAAK/G,EAAGI,KACb2K,GAAQ/K,EAAGI,KAAK2G,GAEpB,IAAI1D,GACAa,QAAWlE,EAAGE,YAAYwD,IAC1BsH,YAAeD,GAEnB,OAAOrM,EAAc0E,WAAWC,GAC3BvD,KAAK,SAACF,GACCA,EAASQ,KAAKiB,QACdrB,EAAGqB,QAAUzB,EAASQ,KAAKiB,QAI3B9B,EAAOJ,aAAa,cAGzB,SAACE,GACAK,QAAQN,IAAIC,MAKxBW,EAAGiL,UAAY,SAACC,GACZC,EAAE,IAAMD,GAAQE,SAGpBpL,EAAG8K,aAAe,WACd9K,EAAGqB,QAAU,OC9CrB7D,QAAQC,OAAO,0BAA2BU,WAAW,uBAAA,KAAA,SAAA,wBAAA,gBAAuB,SAAUuG,EAAInF,EAAQN,EAAuBP,GACrH,IAAIsB,EAAKC,KAETD,EAAGqL,SAAW,GAGdrL,EAAGE,eACkBjB,EAAsBiB,cAC5BJ,KAAK,SAACF,GACjBI,EAAGE,YAAcN,GAElB,SAACP,GACAK,QAAQN,IAAIC,KAIhBW,EAAGyI,gBAAkB,WACjB,IAAItF,GACAmI,WAActL,EAAGuL,UAAUD,WAC3BE,WAAcxL,EAAGuL,UAAUC,WAC3BtH,QAAWlE,EAAGE,YAAYwD,KAG9B,OAAOhF,EAAc+J,gBAAgBtF,GAChCrD,KAAK,SAACF,GACHL,EAAOJ,aAAa,cACrB,SAACE,GACAK,QAAQN,IAAIC,SC3B5B7B,QAAQC,OAAO,0BAA2BU,WAAW,uBAAA,SAAA,YAAA,eAAA,wBAAuB,SAAUoB,EAAQC,EAAWZ,EAAcK,GACnH,IAAIe,EAAKC,KAETD,EAAGqB,QAAU,GAEbrB,EAAGsE,WACC2B,MAAO,GACPwF,SAAU,IAGdzL,EAAGqE,MAAQ,WACP,OAAOpF,EAAsBoF,MAAMrE,EAAGsE,WACjCxE,KAAK,SAACF,GACa,cAAZA,EACAL,EAAOmM,GAAG,aAGV1L,EAAGqB,QAAUzB,GAElB,SAACP,GACAK,QAAQN,IAAIC,MAYxBW,EAAG8K,aAAe,WACd9K,EAAGqB,QAAU,OCjCrB7D,QAAQC,OAAO,6BAA8BU,WAAW,0BAAA,SAAA,wBAA0B,SAAUoB,EAAQN,GAChG,IAAIe,EAAKC,KAETD,EAAGqB,QAAU,GAEbrB,EAAGoE,cACC6B,MAAO,GACPF,SAAU,GACVC,UAAW,GACXyF,SAAU,IAGdzL,EAAG2L,YAAc,WACb,OAAO1M,EAAsBkF,SAASnE,EAAGoE,cACpCtE,KAAK,SAACF,GACHL,EAAOJ,aAAa,cACrB,SAACE,GACAK,QAAQN,IAAIC,MAIxBW,EAAG8K,aAAe,WACd9K,EAAGqB,QAAU,OCtBrB7D,QAAQC,OAAO,6BAA8BU,WAAW,0BAAA,wBAA0B,SAAUc,GACxF,IAAIe,EAAKC,KAETD,EAAGqB,QAAU,GAEbrB,EAAGE,eACkBjB,EAAsBiB,cAC5BJ,KAAK,SAACF,GACjBI,EAAGE,YAAcN,GAClB,SAACP,GACAK,QAAQN,IAAIC,KAGhBW,EAAG4L,IAAM,EAET5L,EAAG6L,OAAS,SAACC,GACT9L,EAAG4L,IAAME,GAGb9L,EAAG+L,MAAQ,SAACD,GACR,OAAO9L,EAAG4L,MAAQE,GAatB9L,EAAG8K,aAAe,WACd9K,EAAGqB,QAAU","file":"app.js","sourcesContent":["let DraftApp = angular.module(\"DraftApp\", [\"ngRoute\", \"ngMessages\", \"ngAnimate\",\n    \"ui.router\", \"ui.bootstrap\", \"dndLists\", \"angular-confirm\",\n    \"AppController\", \"ChatController\", \"DashboardController\", \"LeagueController\", \"LeagueCommishController\", \"LeagueJoinController\", \"LeagueNewController\", \"UserSettingsController\", \"UserLoginController\", \"UserRegisterController\", \"DraftController\",\n    \"AuthenticationService\", \"DraftService\", \"LeagueService\",\n    \"ChatFactory\", \"DraftFactory\", \"LeagueFactory\", \"UserFactory\"]);\n\nangular.module('DraftApp').config(function ($stateProvider, $urlRouterProvider) {\n\n    $urlRouterProvider.otherwise(\"/\");\n\n    $stateProvider\n        .state(\"index\", {\n            url: \"/\",\n            views: {\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('welcome.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        })\n        .state(\"login\", {\n            url: \"/login\",\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: \"vm\",\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('auth/login.html');\n                    },\n                    controller: \"UserLoginController\",\n                    controllerAs: \"vm\"\n                },\n            }\n        })\n        .state('register', {\n            url: \"/register\",\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: 'vm'\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('auth/register.html');\n                    },\n                    controller: \"UserRegisterController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        })\n        .state(\"settings\", {\n            url: \"/settings\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: 'vm',\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('auth/settings.html');\n                    },\n                    controller: \"UserSettingsController\",\n                    controllerAs: \"vm\",\n                }\n            }\n        })\n        .state(\"dashboard\", {\n            url: \"/dashboard\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: 'vm',\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('dashboard.html');\n                    },\n                    controller: \"DashboardController\",\n                    controllerAs: \"vm\",\n                }\n            }\n        })\n        .state('newLeague', {\n            url: \"/league/new\",\n            authenticate: true,\n            views: {\n                'header': {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: 'vm'\n                },\n                'content': {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('league/league.new.html');\n                    },\n                    controller: \"LeagueNewController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        })\n        .state('joinLeague', {\n            url: \"/league/join\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: 'vm'\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('league/league.join.html');\n                    },\n                    controller: \"LeagueJoinController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        })\n        .state('league', {\n            url: \"/league/:leagueID/index\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: 'vm'\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('league/league.index.html');\n                    },\n                    controller: \"LeagueController\",\n                    controllerAs: \"vm\",\n                    resolve: {\n                        league: function (LeagueService, $stateParams) {\n                            return LeagueService.get();\n                        }\n                    }\n                }\n            }\n        })\n        .state('leagueCommish', {\n            url: \"/league/:leagueID/commish\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: 'vm'\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('league/league.commish.html');\n                    },\n                    controller: \"LeagueCommishController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        })\n        .state(\"draft\", {\n            url: \"/league/:leagueID/draft/:draftID/index\",\n            authenticate: true,\n            resolve: {\n                _draft: function (DraftService, $stateParams) {\n                    return DraftService.getDraft($stateParams);\n                }\n            },\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: \"vm\"\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('draft/draft.index.html');\n                    },\n                    controller: \"DraftController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        })\n        .state(\"draftBoard\", {\n            url: \"/league/:leagueID/draft/:draftID/draftBoard\",\n            authenticate: true,\n            resolve: {\n                _draft: function (DraftService, $stateParams) {\n                    return DraftService.getDraft($stateParams);\n                }\n            },\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: \"vm\",\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('draft/draftBoard.html');\n                    },\n                    controller: \"DraftBoardController\",\n                    controllerAs: \"vm\",\n                }\n            }\n        })\n        .state(\"chat\", {\n            url: \"/chat\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: \"vm\"\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('chat.html');\n                    },\n                    controller: \"ChatController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        });\n});\n\nangular.module('DraftApp').run(function ($transitions, $state, $location, AuthenticationService) {\n\n    $transitions.onStart({ to: '*' }, (trans) => {\n        return AuthenticationService.isLoggedIn().then((response) => {\n            if (trans.to().authenticate && response == false) {\n                $state.transitionTo('login');\n            }\n        }, (error) => {\n            console.log(error);\n        });\n    });\n    $transitions.onStart({ to: 'login' }, (trans) => {\n        return  AuthenticationService.isLoggedIn().then((response) => {\n            if (response == true) {\n                $state.transitionTo('dashboard');\n            }\n        }, (error) => {\n            console.log(error);\n        });\n    });\n});","angular.module('AppController', []).controller('AppController', function (AuthenticationService, DraftService, LeagueService) {\n\n    let vm = this;\n\n    vm.isLoggedIn = false;\n    let getLoginStatus = AuthenticationService.isLoggedIn();\n    getLoginStatus.then((response) => {\n        vm.isLoggedIn = response;\n        // if (response == true) {\n        //   vm.isLoggedIn = true;\n        // }\n        // if (response == false) {\n        //   vm.isLoggedIn = false;\n        // }\n    }, (error) => {\n        console.log(error);\n    });\n\n    vm.currentUser = {};\n    let getCurrentUser = AuthenticationService.currentUser();\n    getCurrentUser.then((response) => {\n        vm.currentUser = response;\n    }, (error) => {\n        console.log(error);\n    });\n\n\n    vm.downloadPlayers = function () {\n        DraftService.downloadPlayers(function (data) {\n            console.log(data);\n        });\n    };\n\n    vm.deleteAllPlayers = function () {\n        DraftService.deleteAllPlayers(function (data) {\n            console.log(data);\n        });\n    };\n\n    vm.logOut = () => {\n        AuthenticationService.logOut();\n    };\n});","angular.module('ngEnter', []).directive('ngEnter', function ($scope, element, attrs) {\n\n    element.bind(\"keypress\", function (event) {\n        if (event.which === 13) {\n            $scope.$apply(function () {\n                $scope.$eval(attrs.ngEnter);\n            });\n            event.preventDefault();\n        }\n    });\n});\n\nangular.module('ChatController', []).controller('ChatController', function ($scope, AuthenticationService, LeagueService, ChatFactory) {\n\n    var vm = this;\n\n    vm.currentUser = AuthenticationService.currentUser();\n\n    vm.currentLeague = LeagueService.currentLeague();\n\n    vm.messages = [];\n\n    vm.message = \"\";\n    vm.filterText = \"\";\n\n    \n    var socket = io.connect();\n\n    socket.on(\"pastMessages\", function (data) {\n        $scope.$apply(function(){\n            vm.messages = data.reverse();\n        });\n    });\n\n    socket.on(\"receiveMessage\", function(data){\n        $scope.$apply(function(){\n            vm.messages.unshift(data);\n        });\n    });\n\n    vm.sendMessage = function () {\n        // var chatMessage = {\n        //     \"_id\": vm.currentLeague.chat._id,\n        //     \"userName\": vm.currentUser.firstName,\n        //     \"message\": vm.message\n        // };\n        LeagueService.postMessage(vm.message, function (result, err) {\n            if (err) {\n                window.alert(\"Error!\");\n            }\n            // else{\n            //     socket.emit(\"receiveMessage\", result);\n            //     vm.message = \"\";\n            // }\n        });\n    };\n});","angular.module(\"ChatFactory\", []).factory(\"ChatFactory\", function($http){\n\n    var factory = {};\n\n    factory.postMessage = function(message, callback){\n        $http.post(\"/message\", message).success(function(data, status){\n            callback(data, false);\n        })\n        .error(function(data, status){\n            callback(data, true);\n        });\n    };\n\n    factory.deleteAllChat = function(){\n        $http.post(\"/deleteAllChat\").success(function(data){\n            console.log(data);\n        });\n    };\n\n    return factory;\n});","angular.module(\"DraftFactory\", []).factory(\"DraftFactory\", function ($http, $stateParams) {\n    var factory = {};\n\n    factory.startDraft = (newDraftObject) => {\n        return $http.post(\"/league/\" + $stateParams.leagueID + \"/draft/new\", newDraftObject)\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    factory.getDraft = ($stateParams) => {\n        return $http.get(\"/league/\" + $stateParams.leagueID + \"/draft/\" + $stateParams.draftID + \"/get\")\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    factory.downloadPlayers = () => {\n        return $http.post(\"/downloadPlayers\").then((response) => {\n            console.log(response);\n        }, (error) => {\n            console.log(error);\n        });\n    };\n\n    factory.draftPlayer = (draftPick) => {\n        return $http.post(\"/league/\" + $stateParams.leagueID + \"/draft/\" + $stateParams.draftID + \"/position/\" + draftPick.position + \"/player/\" + draftPick.player_id)\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    return factory;\n});","angular.module(\"LeagueFactory\", []).factory(\"LeagueFactory\", function ($http, $stateParams) {\n    let factory = {};\n\n    factory.createLeague = (newLeagueInfo) => {\n        return $http.post(\"/league/create\", newLeagueInfo)\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    factory.joinLeague = (leaguePack) => {\n        return $http.patch(\"/league/join\", leaguePack)\n            .then(function (response) {\n                return response;\n            }, function (error) {\n                console.log(error);\n            });\n    };\n\n    factory.getLeague = (id) => {\n        return $http.get(\"/getLeague/\", { params: { _id: id } })\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n    \n    factory.newLeagueMessage = (messagePack) => {\n        return $http.post('/league/newMessage', messagePack)\n            .then((response) => {\n                return response\n            }, (error) => {\n                console.log(error);\n            });\n    };\n    \n    factory.updateTeamPick = (pickPack) => {\n        return $http.post('/league/' + $stateParams.leagueID, pickPack)\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n    \n    factory.deleteLeagueTeam = (team) => {\n        console.log(team);\n        return $http.post(\"/league/\" + $stateParams.leagueID + \"/deleteLeagueTeam\", team)\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n    \n    factory.getUserLeagues = (user_id) => {\n        return $http.get('/leagues/user/' + user_id)\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    return factory;\n});","angular.module('UserFactory', []).factory('UserFactory', function ($http) {\n  let factory = {};\n\n  factory.register = (registerInfo) => {\n    return $http.post(\"/register\", registerInfo)\n      .then((response) => {\n        return response;\n      }, (error) => {\n        console.log(error);\n        return error;\n    });\n  };\n\n  factory.login = (loginInfo) => {\n    return $http.post(\"/login\", loginInfo)\n      .then((response) => {\n        return response;\n      }, (error) => {\n        console.log(error);\n        return error;\n      });\n  };\n\n  return factory;\n});","angular.module('AuthenticationService', []).service('AuthenticationService', function ($window, $state, $rootScope, $q, UserFactory) {\n  let service = {};\n\n  const tokenStorage = {\n    setToken: (key, token) => {\n      return Promise.resolve().then(() => {\n        $window.localStorage.setItem(key, token);\n      });\n    },\n    getToken: (key) => {\n      return Promise.resolve().then(() => {\n        return $window.localStorage.getItem(key);\n      });\n    },\n    removeToken: (key) => {\n      return Promise.resolve().then(() => {\n        $window.localStorage.removeItem(key);\n      });\n    }\n  }\n\n  //Is A User Logged In\n  service.isLoggedIn = () => {\n    return tokenStorage.getToken('user-token')\n      .then((token) => {\n        if (token) {\n          let payload = token.split('.')[1];\n          payload = $window.atob(payload);\n          payload = JSON.parse(payload);\n          return payload.exp > Date.now() / 1000;\n        }\n        else {\n          return false;\n        }\n      }, (error) => {\n        console.log(error);\n      });\n  };\n\n  //Return The Current User\n  service.currentUser = function () {\n    return service.isLoggedIn()\n      .then((response) => {\n        if (response) {\n          return tokenStorage.getToken('user-token')\n            .then((token) => {\n              let payload = token.split('.')[1];\n              payload = $window.atob(payload);\n              payload = JSON.parse(payload);\n\n              return {\n                _id: payload._id,\n                userName: payload.userName,\n                firstName: payload.firstName,\n                email: payload.email,\n                leagues: payload.leagues\n              };\n            }, (error) => {\n              console.log(error);\n            });\n        }\n      }, (error) => {\n        console.log(error);\n      });\n  };\n\n  service.updateToken = (token) => {\n    return tokenStorage.removeToken('user-token')\n      .then(() => {\n        return tokenStorage.setToken('user-token', token)\n          .then(() => {\n            return \"Token Set!\";\n          }, (error) => {\n            console.log(error);\n          })\n      }, (error) => {\n        console.log(error);\n      });\n  };\n\n  service.register = function (user, callback) {\n    return UserFactory.register(user)\n      .then((response) => {\n        if (response.data.token) {\n          return tokenStorage.setToken('user-token', response.data.token)\n            .then(() => {\n              return \"Token Set!\";\n            });\n        }\n        else if (response.message) {\n          return reponse.message;\n        }\n        else {\n          return \"Unknown Error\";\n        }\n      }, (error) => {\n        console.log(error);\n      });\n  };\n\n  service.login = (user) => {\n    return UserFactory.login(user)\n      .then((response) => {\n        if (response.data.token) {\n          return tokenStorage.setToken('user-token', response.data.token)\n            .then(() => {\n              return \"Token Set!\"\n            }, (error) => {\n              console.log(error);\n            });\n        }\n        if (response.status == 401) {\n          return \"Incorrect Username or Password!\";\n        }\n        else {\n          return \"Unknown Error!\"\n        }\n      }, (error) => {\n        console.log(error);\n      });\n  };\n\n  service.logOut = () => {\n    $window.localStorage.clear();\n    $rootScope = $rootScope.$new(true);\n  };\n\n  return service;\n});\n","angular.module('DraftService', []).service('DraftService', function ($window, $state, DraftFactory, AuthenticationService, LeagueService) {\n    let service = {};\n\n    let socket = io.connect();\n\n    const draftStorage = {\n        setDraft: (id, draft) => {\n            return Promise.resolve().then(() => {\n                $window.sessionStorage.setItem(id, draft);\n            });\n        },\n        getDraft: (id) => {\n            return Promise.resolve().then(() => {\n                return $window.sessionStorage.getItem(id);\n            });\n        },\n        removeDraft: () => {\n            return Promise.resolve().then(() => {\n                $window.sessionStorage.removeItem(id);\n            });\n        }\n    };\n\n    service.getDraft = ($stateParams) => {\n        return DraftFactory.getDraft($stateParams)\n            .then((response) => {\n                return draftStorage.setDraft(\"draft\", JSON.stringify(response.data))\n                    .then(() => {\n                        return\n                        // console.log(\"Done\");\n                    }, (error) => {\n                        console.log(error);\n                    });\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    service.startDraft = () => {\n\n        //Gets League from LeagueService\n        return LeagueService.getLeague().then((response) => {\n\n            //Checks if any teams have not been assigned a draft pick\n            for (let x = 0; x < response.teams.length; x++) {\n                if (!response.teams[x].pick) {\n                    return { error: \"Please Assign All Picks\" };\n                }\n            }\n            //Sets the field for a new draft\n            let draftField = [];\n            for (let x = 1; x <= response.size; x++) {\n                let position = { position: x };\n                response.teams.forEach((team) => {\n                    if (team.pick == x) {\n                        position._user = team._user._id;\n                    }\n                });\n                draftField.push(position);\n            }\n\n            let newDraftObject = {};\n            newDraftObject.teams = draftField;\n\n            return DraftFactory.startDraft(newDraftObject)\n                .then((response) => {\n                    return LeagueService.getLeague()\n                        .then((response) => {\n                            return response;\n                        }, (error) => {\n                            console.log(error);\n                        });\n                }, (error) => {\n                    console.log(error);\n                });\n        }, (error) => {\n            console.log(error);\n        });\n    };\n\n    service.joinDraft = () => {\n        let getCurrentLeague = LeagueService.getLeague();\n        getCurrentLeague.then((response) => {\n            //Get draft object from league.draft_id\n        });\n    };\n\n    service.onClock = () => {\n        return draftStorage.getDraft('draft').then((draft) => {\n            let pDraft = JSON.parse(draft);\n            return pDraft.onClock;\n        }, (error) => {\n            console.log(error);\n        });\n    };\n\n    service.availablePlayers = () => {\n        return draftStorage.getDraft('draft').then((draft) => {\n            let pDraft = JSON.parse(draft);\n            return pDraft.availablePlayers;\n        }, (error) => {\n            console.log(error);\n        });\n    };\n\n    service.draftList = () => {\n        return draftStorage.getDraft('draft').then((draft) => {\n            let pDraft = JSON.parse(draft);\n            let sortedDraft = [];\n            let sorted = false;\n            let x = 0;\n            while (sorted == false) {\n                for (let y = 0; y < pDraft.draft.field.length; y++) {\n                    if (pDraft.draft.field[y].picks[x]) {\n                        sortedDraft.push(pDraft.draft.field[y].picks[x]._player);\n                    }\n                    else {\n                        sorted = true;\n                        break;\n                    }\n                }\n                x++;\n                if (sorted == false) {\n                    for (let z = pDraft.draft.field.length - 1; z >= 0; z--) {\n                        if (pDraft.draft.field[z].picks[x]) {\n                            sortedDraft.push(pDraft.draft.field[z].picks[x]._player);\n                        }\n                        else {\n                            sorted = true;\n                            break;\n                        }\n                    }\n                    x++;\n                }\n            }\n            return sortedDraft;\n        }, (error) => {\n            console.log(error);\n        });\n    };\n\n    service.draftPlayer = (draftPick) => {\n        \n        return DraftFactory.draftPlayer(draftPick)\n            .then((response) => {\n                socket.emit(\"successfulPick\");\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    service.downloadPlayers = function () {\n        DraftFactory.downloadPlayers();\n    };\n\n    socket.on(\"updateDraft\", function() {\n        $state.reload();\n    });\n\n    return service;\n});","angular.module(\"LeagueService\", []).service(\"LeagueService\", function ($window, $state, $stateParams, $q, $location, LeagueFactory, AuthenticationService) {\n    let service = {};\n\n    let deferred = $q.defer();\n\n    //Current User\n    let currentUser = {};\n    let getCurrentUser = AuthenticationService.currentUser();\n    getCurrentUser.then((response) => {\n        currentUser = response;\n    }, (error) => {\n        console.log(error);\n    });\n\n    //Current League\n    let currentLeague = {};\n    service.getLeague = () => {\n        if ($stateParams.leagueID) {\n            return LeagueFactory.getLeague($stateParams.leagueID)\n                .then((response) => {\n                    if (response.data) {\n                        currentLeague = response.data;\n                        return response.data;\n                    }\n                }, (error) => {\n                    console.log(error);\n                });\n        }\n\n    };\n\n    service.createNewLeague = function (newLeagueInfo) {\n        return LeagueFactory.createLeague(newLeagueInfo)\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    service.joinLeague = function (joinPac) {\n        return LeagueFactory.joinLeague(joinPac)\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    service.newLeagueMessage = (messagePack) => {\n        return LeagueFactory.newLeagueMessage(messagePack)\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    service.updateTeamPick = (pickPack) => {\n        return LeagueFactory.updateTeamPick(pickPack)\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    service.deleteLeagueTeam = (team) => {\n        return LeagueFactory.deleteLeagueTeam(team)\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    service.getUserLeagues = (id) => {\n        return LeagueFactory.getUserLeagues(id)\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    return service;\n});","angular.module('DashboardController', []).controller('DashboardController', function (AuthenticationService, LeagueService) {\n    let vm = this;\n\n    vm.currentLeagues = [];\n    vm.currentUser = AuthenticationService.currentUser().then((response) => {\n        vm.currentUser = response;\n        return LeagueService.getUserLeagues(response._id).then((leagues) => {\n            vm.currentLeagues = leagues.data\n        }, (error) => {\n            console.log(error);\n        })\n    }, (error) => {\n        console.log(error);\n    });\n    \n});","angular.module(\"DraftController\", []).controller(\"DraftController\", function ($state, _draft, $stateParams, AuthenticationService, LeagueService, DraftService, DraftFactory) {\n    let vm = this;\n\n    vm.message = \"\";\n\n    vm.sortType = 'displayName';\n    vm.sortReverse = false;\n    vm.searchPlayer = \"\";\n\n    vm.currentUser = AuthenticationService.currentUser().then((response) => {\n        vm.currentUser = response;\n    });\n\n    let getAvailablePlayers = DraftService.availablePlayers();\n    getAvailablePlayers.then((players) => {\n        vm.availablePlayers = players;\n    }, (error) => {\n        console.log(error);\n    });\n\n    let getOnClock = DraftService.onClock();\n    getOnClock.then((team) => {\n        vm.onClock = team;\n    }, (error) => {\n        console.log(error);\n    });\n\n    let getDraftList = DraftService.draftList();\n    getDraftList.then((draft) => {\n        vm.draft = draft;\n    }, (error) => {\n        console.log(error);\n    });\n\n    vm.draftPlayer = (player_id) => {\n        let draftPick = {\n            position: vm.onClock.position,\n            player_id: player_id\n        };\n        return DraftService.draftPlayer(draftPick).then((response) => {\n            return;\n            // $state.reload();\n        }, (error) => {\n            console.log(error);\n        });\n    };\n\n\n\n});","angular.module('LeagueCommishController', []).controller('LeagueCommishController', function ($rootScope, $scope, $q, $state, AuthenticationService, LeagueService) {\n    let vm = this;\n\n    vm.message = \"\";\n\n    //Current User\n    vm.currentUser = {};\n    let getCurrentUser = AuthenticationService.currentUser();\n    getCurrentUser.then((response) => {\n        vm.currentUser = response;\n        return;\n    }, (error) => {\n        console.log(error);\n    });\n\n    //Current League\n    vm.league = {};\n    let getLeague = LeagueService.getLeague();\n    getLeague.then((response) => {\n        vm.league = response;\n        createPicksList(response);\n    }, (error) => {\n        console.log(error);\n    });\n\n    //Commish Auth\n    vm.isCommish = (userID, league) => {\n        let commish = false;\n        if (userID && league) {\n            league.forEach((element) => {\n                if (element == userID) {\n                    commish = true;\n                }\n            });\n            return commish;\n        }\n        return commish;\n    };\n\n    vm.leagueField = [];\n\n    let createPicksList = (league) => {\n        if (league) {\n            let draftOrder = { title: \"Draft Order\", teams: [] };\n            let size = league.size;\n            let currentTeams = league.teams;\n            for (let x = 1; x <= size; x++) {\n                let draftPick = { 'pick': x };\n                // angular.forEach(currentTeams, (team, index) => {\n                //     if (team.pick == x) {\n                //         draftPick = team;\n                //         currentTeams.splice(index, 1);\n                //     }\n                // });\n                currentTeams.forEach((team, index) => {\n                    if (team.pick == x) {\n                        draftPick = team;\n                        currentTeams.splice(index, 1);\n                    }\n                });\n                draftOrder.teams.push(draftPick);\n            }\n            vm.leagueField.push(draftOrder);\n            if (currentTeams.length > 0) {\n                let teams = { title: \"Needs Pick\", teams: [] };\n                currentTeams.forEach((team) => {\n                    teams.teams.push(team);\n                });\n                vm.leagueField.push(teams);\n            }\n        }\n    };\n\n    $scope.onDrop = function (srcList, srcIndex, targetList, targetIndex) {\n        // Copy the item from source to target.\n        targetList.splice(targetIndex, 0, srcList[srcIndex]);\n        // Remove the item from the source, possibly correcting the index first.\n        // We must do this immediately, otherwise ng-repeat complains about duplicates.\n        if (srcList == targetList && targetIndex <= srcIndex) srcIndex++;\n        srcList.splice(srcIndex, 1);\n        for (let x = 0; x < targetList.length; x++) {\n            if (targetList[x]._id == this.team._id) {\n                let team = this.team;\n                let pick = x + 1;\n                return updatePick(team, pick).then(() => {\n                    return true;\n                }, (error) => {\n                    console.log(error);\n                });\n            }\n        }\n        // By returning true from dnd-drop we signalize we already inserted the item.\n        return true;\n    };\n\n    let updatePick = (team, pick) => {\n        let pickPack = {\n            pick: pick,\n            team: team\n        };\n        return LeagueService.updateTeamPick(pickPack)\n            .then((response) => {\n                $state.reload();\n                return;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n    \n    vm.deleteTeam = (id) => {\n        let team = {\n            team_id: id\n        };\n        return LeagueService.deleteLeagueTeam(team)\n            .then((response) => {\n                $state.reload();\n                return\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n});","angular.module('LeagueController', []).controller('LeagueController', function ($scope, $q, $uibModal, $confirm, $state, $stateParams, AuthenticationService, LeagueService, DraftService) {\n\n    let vm = this;\n\n    vm.message = \"\";\n\n    vm.params = $stateParams;\n\n    //Current User\n    vm.currentUser = {};\n    let getCurrentUser = AuthenticationService.currentUser();\n    getCurrentUser.then((response) => {\n        vm.currentUser = response;\n        return;\n    }, (error) => {\n        console.log(error);\n    });\n\n    //Current League\n    vm.league = {};\n    let getLeague = LeagueService.getLeague();\n    getLeague.then((response) => {\n        vm.league = response;\n        return;\n    }, (error) => {\n        console.log(error);\n    });\n\n    //Commish Auth\n    vm.isCommish = (userID, league) => {\n        let commish = false;\n        if (userID && league) {\n            league.forEach((element) => {\n                if (element == userID) {\n                    commish = true;\n                }\n            });\n            return commish;\n        }\n        return commish;\n    };\n\n    //Open New League Message Modal\n    vm.newMessage = () => {\n        $scope.modalInstance = $uibModal.open({\n            animation: true,\n            size: \"lg\",\n            templateUrl: 'newMessageModal.html',\n            controller: 'LeagueController',\n            controllerAs: 'vm',\n            scope: $scope,\n            backdrop: \"static\",\n        });\n    };\n\n    vm.sendMessage = () => {\n\n        let messagePack = {\n            \"leagueID\": vm.league._id,\n            \"userID\": vm.currentUser._id,\n            \"message\": vm.newLeagueMessage\n        };\n\n        return LeagueService.newLeagueMessage(messagePack)\n            .then((response) => {\n                console.log(response);\n                if (response.statusText == \"OK\") {\n                    $state.reload();\n                }\n                console.log(response);\n            }, (error) => {\n                console.log(error);\n            });\n    };\n    \n    vm.cancel = () => {\n        $scope.modalInstance.dismiss('cancel');\n    };\n\n    vm.dismissError = () => {\n        vm.message = \"\";\n    };\n\n    vm.startDraft = () => {\n        let startLeagueDraft = DraftService.startDraft();\n        startLeagueDraft.then((response) => {\n            if (response.error) {\n                vm.message = response.error;\n            }\n            else {\n                $state.reload();\n            }\n        }, (error) => {\n            console.log(error);\n        });\n    };\n});","angular.module('LeagueJoinController', []).controller('LeagueJoinController', function($q, $rootScope, $scope, $state, AuthenticationService, LeagueService) {\n    let vm = this;\n\n    vm.message = \"\";\n\n    //Current User\n    vm.currentUser = {};\n    let getCurrentUser = AuthenticationService.currentUser();\n    getCurrentUser.then((response) => {\n        vm.currentUser = response;\n        return;\n    }, (error) => {\n        console.log(error);\n    });\n\n    //Join League\n    vm.joinLeague = () => {\n        let code = \"\";\n        for (var x in vm.data) {\n            code += vm.data[x];\n        }\n        let leaguePack = {\n            \"user_id\": vm.currentUser._id,\n            \"league_code\": code,\n        };\n        return LeagueService.joinLeague(leaguePack)\n            .then((response) => {\n                if (response.data.message) {\n                    vm.message = response.data.message;\n                    \n                }\n                else {\n                    $state.transitionTo('dashboard');\n                }\n\n            }, (error) => {\n                console.log(error);\n            });\n    };\n    \n    //Moves Focus After Input\n    vm.moveFocus = (nextId) => {\n        $('#' + nextId).focus();\n    };\n\n    vm.dismissError = () => {\n        vm.message = \"\";\n    };\n});","angular.module('LeagueNewController', []).controller('LeagueNewController', function ($q, $state, AuthenticationService, LeagueService) {\n    let vm = this;\n\n    vm.messsage = \"\";\n\n    //Current User\n    vm.currentUser = {};\n    let getCurrentUser = AuthenticationService.currentUser();\n    getCurrentUser.then((response) => {\n        vm.currentUser = response;\n        return;\n    }, (error) => {\n        console.log(error);\n    });\n\n    //Create New League\n    vm.createNewLeague = () => {\n        let newLeagueInfo = {\n            \"leagueName\": vm.newLeague.leagueName,\n            \"leagueSize\": vm.newLeague.leagueSize,\n            \"user_id\": vm.currentUser._id\n        };\n\n        return LeagueService.createNewLeague(newLeagueInfo)\n            .then((response) => {\n                $state.transitionTo('dashboard');\n            }, (error) => {\n                console.log(error);\n            });\n    };\n})","angular.module('UserLoginController', []).controller('UserLoginController', function ($state, $location, $stateParams, AuthenticationService) {\n    let vm = this;\n\n    vm.message = \"\";\n\n    vm.loginInfo = {\n        email: \"\",\n        password: \"\"\n    };\n\n    vm.login = () => {\n        return AuthenticationService.login(vm.loginInfo)\n            .then((response) => {\n                if (response == \"Token Set!\") {\n                    $state.go('dashboard');\n                }\n                else {\n                    vm.message = response;\n                }\n            }, (error) => {\n                console.log(error);\n            });\n    };\n    \n    // vm.onSignIn = (googleUser) => {\n    //     console.log(\"Fired onSign In\");\n    //     if (googleUser) {\n    //         var profile = googleUser.getBasicProfile();\n    //         console.log(\"Email: \" + profile.getEmail());\n    //     }\n    // };\n\n    vm.dismissError = () => {\n        vm.message = \"\";\n    };\n});","angular.module('UserRegisterController', []).controller('UserRegisterController', function ($state, AuthenticationService) {\n    let vm = this;\n\n    vm.message = \"\";\n\n    vm.registerInfo = {\n        email: \"\",\n        userName: \"\",\n        firstName: \"\",\n        password: \"\"\n    };\n\n    vm.registerNew = function () {\n        return AuthenticationService.register(vm.registerInfo)\n            .then((response) => {\n                $state.transitionTo('dashboard');\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    vm.dismissError = () => {\n        vm.message = \"\";\n    };\n});","angular.module('UserSettingsController', []).controller('UserSettingsController', function (AuthenticationService) {\n    let vm = this;\n\n    vm.message = \"\";\n\n    vm.currentUser = {};\n    let getCurrentUser = AuthenticationService.currentUser();\n    getCurrentUser.then((response) => {\n        vm.currentUser = response;\n    }, (error) => {\n        console.log(error);\n    });\n\n    vm.tab = 1;\n\n    vm.setTab = (tabId) => {\n        vm.tab = tabId;\n    };\n\n    vm.isSet = (tabId) => {\n        return vm.tab === tabId;\n    };\n\n    \n\n    \n\n    \n\n    \n\n    \n    \n    vm.dismissError = () => {\n        vm.message = \"\";\n    }\n\n});\n\n"]}