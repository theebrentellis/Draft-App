{"version":3,"sources":["app.js","controllers/AppController.js","controllers/ChatController.js","controllers/DashboardController.js","controllers/LeagueController.js","controllers/PlayerController.js","controllers/UserController.js","factories/ChatFactory.js","factories/DraftFactory.js","factories/LeagueFactory.js","factories/UserFactory.js","services/AuthenticationService.js","services/DraftService.js","services/LeagueService.js"],"names":["DraftApp","angular","module","$stateProvider","$urlRouterProvider","otherwise","config","state","url","content","templateProvider","$templateCache","controller","views","header","get","controllerAs","authenticate","run","onStart","$transitions","$location","$state","AuthenticationService","to","trans","AuthService","injector","console","log","transitionTo","isLoggedIn","$scope","$q","DraftService","LeagueService","vm","this","currentUser","currentLeague","appViewChange","view","path","setCurrentLeague","leagueId","setCurrentLeagueId","then","getLeague","reload","error","setColor","league","_id","font-weight","deleteAllDBs","deleteAllPlayers","deleteAllUsers","deleteAllChat","deleteAllDrafts","downloadPlayers","data","deleteAllLeagues","currentUserLogOut","directive","element","attrs","bind","event","which","$apply","$eval","ngEnter","preventDefault","ChatFactory","messages","message","filterText","socket","io","connect","on","reverse","unshift","sendMessage","postMessage","result","err","window","alert","$view","$confirm","allLeagues","createNewLeagueView","findLeagueView","getAllLeagues","leagues","leagueViewChange","createNewLeague","newLeagueInfo","leagueName","newLeague","userId","joinLeague","callback","status","$timeout","DraftFactory","available_players","allDraftedPlayers","setColorOnClock","team","onClock","getPlayers","position","startDraft","id","draftPackage","draftId","draft","draftOrder","response","draftPlayer","isOnClock","pick","checkBox","value","getDraftedPlayers","loginView","registerView","tab","setTab","tabId","isSet","userViewChange","registerInfo","email","userName","firstName","password","loginInfo","registerNew","register","login","dismissError","factory","$http","post","success","params","output","createLeague","token","user","patch","getUserLeague","service","$window","$rootScope","UserFactory","saveToken","localStorage","getToken","payload","split","atob","JSON","parse","exp","Date","now","updateToken","resolve","removeItem","clear","$new","reponse","statusText","undraftedPlayers","draftedPlayers","LeagueFactory","saveCurrentLeagueId","currentLeagueId","saveCurrentLeague","setItem","stringify","getItem","when","getCurrentLeagueId","theLeague","updatedCurrentUser","undefined","x","y","splice","chatMessage","chat"],"mappings":"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","file":"app.js","sourcesContent":["let DraftApp = angular.module(\"DraftApp\", [\"ngRoute\", \"ngMessages\", \"ngAnimate\", \"ui.router\", \"ui.bootstrap\", \"angular-confirm\", \"AppController\", \"AuthenticationService\", \"ChatController\", \"DashboardController\", \"DraftService\", \"LeagueController\", \"LeagueService\", \"PlayerController\", \"UserController\", \"ChatFactory\", \"DraftFactory\", \"LeagueFactory\", \"UserFactory\"]);\n\nangular.module('DraftApp').config(function($stateProvider, $urlRouterProvider){\n    \n    $urlRouterProvider.otherwise(\"/dashboard\");\n\n    $stateProvider\n        .state(\"index\", {\n            url: \"/\",\n            views: {\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('welcome.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        })\n        .state(\"login\", {\n            url:\"/login\",\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: \"vm\",\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('login.html');\n                    },\n                    // templateUrl: \"login.html\",\n                    controller: \"UserController\",\n                    controllerAs: \"vm\"\n                },\n            }\n        })\n        .state('register', {\n            url: \"/register\",\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    // templateUrl: \"/partials/app.html\",\n                    controller: \"AppController\",\n                    controllerAs: 'vm'\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('register.html');\n                    },\n                    // templateUrl: '/partials/register.html',\n                    controller: \"UserController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        })\n        .state(\"dashboard\", {\n            url: \"/dashboard\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: 'vm',\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('dashboard.html');\n                    },\n                    controller: \"UserController\",\n                    controllerAs: \"vm\",\n                }\n            }\n        })\n        .state(\"settings\", {\n            url: \"/settings\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: 'vm',\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('settings.html');\n                    },\n                    controller: \"UserController\",\n                    controllerAs: \"vm\",\n                }\n            }\n        })\n        .state(\"commish\", {\n            url: \"/commish\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: \"vm\"\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('commish.html');\n                    },\n                    controller: \"LeagueController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        })\n        .state(\"availablePlayers\", {\n            url: \"/availablePlayers\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: \"vm\",\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('availablePlayers.html');\n                    },\n                    controller: \"PlayerController\",\n                    controllerAs: \"vm\",\n                }\n            }\n        })\n        .state(\"draftboard\", {\n            url: \"/draftboard\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: \"vm\"\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('draftBoard.html');\n                    },\n                    controller: \"PlayerController\",\n                    controllerAs: \"vm\",\n                    authenticate: true\n                }\n            }\n        })\n        .state(\"chat\", {\n            url: \"/chat\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: \"vm\"\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('chat.html');\n                    },\n                    controller: \"ChatController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        });\n});\n\nangular.module('DraftApp').run(function ($transitions, $location, $state, AuthenticationService) {\n    $transitions.onStart({to: '*'}, function (trans) {\n        let AuthService = trans.injector().get('AuthenticationService');\n        if (trans.to().authenticate && !AuthService.isLoggedIn()) {\n            console.log(\"Go To Login!\");\n            $state.transitionTo('login');\n        }\n    });\n});\n\nDraftApp.run(function ($templateCache) {\n    \n});","angular.module('AppController', []).controller('AppController', function ($scope, $location, $q, $state, AuthenticationService, DraftService, LeagueService) {\n\n    var vm = this;\n\n    vm.isLoggedIn = AuthenticationService.isLoggedIn();\n\n    vm.currentUser = AuthenticationService.currentUser();\n\n    vm.currentLeague = LeagueService.currentLeague();\n\n    //Changes Views\n    vm.appViewChange = function(view){\n      if(vm.isLoggedIn === true){\n        if(view == \"/availablePlayers\" | view == \"/draftBoard\" | \"/chat\"){\n          $location.path(view);\n        }\n        else{\n          $location.path(view);\n        }  \n      }\n      else{\n        $location.path(\"/login\");\n      }\n    };\n\n    //Sets A League and Returns League Info\n    vm.setCurrentLeague = function(leagueId){\n      return LeagueService.setCurrentLeagueId(leagueId)\n        .then(function(){\n          return LeagueService.getLeague()\n            .then(function(){\n              $state.reload();\n            }, function(error){\n              console.log(error);\n            });\n        }, function(error){\n          console.log(error);\n        });\n    };\n\n    //Sets Current League To Bold\n    vm.setColor = function(league){\n      var currentLeague = LeagueService.currentLeague();\n      if(currentLeague._id === league._id){\n        return {\"font-weight\": \"bold\"};\n      }\n    };\n\n    //Dev Tools (Not For Production)\n    vm.deleteAllDBs = function(){\n      DraftService.deleteAllPlayers();\n      AuthenticationService.deleteAllUsers();\n      LeagueService.deleteAllChat();\n      DraftService.deleteAllDrafts();\n    };\n  \n    vm.downloadPlayers = function(){\n      DraftService.downloadPlayers(function(data){\n        console.log(data);\n      });\n    };\n  \n    vm.deleteAllPlayers = function(){\n      DraftService.deleteAllPlayers(function(data){\n        console.log(data);\n      });\n    };\n  \n    vm.deleteAllUsers = function(){\n      AuthenticationService.deleteAllUsers();\n      $location.path(\"/login\");\n    };\n  \n    vm.deleteAllChat = function(){\n      LeagueService.deleteAllChat();\n    };\n  \n    vm.deleteAllLeagues = function(){\n      LeagueService.deleteAllLeagues();\n    };\n  \n    vm.deleteAllDrafts = function(){\n      DraftService.deleteAllDrafts();\n    };\n  \n    vm.currentUserLogOut = function(){\n      AuthenticationService.currentUserLogOut();\n    };\n  \n});","angular.module('ngEnter', []).directive('ngEnter', function ($scope, element, attrs) {\n\n    element.bind(\"keypress\", function (event) {\n        if (event.which === 13) {\n            $scope.$apply(function () {\n                $scope.$eval(attrs.ngEnter);\n            });\n            event.preventDefault();\n        }\n    });\n});\n\nangular.module('ChatController', []).controller('ChatController', function ($scope, AuthenticationService, LeagueService, ChatFactory) {\n\n    var vm = this;\n\n    vm.currentUser = AuthenticationService.currentUser();\n\n    vm.currentLeague = LeagueService.currentLeague();\n\n    vm.messages = [];\n\n    vm.message = \"\";\n    vm.filterText = \"\";\n\n    \n    var socket = io.connect();\n\n    socket.on(\"pastMessages\", function (data) {\n        $scope.$apply(function(){\n            vm.messages = data.reverse();\n        });\n    });\n\n    socket.on(\"receiveMessage\", function(data){\n        $scope.$apply(function(){\n            vm.messages.unshift(data);\n        });\n    });\n\n    vm.sendMessage = function () {\n        // var chatMessage = {\n        //     \"_id\": vm.currentLeague.chat._id,\n        //     \"userName\": vm.currentUser.firstName,\n        //     \"message\": vm.message\n        // };\n        LeagueService.postMessage(vm.message, function (result, err) {\n            if (err) {\n                window.alert(\"Error!\");\n            }\n            // else{\n            //     socket.emit(\"receiveMessage\", result);\n            //     vm.message = \"\";\n            // }\n        });\n    };\n});","angular.module('DashboardController', []).controller('DashboardController', function ($scope, $view, $location, $state) {\n    let vm = this;\n\n    // vm.currentUser = AuthenticationService.currentUser();\n\n    // vm.allLeagues = LeagueService.getAllLeagues();\n\n    \n});","angular.module('LeagueController', []).controller('LeagueController', function ($scope, $q, $confirm, $location, AuthenticationService, LeagueService) {\n    \n    var vm = this;\n\n    vm.allLeagues = [];\n\n    vm.currentUser = AuthenticationService.currentUser();\n\n    vm.currentLeague = LeagueService.currentLeague();\n\n    vm.createNewLeagueView = false;\n    vm.findLeagueView = false;\n\n    var getAllLeagues = function(){\n        return LeagueService.getAllLeagues()\n            .then(function(leagues){\n                vm.allLeagues = leagues;\n            }, function(error){\n                console.log(error);\n            });\n    };\n\n    // var getUserLeague = function(id){\n    //     LeagueService.getUserLeague(id, function(league){\n    //     });\n    // };\n\n    vm.leagueViewChange = function(view){\n        if(view === \"createNew\"){\n            vm.createNewLeagueView = true;\n            vm.findLeagueView = false;\n        }\n        if(view === \"findLeague\"){\n            return getAllLeagues()\n                .then(function(){\n                    vm.findLeagueView = true;\n                    vm.createNewLeagueView = false;\n                }, function(error){\n                    console.log(error);\n                });\n            \n            \n        }\n    };\n\n    vm.createNewLeague = function(){\n        var newLeagueInfo = {\n            \"leagueName\": vm.newLeague.leagueName,\n            \"userId\": vm.currentUser._id\n        };\n        LeagueService.createNewLeague(newLeagueInfo);\n    };\n\n    vm.joinLeague = function(leagueId, callback){\n        LeagueService.joinLeague(leagueId, function(status){\n            if(status == \"Success\"){\n                console.log(\"Success!\");\n            }\n            else{\n                console.log(\"Error\");\n            }\n        });\n    };\n\n});","angular.module('PlayerController', []).controller('PlayerController', function ($scope, $location, $confirm, $timeout, $q, DraftFactory, AuthenticationService, DraftService, LeagueService) {\n\n  var vm = this;\n\n  vm.available_players = [];\n\n  vm.allDraftedPlayers = [];\n\n  vm.message = \"\";\n\n  vm.currentUser = AuthenticationService.currentUser();\n\n  vm.currentLeague = LeagueService.currentLeague();\n\n  vm.setColorOnClock = function(team){\n      if(vm.currentLeague.onClock === team._id){\n        return {\"font-weight\": \"bold\"};\n      }\n  };\n\n  vm.getPlayers = function (position) {\n    DraftFactory.getPlayers(position, function (data) {\n      vm.available_players = data;\n    });\n  };\n\n  vm.startDraft = function(id){\n    var draftPackage = {\n      draftId: vm.currentLeague.draft._id,\n      draftOrder: vm.currentLeague.draftOrder\n\n    };\n    return DraftService.startDraft(draftPackage)\n      .then(function(response){\n        console.log(response);\n      }, function(error){\n        console.log(error);\n      });\n  };\n\n  vm.draftPlayer = function (id) {\n    if(DraftService.isOnClock() === true){\n\n      var draftPackage = {\n        draftId: vm.currentLeague.draft._id,\n        leagueId: vm.currentLeague._id,\n        team: vm.currentUser._id,\n        pick: id,\n      };\n      \n      return DraftService.draftPlayer(draftPackage)\n        .then(function(response){\n          console.log(response);\n          if(response === true){\n            $location.path(\"/draftBoard\");\n          }\n          if(response === false){\n            console.log(\"Error in PlayerControiller draftPlayer\");\n          }\n        }, function(error){\n          console.log(error);\n        });\n    }\n    if(DraftService.isOnClock() === false){\n      vm.message = \"You Are Not On The Clock!\";\n      vm.checkBox.value = false;\n      $timeout(function(){\n        vm.message = false;\n      }, 5000);\n    }\n  };\n\n  var getDraftedPlayers = function () {\n    DraftFactory.getDraftedPlayers(function (data) {\n      vm.allDraftedPlayers = data;\n    });\n  };\n  getDraftedPlayers();\n});\n","angular.module('UserController', []).controller('UserController', function($scope, $q, $view, $location, $state, AuthenticationService, LeagueService){\n    var vm = this;\n\n    vm.currentUser = AuthenticationService.currentUser();\n\n    vm.currentLeague = LeagueService.currentLeague();\n\n    vm.message = \"\";\n\n    vm.loginView = true;\n    vm.registerView = false;\n\n    vm.tab = 1;\n\n    vm.setTab = function (tabId) {\n        vm.tab = tabId;\n    };\n\n    vm.isSet = function (tabId) {\n        return vm.tab === tabId;\n    };\n\n    vm.userViewChange = function(view){\n        if(view === true){\n            vm.loginView = false;\n            vm.registerView = true;\n        }\n        else{\n            vm.loginView = true;\n            vm.registerView = false;\n        }\n    };\n\n    vm.registerInfo = {\n        email: \"\",\n        userName: \"\",\n        firstName: \"\",\n        password: \"\"\n    };\n\n    vm.loginInfo = {\n        email: \"\",\n        password: \"\"\n    };\n\n    vm.registerNew = function(){\n        AuthenticationService.register(vm.registerInfo, function(data){\n            if(data === \"Success\"){\n                $location.path(\"/dashboard\");\n            }\n            else{\n                vm.message = data;\n            }     \n        });\n    };\n\n    vm.login = function(){\n       return AuthenticationService.login(vm.loginInfo)\n           .then(function (response) {\n               if (response == \"Success\") {\n                   $location.path('/dashboard');\n                    // let theUser = AuthenticationService.currentUser();\n                    // if(theUser.leagues[0] === undefined){\n                    //     $location.path(\"/commish\");\n                    // }\n                    // else{\n                    //     $q.when(LeagueService.setCurrentLeagueId(theUser.leagues[0]._id))\n                    //         .then(function(){\n                    //             return LeagueService.getLeague()\n                    //                 .then(function(response){\n                    //                     $location.path(\"/availablePlayers\");\n                    //                 }, function(error){\n                    //                     console.log(error);\n                    //                 });\n                    //         }, function(error){\n                    //             console.log(error);\n                    //         });\n                    // }             \n                }\n                else{\n                    vm.message = response;\n                    console.log(response);\n                }\n           }, function (error) {\n               vm.message = \"Error: \" + error.status;\n                console.log(error);\n            });\n    };\n\n    function onSignIn(googleUser){\n        console.log(\"Fired onSign In\");\n        if(googleUser){\n            var profile = googleUser.getBasicProfile();\n            console.log(\"Email: \" + profile.getEmail());\n        }\n    };\n    vm.dismissError = ()=>{\n        console.log(\"Dismiss\");\n        vm.message = \"\";\n    }\n\n});\n\n","angular.module(\"ChatFactory\", []).factory(\"ChatFactory\", function($http){\n\n    var factory = {};\n\n    factory.postMessage = function(message, callback){\n        $http.post(\"/message\", message).success(function(data, status){\n            callback(data, false);\n        })\n        .error(function(data, status){\n            callback(data, true);\n        });\n    };\n\n    factory.deleteAllChat = function(){\n        $http.post(\"/deleteAllChat\").success(function(data){\n            console.log(data);\n        });\n    };\n\n    return factory;\n});","angular.module(\"DraftFactory\", []).factory(\"DraftFactory\", function($http, $q){\n    var factory = {};\n\n    factory.downloadPlayers = function(){\n        $http.post(\"/downloadPlayers\").success(function(data){\n            console.log(data);\n        });\n    };\n\n    factory.getPlayers = function(position, callback){\n        $http.get(\"/getPlayers/\", {params: {position: position}}).success(function(output){\n            callback(output);\n        });\n    };\n\n    factory.deleteAllPlayers = function(callback){\n        $http.post(\"/deleteAllPlayers\").success(function(data){\n            callback(data);\n        });\n    };\n\n    factory.startDraft = function(draftPackage){\n        return $http.post(\"/startDraft\", draftPackage)\n            .then(function(response){\n                console.log(response);\n            }, function(error){\n                console.log(error);\n            });\n    };\n\n    factory.draftPlayer = function(draftPackage){\n        return $http.post(\"/draftPlayer\", draftPackage)\n            .then(function(response){\n                return response;\n            }, function(error){\n                console.log(error);\n            });\n    };\n\n    factory.getDraftedPlayers = function(callback){\n        $http.get(\"/getDraftedPlayers\").success(function(output){\n            callback(output);\n        });\n    };\n\n    factory.deleteAllDrafts = function(){\n        return $http.post(\"/deleteAllDrafts\");\n    };\n\n    return factory;\n});","angular.module(\"LeagueFactory\", []).factory(\"LeagueFactory\", function($http){\n    var factory = {};\n\n    factory.createLeague = function(newLeagueInfo){\n        return $http.post(\"/createLeague\", newLeagueInfo)\n            .then(function(token){\n                return token;\n            }, function(error){\n                console.log(error);\n                return error;\n            });\n    };\n\n    factory.getLeague = function(leagueId){\n        return $http.get(\"/getLeague/\", {params: {_id: leagueId}})\n            .then(function(data){\n                return data;\n            }, function(error){\n                console.log(error);\n            });\n    };\n\n    factory.getAllLeagues = function(){\n        return $http.get(\"/getAllLeagues\")\n            .then(function(response){\n                return response.data;\n            }, function(error){\n                console.log(error);\n            });\n    };\n\n    factory.joinLeague = function(user){\n        return $http.patch(\"/joinLeague/\", user)\n            .then(function(response){\n                return response.data.token;\n            }, function(error){\n                console.log(error);\n            });\n    };\n\n    factory.deleteAllLeagues = function(){\n        return $http.post(\"/leaguesClearAll\")\n            .then(function(response){\n            }, function(error){\n                console.log(error);\n            });\n        // .success(function(data){\n        //     console.log(data);\n        // });\n    };\n\n    return factory;\n});","angular.module('UserFactory', []).factory('UserFactory', function ($http, $q) {\n  var factory = {};\n\n  factory.register = function (registerInfo, callback) {\n    $http.post(\"/register\", registerInfo)\n      .success(function (data) {\n      callback(data);\n      }, (error) => {\n        console.log(error);\n    });\n  };\n\n  factory.login = function (loginInfo) {\n    return $http.post(\"/login\", loginInfo)\n      .then(function (response) {\n        return response;\n      }, (error) => {\n        return error;\n      });\n  };\n\n  factory.deleteAllUsers = function (callback) {\n    $http.post(\"/deleteAllUsers\").success(function (data) {\n      console.log(data);\n      callback(data);\n    });\n  };\n\n  factory.getUserLeague = function (callback) {\n    $http.get(\"/getUserLeagues\").success(function (data) {\n      console.log(data);\n      callback(data);\n    });\n  };\n\n  return factory;\n});","angular.module('AuthenticationService', []).service('AuthenticationService', function ($window, $state, $rootScope, $location, $q, UserFactory) {\n  var service = {};\n\n  var saveToken = function (token) {\n    $window.localStorage['user-token'] = token;\n  };\n\n  var getToken = function () {\n    return $window.localStorage['user-token'];\n  };\n\n  service.isLoggedIn = function () {\n    var token = getToken();\n    var payload;\n\n    if (token) {\n      payload = token.split('.')[1];\n      payload = $window.atob(payload);\n      payload = JSON.parse(payload);\n\n      return payload.exp > Date.now() / 1000;\n    }else {\n      return false;\n    }\n  };\n\n  service.currentUser = function () {\n    if (service.isLoggedIn()) {\n      var token = getToken();\n      var payload = token.split('.')[1];\n\n      payload = $window.atob(payload);\n      payload = JSON.parse(payload);\n\n      return {\n        _id: payload._id,\n        userName: payload.userName,\n        firstName: payload.firstName,\n        email: payload.email,\n        leagues: payload.leagues\n      };\n    }\n  };\n\n  service.updateToken = function (token) {\n    $q.resolve($window.localStorage.removeItem('user-token'))\n      .then(function(){\n        saveToken(token);\n        return \"Done\";\n      }, function(error){\n        console.log(error);\n      });\n  };\n\n  service.register = function (user, callback) {\n    UserFactory.register(user, function (data) {\n      if (data.token) {\n        saveToken(data.token);\n        callback('Success');\n      }\n      if (data.message) {\n        callback(data.message);\n      }else {\n        callback('Unknown Error!');\n      }\n    });\n  };\n\n  service.login = function (user) {\n    return UserFactory.login(user)\n      .then(function (response) {\n        if (response.data.token) {\n          saveToken(response.data.token);\n          return 'Success';\n        } else {\n          if (response.status == 401) {\n            return \"Incorrect Username or Password!\";\n          }\n          else {\n            return \"Unknown Error!\"\n          }\n        }\n      }, function (err) {\n        console.log(err);\n      });\n  };\n\n  service.currentUserLogOut = function () {\n    $window.localStorage.clear();\n    $rootScope = $rootScope.$new(true);\n    $location.path(\"/login\");\n    console.log(\"Logout\");\n  };\n\n  service.deleteAllUsers = function () {\n    UserFactory.deleteAllUsers();\n    $window.localStorage.clear();\n    $rootScope = $rootScope.$new(true);\n    $location.path(\"/login\");\n  };\n  // service.currentUserLogOut();\n\n  return service;\n});\n","angular.module('DraftService', []).service('DraftService', function ($window, $state, $q, DraftFactory, AuthenticationService, LeagueService) {\n    var service = {};\n\n    var vm = this;\n\n    vm.currentUser = AuthenticationService.currentUser();\n\n    vm.isLoggedIn = AuthenticationService.isLoggedIn();\n\n    vm.currentLeague = LeagueService.currentLeague();\n\n    service.startDraft = function(draftPackage){\n        return DraftFactory.startDraft(draftPackage)\n            .then(function(reponse){\n                console.log(response);\n            }, function(error){\n                console.log(error);\n            });\n    };\n\n    service.isOnClock = function(){\n        if(vm.currentLeague.onClock === vm.currentUser._id){\n            return true;\n        }\n        else{\n            return false;\n        }\n    };\n\n    service.draftPlayer = function(draftPackage){\n        return DraftFactory.draftPlayer(draftPackage)\n            .then(function(response){\n                if(response.statusText === \"OK\"){\n                    return true;\n                }\n                else{\n                    return false;\n                }\n            }, function(error){\n                console.log(error);\n            });\n    };\n\n    service.undraftedPlayers = function () {\n\n    };\n\n    service.draftedPlayers = function () {\n\n    };\n\n    service.downloadPlayers = function(){\n        DraftFactory.downloadPlayers();\n    };\n\n    service.deleteAllChat = function(){\n        ChatFactory.deleteAllChat();\n    };\n\n    service.deleteAllDrafts = function(){\n        DraftFactory.deleteAllDrafts();\n    };\n\n    service.deleteAllPlayers = function(callback){\n        DraftFactory.deleteAllPlayers(function(data){\n            callback(data);\n        });\n    };\n\n    return service;\n});","angular.module(\"LeagueService\", []).service(\"LeagueService\", function($window, $state, $q, $location, LeagueFactory, ChatFactory, AuthenticationService){\n    var service = {};\n\n    var vm = this;\n\n    vm.currentUser = AuthenticationService.currentUser();\n    vm.isLoggedIn = AuthenticationService.isLoggedIn();\n\n    var saveCurrentLeagueId = function(leagueId){\n        $q.resolve($window.localStorage[\"current-league-id\"] = leagueId);\n    };\n\n    var currentLeagueId = function(){\n        if($window.localStorage[\"current-league-id\"]){\n            return $window.localStorage[\"current-league-id\"];\n        }\n        else{\n            return false;\n        }\n    };\n\n    var saveCurrentLeague = function(league){\n        if($window.localStorage[\"current-league\"]){\n            $window.localStorage.removeItem(\"current-league\");\n            $window.localStorage.setItem(\"current-league\", JSON.stringify(league));\n        }\n        else{\n            $window.localStorage.setItem(\"current-league\", JSON.stringify(league));\n        }\n    };\n\n    service.currentLeague = function(){\n        var theLeague = JSON.parse($window.localStorage.getItem(\"current-league\"));\n        return theLeague;\n    };\n\n    service.setCurrentLeagueId = function(leagueId){\n        if(leagueId){\n            return $q.when(saveCurrentLeagueId(leagueId));\n        }\n    };\n\n    service.getCurrentLeagueId = function(){\n        if(currentLeagueId){\n            return currentLeagueId;\n        }\n    };\n\n    service.getLeague = function(){\n        var theLeague = currentLeagueId();\n        return LeagueFactory.getLeague(theLeague)\n            .then(function(response){\n                $q.resolve(saveCurrentLeague(response.data))\n                    .then(function(){\n                        return \"Done\";\n                    }, function(error){\n                        console.log(error);\n                    });\n            }, function(error){\n                console.log(error);\n            });\n    };\n\n    service.createNewLeague = function (newLeagueInfo) {\n        $q.when(LeagueFactory.createLeague(newLeagueInfo))\n            .then(function(response){\n                $q.when(AuthenticationService.updateToken(response.data.token))\n                    .then(function(){\n                        currentUser = AuthenticationService.currentUser();\n                        $q.when(service.setCurrentLeagueId(currentUser.leagues[0]._id))\n                            .then(function(){\n                                $q.when(service.getLeague())\n                                    .then(function(response){\n                                        $location.path(\"/availablePlayers\");\n                                        return response;\n                                    }, function(error){\n                                        console.log(error);\n                                    });\n                            }, function(error){\n                                console.log(error);\n                            });\n                    }, function(error){\n                        console.log(error);\n                    });\n            }, function(error){\n                console.log(error);\n            });\n    };\n\n    service.joinLeague = function(leagueId){\n        currentUser = AuthenticationService.currentUser();\n        var user = {\n            \"userId\": currentUser._id,\n            \"leagueId\": leagueId\n        };\n        return LeagueFactory.joinLeague(user)\n            .then(function(updateToken){\n                $q.when(AuthenticationService.updateToken(updateToken))\n                    .then(function(){\n                        updatedCurrentUser = AuthenticationService.currentUser();\n                        $q.when(service.setCurrentLeagueId(updatedCurrentUser.leagues[0]._id))\n                            .then(function(){\n                                $q.when(service.getLeague())\n                                    .then(function(){\n                                        $location.path(\"/availablePlayers\");\n                                    }, function(error){\n                                        console.log(error);\n                                    });\n                            }, function(error){\n                                console.log(error);\n                            });\n                    }, function(error){\n                        console.log(error);\n                    });\n            }, function(error){\n                console.log(error);\n            });\n    };\n\n    service.getAllLeagues = function(){\n        currentUser = AuthenticationService.currentUser();\n        if(currentUser.leagues[0] === undefined){\n            return LeagueFactory.getAllLeagues()\n                .then(function(leagues){\n                    return leagues;\n                }, function(error){\n                    console.log(error);\n                });\n        }\n        else{\n            return LeagueFactory.getAllLeagues()\n                .then(function(leagues){\n                    for(var x in leagues){\n                        for(var y in currentUser.leagues){\n                            if(leagues[x]._id == currentUser.leagues[y]._id){\n                                leagues.splice(x, 1);\n                            }\n                        }\n                    }\n                    return leagues;\n                }, function(error){\n                    console.log(error);\n                });\n        }   \n    };\n\n    service.postMessage = function(message){\n        var theLeague = service.currentLeague();\n\n        var chatMessage = {\n            \"_id\": theLeague.chat._id,\n            \"userName\": vm.currentUser.firstName,\n            \"message\": message\n        };\n\n        ChatFactory.postMessage(chatMessage, function(result, err){\n            if(err){\n                console.log(err);\n            }\n            if(result){\n                console.log(result);\n            }\n        });\n    };\n\n    service.deleteAllLeagues = function () {\n        LeagueFactory.deleteAllLeagues();\n    };\n\n    service.deleteAllChat = function(){\n        ChatFactory.deleteAllChat();\n    };\n\n    return service;\n});"]}