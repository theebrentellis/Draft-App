{"version":3,"sources":["app.js","controllers/AppController.js","controllers/ChatController.js","controllers/DashboardController.js","controllers/LeagueController.js","controllers/PlayerController.js","controllers/UserController.js","factories/ChatFactory.js","factories/DraftFactory.js","factories/LeagueFactory.js","factories/UserFactory.js","services/AuthenticationService.js","services/DraftService.js","services/LeagueService.js"],"names":["DraftApp","angular","module","$stateProvider","$urlRouterProvider","otherwise","config","state","url","content","templateProvider","$templateCache","controller","views","header","get","controllerAs","authenticate","onStart","AuthService","injector","run","$transitions","$location","$state","$q","AuthenticationService","to","trans","isLoggedIn","transitionTo","$scope","DraftService","LeagueService","vm","this","then","response","error","console","log","currentUser","currentLeague","setCurrentLeague","leagueId","setCurrentLeagueId","getLeague","reload","deleteAllDBs","deleteAllPlayers","deleteAllUsers","deleteAllChat","deleteAllDrafts","downloadPlayers","data","path","deleteAllLeagues","currentUserLogOut","directive","element","attrs","bind","event","which","$apply","$eval","ngEnter","preventDefault","ChatFactory","messages","message","filterText","socket","io","connect","on","reverse","unshift","sendMessage","postMessage","result","err","window","alert","$view","$confirm","moveFocus","nextId","$","focus","$timeout","DraftFactory","available_players","allDraftedPlayers","setColorOnClock","team","onClock","_id","font-weight","getPlayers","position","startDraft","id","draftPackage","draftId","draft","draftOrder","draftPlayer","isOnClock","pick","checkBox","value","getDraftedPlayers","tab","setTab","tabId","isSet","userViewChange","view","loginView","registerView","registerInfo","email","userName","firstName","password","loginInfo","registerNew","register","login","status","onSignIn","googleUser","profile","getBasicProfile","getEmail","dismissError","factory","$http","callback","post","success","params","output","createLeague","newLeagueInfo","getAllLeagues","joinLeague","leaguePack","patch","getUserLeague","service","$window","$rootScope","UserFactory","tokenStorage","setToken","key","token","Promise","resolve","localStorage","setItem","getToken","getItem","removeToken","removeItem","payload","split","atob","JSON","parse","exp","Date","now","leagues","updateToken","user","reponse","clear","$new","statusText","undraftedPlayers","draftedPlayers","LeagueFactory","saveCurrentLeagueId","currentLeagueId","saveCurrentLeague","league","stringify","when","getCurrentLeagueId","theLeague","createNewLeague","code","user_id","league_code","undefined","x","y","splice","chatMessage","chat"],"mappings":"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","file":"app.js","sourcesContent":["let DraftApp = angular.module(\"DraftApp\", [\"ngRoute\", \"ngMessages\", \"ngAnimate\", \"ui.router\", \"ui.bootstrap\", \"angular-confirm\", \"AppController\", \"AuthenticationService\", \"ChatController\", \"DashboardController\", \"DraftService\", \"LeagueController\", \"LeagueService\", \"PlayerController\", \"UserController\", \"ChatFactory\", \"DraftFactory\", \"LeagueFactory\", \"UserFactory\"]);\n\nangular.module('DraftApp').config(function ($stateProvider, $urlRouterProvider) {\n\n    $urlRouterProvider.otherwise(\"/\");\n\n    $stateProvider\n        .state(\"index\", {\n            url: \"/\",\n            views: {\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('welcome.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        })\n        .state(\"login\", {\n            url: \"/login\",\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: \"vm\",\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('login.html');\n                    },\n                    controller: \"UserController\",\n                    controllerAs: \"vm\"\n                },\n            }\n        })\n        .state('register', {\n            url: \"/register\",\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: 'vm'\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('register.html');\n                    },\n                    controller: \"UserController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        })\n        .state(\"dashboard\", {\n            url: \"/dashboard\",\n            authenticate: true,\n            // resolve: () => {\n            //     AuthenticationService.currentUser();\n            // },\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: 'vm',\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('dashboard.html');\n                    },\n                    controller: \"DashboardController\",\n                    controllerAs: \"vm\",\n                }\n            }\n        })\n        .state('newLeague', {\n            url: \"/league/new\",\n            authenticate: true,\n            views: {\n                'header': {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: 'vm'\n                },\n                'content': {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('league/newLeague.html');\n                    },\n                    controller: \"LeagueController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        })\n        .state('joinLeague', {\n            url: \"/league/join\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: 'vm'\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('league/joinLeague.html');\n                    },\n                    controller: \"LeagueController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        })\n        // .state('league/{id}', {\n        //     url: \"/league/{id}\",\n        //     authenticate: true,\n        //     views: {\n        //         \"header\": {\n        //             templateProvider: ($templateCache) => {\n        //                 return $templateCache.get('app.html');\n        //             },\n        //             controller: \"AppController\",\n        //             controllerAs: 'vm'\n        //         },\n        //         \"content\": {\n        //             templateProvider: ($templateCache) => {\n        //                 return $templateCache.get('league/index.html');\n        //             },\n        //             controller: \"LeagueController\",\n        //             controllerAs: \"vm\"\n        //         }\n        //     }\n        // })\n        .state(\"settings\", {\n            url: \"/settings\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: 'vm',\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('settings.html');\n                    },\n                    controller: \"UserController\",\n                    controllerAs: \"vm\",\n                }\n            }\n        })\n        .state(\"commish\", {\n            url: \"/commish\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: \"vm\"\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('commish.html');\n                    },\n                    controller: \"LeagueController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        })\n        .state(\"availablePlayers\", {\n            url: \"/availablePlayers\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: \"vm\",\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('availablePlayers.html');\n                    },\n                    controller: \"PlayerController\",\n                    controllerAs: \"vm\",\n                }\n            }\n        })\n        .state(\"draftboard\", {\n            url: \"/draftboard\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: \"vm\"\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('draftBoard.html');\n                    },\n                    controller: \"PlayerController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        })\n        .state(\"chat\", {\n            url: \"/chat\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: \"vm\"\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('chat.html');\n                    },\n                    controller: \"ChatController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        });\n});\n\nangular.module('DraftApp').run(function ($transitions, $location, $state, $q, AuthenticationService) {\n    $transitions.onStart({ to: '*' }, function (trans) {\n        let AuthService = trans.injector().get('AuthenticationService');\n        if (trans.to().authenticate && !AuthService.isLoggedIn()) {\n            $state.transitionTo('login');\n        }\n    });\n});","angular.module('AppController', []).controller('AppController', function ($scope, $location, $q, $state, AuthenticationService, DraftService, LeagueService) {\n\n  let vm = this;\n  \n  vm.isLoggedIn = false;\n  let getLoginStatus = AuthenticationService.isLoggedIn();\n  getLoginStatus.then((response) => {\n    if (response == true) {\n      vm.isLoggedIn = true;\n    }\n    if (response == false) {\n      vm.isLoggedIn = false;\n    }\n  }, (error) => {\n    console.log(error);\n  });\n      \n  vm.currentUser = {};\n  let getCurrentUser = AuthenticationService.currentUser();\n  getCurrentUser.then((response) => {\n    vm.currentUser = response;\n  }, (error) => {\n    console.log(error);\n  });\n\n    vm.currentLeague = LeagueService.currentLeague();\n\n\n    //Sets A League and Returns League Info\n    vm.setCurrentLeague = function(leagueId){\n      return LeagueService.setCurrentLeagueId(leagueId)\n        .then(function(){\n          return LeagueService.getLeague()\n            .then(function(){\n              $state.reload();\n            }, function(error){\n              console.log(error);\n            });\n        }, function(error){\n          console.log(error);\n        });\n    };\n\n    //Dev Tools (Not For Production)\n    vm.deleteAllDBs = function(){\n      DraftService.deleteAllPlayers();\n      AuthenticationService.deleteAllUsers();\n      LeagueService.deleteAllChat();\n      DraftService.deleteAllDrafts();\n    };\n  \n    vm.downloadPlayers = function(){\n      DraftService.downloadPlayers(function(data){\n        console.log(data);\n      });\n    };\n  \n    vm.deleteAllPlayers = function(){\n      DraftService.deleteAllPlayers(function(data){\n        console.log(data);\n      });\n    };\n  \n    vm.deleteAllUsers = function(){\n      AuthenticationService.deleteAllUsers();\n      $location.path(\"/login\");\n    };\n  \n    vm.deleteAllChat = function(){\n      LeagueService.deleteAllChat();\n    };\n  \n    vm.deleteAllLeagues = function(){\n      LeagueService.deleteAllLeagues();\n    };\n  \n    vm.deleteAllDrafts = function(){\n      DraftService.deleteAllDrafts();\n    };\n  \n    vm.currentUserLogOut = function(){\n      AuthenticationService.currentUserLogOut();\n    };\n});","angular.module('ngEnter', []).directive('ngEnter', function ($scope, element, attrs) {\n\n    element.bind(\"keypress\", function (event) {\n        if (event.which === 13) {\n            $scope.$apply(function () {\n                $scope.$eval(attrs.ngEnter);\n            });\n            event.preventDefault();\n        }\n    });\n});\n\nangular.module('ChatController', []).controller('ChatController', function ($scope, AuthenticationService, LeagueService, ChatFactory) {\n\n    var vm = this;\n\n    vm.currentUser = AuthenticationService.currentUser();\n\n    vm.currentLeague = LeagueService.currentLeague();\n\n    vm.messages = [];\n\n    vm.message = \"\";\n    vm.filterText = \"\";\n\n    \n    var socket = io.connect();\n\n    socket.on(\"pastMessages\", function (data) {\n        $scope.$apply(function(){\n            vm.messages = data.reverse();\n        });\n    });\n\n    socket.on(\"receiveMessage\", function(data){\n        $scope.$apply(function(){\n            vm.messages.unshift(data);\n        });\n    });\n\n    vm.sendMessage = function () {\n        // var chatMessage = {\n        //     \"_id\": vm.currentLeague.chat._id,\n        //     \"userName\": vm.currentUser.firstName,\n        //     \"message\": vm.message\n        // };\n        LeagueService.postMessage(vm.message, function (result, err) {\n            if (err) {\n                window.alert(\"Error!\");\n            }\n            // else{\n            //     socket.emit(\"receiveMessage\", result);\n            //     vm.message = \"\";\n            // }\n        });\n    };\n});","angular.module('DashboardController', []).controller('DashboardController', function ($scope, $q, $location, $view, $state, AuthenticationService) {\n    let vm = this;\n\n    vm.currentUser = {};\n    let getCurrentUser = AuthenticationService.currentUser();\n    getCurrentUser.then((response) => {\n        vm.currentUser = response;\n    }, (error) => {\n        console.log(error);\n    });\n\n});","angular.module('LeagueController', []).controller('LeagueController', function ($scope, $q, $view, $confirm, $location, $state, AuthenticationService, LeagueService) {\n\n    let vm = this;\n\n    vm.currentUser = {};\n    let getCurrentUser = AuthenticationService.currentUser();\n    getCurrentUser.then((response) => {\n        console.log(response);\n        vm.currentUser = response;\n    }, (error) => {\n        console.log(error);\n    });\n    \n    // vm.currentLeague = {};\n    // let getCurrentLeague = LeagueService.currentLeague();\n    // getCurrentLeague.then((response) => {\n    //     vm.currentLeague = reponse;\n    // }, (error) => {\n    //     console.log(error);\n    //     });\n    \n    vm.moveFocus = (nextId) => {\n        $('#' + nextId).focus();\n    };\n    // vm.createNewLeague = function () {\n    //     var newLeagueInfo = {\n    //         \"leagueName\": vm.newLeague.leagueName,\n    //         \"leagueSize\": vm.newLeague.leagueSize,\n    //         \"user_id\": vm.currentUser._id\n    //     };\n    //     return LeagueService.createNewLeague(newLeagueInfo)\n    //         .then((response) => {\n    //             $state.transitionTo('dashboard');\n    //         }, (error) => {\n    //             console.log(error);\n    //         });\n    // };\n\n    // vm.joinLeague = function () {\n    //     let code = \"\";\n    //     for (var x in vm.data) {\n    //         code += vm.data[x];\n    //     }\n    //     return LeagueService.joinLeague(code)\n    //         .then((response) => {\n    //             $state.transitionTo('dashboard');\n    //         }, (error) => {\n    //             console.log(error);\n    //         });\n    // };\n\n});","angular.module('PlayerController', []).controller('PlayerController', function ($scope, $location, $confirm, $timeout, $q, DraftFactory, AuthenticationService, DraftService, LeagueService) {\n\n  var vm = this;\n\n  vm.available_players = [];\n\n  vm.allDraftedPlayers = [];\n\n  vm.message = \"\";\n\n  vm.currentUser = AuthenticationService.currentUser();\n\n  vm.currentLeague = LeagueService.currentLeague();\n\n  vm.setColorOnClock = function(team){\n      if(vm.currentLeague.onClock === team._id){\n        return {\"font-weight\": \"bold\"};\n      }\n  };\n\n  vm.getPlayers = function (position) {\n    DraftFactory.getPlayers(position, function (data) {\n      vm.available_players = data;\n    });\n  };\n\n  vm.startDraft = function(id){\n    var draftPackage = {\n      draftId: vm.currentLeague.draft._id,\n      draftOrder: vm.currentLeague.draftOrder\n\n    };\n    return DraftService.startDraft(draftPackage)\n      .then(function(response){\n        console.log(response);\n      }, function(error){\n        console.log(error);\n      });\n  };\n\n  vm.draftPlayer = function (id) {\n    if(DraftService.isOnClock() === true){\n\n      var draftPackage = {\n        draftId: vm.currentLeague.draft._id,\n        leagueId: vm.currentLeague._id,\n        team: vm.currentUser._id,\n        pick: id,\n      };\n      \n      return DraftService.draftPlayer(draftPackage)\n        .then(function(response){\n          console.log(response);\n          if(response === true){\n            $location.path(\"/draftBoard\");\n          }\n          if(response === false){\n            console.log(\"Error in PlayerControiller draftPlayer\");\n          }\n        }, function(error){\n          console.log(error);\n        });\n    }\n    if(DraftService.isOnClock() === false){\n      vm.message = \"You Are Not On The Clock!\";\n      vm.checkBox.value = false;\n      $timeout(function(){\n        vm.message = false;\n      }, 5000);\n    }\n  };\n\n  var getDraftedPlayers = function () {\n    DraftFactory.getDraftedPlayers(function (data) {\n      vm.allDraftedPlayers = data;\n    });\n  };\n  getDraftedPlayers();\n});\n","angular.module('UserController', []).controller('UserController', function ($scope, $q, $view, $location, $state, AuthenticationService, LeagueService) {\n    let vm = this;\n\n    vm.currentUser = {};\n    let getCurrentUser = AuthenticationService.currentUser();\n    getCurrentUser.then((response) => {\n        vm.currentUser = response;\n    }, (error) => {\n        console.log(error);\n    });\n\n    vm.currentLeague = LeagueService.currentLeague();\n\n    vm.message = \"\";\n\n    vm.tab = 1;\n\n    vm.setTab = function (tabId) {\n        vm.tab = tabId;\n    };\n\n    vm.isSet = function (tabId) {\n        return vm.tab === tabId;\n    };\n\n    vm.userViewChange = function (view) {\n        if (view === true) {\n            vm.loginView = false;\n            vm.registerView = true;\n        }\n        else {\n            vm.loginView = true;\n            vm.registerView = false;\n        }\n    };\n\n    vm.registerInfo = {\n        email: \"\",\n        userName: \"\",\n        firstName: \"\",\n        password: \"\"\n    };\n\n    vm.loginInfo = {\n        email: \"\",\n        password: \"\"\n    };\n\n    vm.registerNew = function () {\n        return AuthenticationService.register(vm.registerInfo)\n            .then((response) => {\n                $state.transitionTo('dashboard');\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    vm.login = function () {\n        return AuthenticationService.login(vm.loginInfo)\n            .then(function (response) {\n                if (response == \"Token Set!\") {\n                    $state.transitionTo('dashboard');\n                }\n                else {\n                    vm.message = response;\n                }\n            }, function (error) {\n                vm.message = \"Error: \" + error.status;\n                console.log(error);\n            });\n    };\n\n    vm.onSignIn = (googleUser) => {\n        console.log(\"Fired onSign In\");\n        if (googleUser) {\n            var profile = googleUser.getBasicProfile();\n            console.log(\"Email: \" + profile.getEmail());\n        }\n    };\n    vm.dismissError = () => {\n        console.log(\"Dismiss\");\n        vm.message = \"\";\n    }\n\n});\n\n","angular.module(\"ChatFactory\", []).factory(\"ChatFactory\", function($http){\n\n    var factory = {};\n\n    factory.postMessage = function(message, callback){\n        $http.post(\"/message\", message).success(function(data, status){\n            callback(data, false);\n        })\n        .error(function(data, status){\n            callback(data, true);\n        });\n    };\n\n    factory.deleteAllChat = function(){\n        $http.post(\"/deleteAllChat\").success(function(data){\n            console.log(data);\n        });\n    };\n\n    return factory;\n});","angular.module(\"DraftFactory\", []).factory(\"DraftFactory\", function($http, $q){\n    var factory = {};\n\n    factory.downloadPlayers = function(){\n        $http.post(\"/downloadPlayers\").success(function(data){\n            console.log(data);\n        });\n    };\n\n    factory.getPlayers = function(position, callback){\n        $http.get(\"/getPlayers/\", {params: {position: position}}).success(function(output){\n            callback(output);\n        });\n    };\n\n    factory.deleteAllPlayers = function(callback){\n        $http.post(\"/deleteAllPlayers\").success(function(data){\n            callback(data);\n        });\n    };\n\n    factory.startDraft = function(draftPackage){\n        return $http.post(\"/startDraft\", draftPackage)\n            .then(function(response){\n                console.log(response);\n            }, function(error){\n                console.log(error);\n            });\n    };\n\n    factory.draftPlayer = function(draftPackage){\n        return $http.post(\"/draftPlayer\", draftPackage)\n            .then(function(response){\n                return response;\n            }, function(error){\n                console.log(error);\n            });\n    };\n\n    factory.getDraftedPlayers = function(callback){\n        $http.get(\"/getDraftedPlayers\").success(function(output){\n            callback(output);\n        });\n    };\n\n    factory.deleteAllDrafts = function(){\n        return $http.post(\"/deleteAllDrafts\");\n    };\n\n    return factory;\n});","angular.module(\"LeagueFactory\", []).factory(\"LeagueFactory\", function($http){\n    var factory = {};\n\n    factory.createLeague = function (newLeagueInfo) {\n        return $http.post(\"/createLeague\", newLeagueInfo)\n            .then(function(response){\n                console.log(response);\n                return response;\n            }, function(error){\n                console.log(error);\n                return error;\n            });\n    };\n\n    factory.getLeague = function(leagueId){\n        return $http.get(\"/getLeague/\", {params: {_id: leagueId}})\n            .then(function(data){\n                return data;\n            }, function(error){\n                console.log(error);\n            });\n    };\n\n    factory.getAllLeagues = function(){\n        return $http.get(\"/getAllLeagues\")\n            .then(function(response){\n                return response.data;\n            }, function(error){\n                console.log(error);\n            });\n    };\n\n    factory.joinLeague = function(leaguePack){\n        return $http.patch(\"/joinLeague/\", leaguePack)\n            .then(function (response) {\n                return response;\n            }, function(error){\n                console.log(error);\n            });\n    };\n\n    factory.deleteAllLeagues = function(){\n        return $http.post(\"/leaguesClearAll\")\n            .then(function(response){\n            }, function(error){\n                console.log(error);\n            });\n        // .success(function(data){\n        //     console.log(data);\n        // });\n    };\n\n    return factory;\n});","angular.module('UserFactory', []).factory('UserFactory', function ($http, $q) {\n  var factory = {};\n\n  factory.register = function (registerInfo) {\n    return $http.post(\"/register\", registerInfo)\n      .then((response) => {\n        console.log(response);\n        return response;\n      }, (error) => {\n        console.log(error);\n        return error;\n    });\n  };\n\n  factory.login = function (loginInfo) {\n    return $http.post(\"/login\", loginInfo)\n      .then(function (response) {\n        return response;\n      }, (error) => {\n        return error;\n      });\n  };\n\n  factory.deleteAllUsers = function (callback) {\n    $http.post(\"/deleteAllUsers\").success(function (data) {\n      console.log(data);\n      callback(data);\n    });\n  };\n\n  factory.getUserLeague = function (callback) {\n    $http.get(\"/getUserLeagues\").success(function (data) {\n      console.log(data);\n      callback(data);\n    });\n  };\n\n  return factory;\n});","angular.module('AuthenticationService', []).service('AuthenticationService', function ($window, $state, $rootScope, $q, UserFactory) {\n  var service = {};\n\n  const tokenStorage = {\n    setToken: (key, token) => {\n      return Promise.resolve().then(() => {\n        $window.localStorage.setItem(key, token);\n      });\n    },\n    getToken: (key) => {\n      return Promise.resolve().then(() => {\n        return $window.localStorage.getItem(key);\n      });\n    },\n    removeToken: (key) => {\n      return Promise.resolve().then(() => {\n        $window.localStorage.removeItem(key);\n      });\n    }\n  }\n\n  service.isLoggedIn = () => {\n    return tokenStorage.getToken('user-token')\n      .then((token) => {\n        if (token) {\n          let payload = token.split('.')[1];\n          payload = $window.atob(payload);\n          payload = JSON.parse(payload);\n          return payload.exp > Date.now() / 1000;\n        }\n        else {\n          return false;\n        }\n      }, (error) => {\n        console.log(error);\n      });\n  };\n\n  service.currentUser = function () {\n    return service.isLoggedIn()\n      .then((response) => {\n        if (response){\n          return tokenStorage.getToken('user-token')\n            .then((token) => {\n              let payload = token.split('.')[1];\n              payload = $window.atob(payload);\n              payload = JSON.parse(payload);\n\n              return {\n                _id: payload._id,\n                userName: payload.userName,\n                firstName: payload.firstName,\n                email: payload.email,\n                leagues: payload.leagues\n              };\n            }, (error) => {\n              console.log(error);\n            });\n        }\n      }, (error) => {\n        console.log(error);\n      });\n  };\n\n  service.updateToken = function (token) {\n    return tokenStorage.removeToken('user-token')\n      .then(() => {\n        return tokenStorage.setToken('user-token', token)\n          .then(() => {\n            return \"Token Set!\";\n          }, (error) => {\n            console.log(error);\n          })\n      }, (error) => {\n        console.log(error);\n      });\n  };\n\n  service.register = function (user, callback) {\n    return UserFactory.register(user)\n      .then((response) => {\n        if (response.data.token) {\n          return tokenStorage.setToken('user-token', response.data.token)\n            .then(() => {\n              return \"Token Set!\";\n            });\n        }\n        else if (response.message) {\n          return reponse.message;\n        }\n        // else {\n        //   callback('Unknown Error!');\n        // }\n      }, (error) => {\n        console.log(error);\n      });\n  };\n\n  service.login = function (user) {\n    return UserFactory.login(user)\n      .then(function (response) {\n        if (response.data.token) {\n          return tokenStorage.setToken('user-token', response.data.token)\n            .then(() => {\n              return \"Token Set!\"\n            }, (error) => {\n              console.log(error);\n            });\n        } else {\n          if (response.status == 401) {\n            return \"Incorrect Username or Password!\";\n          }\n          else {\n            return \"Unknown Error!\"\n          }\n        }\n      }, function (err) {\n        console.log(err);\n      });\n  };\n\n  service.currentUserLogOut = function () {\n    $window.localStorage.clear();\n    $rootScope = $rootScope.$new(true);\n    $location.path(\"/login\");\n    console.log(\"Logout\");\n  };\n\n  service.deleteAllUsers = function () {\n    UserFactory.deleteAllUsers();\n    $window.localStorage.clear();\n    $rootScope = $rootScope.$new(true);\n    $location.path(\"/login\");\n  };\n\n  return service;\n});\n","angular.module('DraftService', []).service('DraftService', function ($window, $state, $q, DraftFactory, AuthenticationService, LeagueService) {\n    var service = {};\n\n    var vm = this;\n\n    vm.currentUser = AuthenticationService.currentUser();\n\n    vm.isLoggedIn = AuthenticationService.isLoggedIn();\n\n    vm.currentLeague = LeagueService.currentLeague();\n\n    service.startDraft = function(draftPackage){\n        return DraftFactory.startDraft(draftPackage)\n            .then(function(reponse){\n                console.log(response);\n            }, function(error){\n                console.log(error);\n            });\n    };\n\n    service.isOnClock = function(){\n        if(vm.currentLeague.onClock === vm.currentUser._id){\n            return true;\n        }\n        else{\n            return false;\n        }\n    };\n\n    service.draftPlayer = function(draftPackage){\n        return DraftFactory.draftPlayer(draftPackage)\n            .then(function(response){\n                if(response.statusText === \"OK\"){\n                    return true;\n                }\n                else{\n                    return false;\n                }\n            }, function(error){\n                console.log(error);\n            });\n    };\n\n    service.undraftedPlayers = function () {\n\n    };\n\n    service.draftedPlayers = function () {\n\n    };\n\n    service.downloadPlayers = function(){\n        DraftFactory.downloadPlayers();\n    };\n\n    service.deleteAllChat = function(){\n        ChatFactory.deleteAllChat();\n    };\n\n    service.deleteAllDrafts = function(){\n        DraftFactory.deleteAllDrafts();\n    };\n\n    service.deleteAllPlayers = function(callback){\n        DraftFactory.deleteAllPlayers(function(data){\n            callback(data);\n        });\n    };\n\n    return service;\n});","angular.module(\"LeagueService\", []).service(\"LeagueService\", function ($window, $state, $q, $location, LeagueFactory, ChatFactory, AuthenticationService) {\n    var service = {};\n\n    var vm = this;\n\n    vm.currentUser = {};\n    let getCurrentUser = AuthenticationService.currentUser();\n    getCurrentUser.then((response) => {\n        vm.currentUser = response;\n    }, (error) => {\n        console.log(error);\n    });\n    vm.isLoggedIn = AuthenticationService.isLoggedIn();\n\n    var saveCurrentLeagueId = function (leagueId) {\n        $q.resolve($window.localStorage[\"current-league-id\"] = leagueId);\n    };\n\n    var currentLeagueId = function () {\n        if ($window.localStorage[\"current-league-id\"]) {\n            return $window.localStorage[\"current-league-id\"];\n        }\n        else {\n            return false;\n        }\n    };\n\n    var saveCurrentLeague = function (league) {\n        if ($window.localStorage[\"current-league\"]) {\n            $window.localStorage.removeItem(\"current-league\");\n            $window.localStorage.setItem(\"current-league\", JSON.stringify(league));\n        }\n        else {\n            $window.localStorage.setItem(\"current-league\", JSON.stringify(league));\n        }\n    };\n\n    service.currentLeague = function () {\n        var theLeague = JSON.parse($window.localStorage.getItem(\"current-league\"));\n        return theLeague;\n    };\n\n    service.setCurrentLeagueId = function (leagueId) {\n        if (leagueId) {\n            return $q.when(saveCurrentLeagueId(leagueId));\n        }\n    };\n\n    service.getCurrentLeagueId = function () {\n        if (currentLeagueId) {\n            return currentLeagueId;\n        }\n    };\n\n    service.getLeague = function () {\n        var theLeague = currentLeagueId();\n        return LeagueFactory.getLeague(theLeague)\n            .then(function (response) {\n                $q.resolve(saveCurrentLeague(response.data))\n                    .then(function () {\n                        return \"Done\";\n                    }, function (error) {\n                        console.log(error);\n                    });\n            }, function (error) {\n                console.log(error);\n            });\n    };\n\n    service.createNewLeague = function (newLeagueInfo) {\n        return LeagueFactory.createLeague(newLeagueInfo)\n            .then(function (response) {\n                console.log(response);\n                $q.when(AuthenticationService.updateToken(response.data.token))\n                    .then(function () {\n                        $state.transitionTo('dashboard');\n                        // currentUser = AuthenticationService.currentUser();\n                        // $q.when(service.setCurrentLeagueId(currentUser.leagues[0]._id))\n                        //     .then(function(){\n                        //         $q.when(service.getLeague())\n                        //             .then(function(response){\n                        //                 $location.path(\"/availablePlayers\");\n                        //                 return response;\n                        //             }, function(error){\n                        //                 console.log(error);\n                        //             });\n                        //     }, function(error){\n                        //         console.log(error);\n                        //     });\n                    }, function (error) {\n                        console.log(error);\n                    });\n            }, function (error) {\n                console.log(error);\n            });\n    };\n\n    service.joinLeague = function (code) {\n        let leaguePack = {\n            \"user_id\": vm.currentUser._id,\n            \"league_code\": code\n        };\n        return LeagueFactory.joinLeague(leaguePack)\n            .then((response) => {\n                console.log(response);\n                if (response.data.token) {\n                    return AuthenticationService.updateToken(response.data.token)\n                        .then(() => {\n                            return \"League Joined\";\n                        }, (error) => {\n                            console.log(error);\n                        });\n                }\n                else {\n                    return reponse.message;\n                }\n            }, function (error) {\n                console.log(error);\n            });\n    };\n\n    service.getAllLeagues = function () {\n        currentUser = AuthenticationService.currentUser();\n        if (currentUser.leagues[0] === undefined) {\n            return LeagueFactory.getAllLeagues()\n                .then(function (leagues) {\n                    return leagues;\n                }, function (error) {\n                    console.log(error);\n                });\n        }\n        else {\n            return LeagueFactory.getAllLeagues()\n                .then(function (leagues) {\n                    for (var x in leagues) {\n                        for (var y in currentUser.leagues) {\n                            if (leagues[x]._id == currentUser.leagues[y]._id) {\n                                leagues.splice(x, 1);\n                            }\n                        }\n                    }\n                    return leagues;\n                }, function (error) {\n                    console.log(error);\n                });\n        }\n    };\n\n    service.postMessage = function (message) {\n        var theLeague = service.currentLeague();\n\n        var chatMessage = {\n            \"_id\": theLeague.chat._id,\n            \"userName\": vm.currentUser.firstName,\n            \"message\": message\n        };\n\n        ChatFactory.postMessage(chatMessage, function (result, err) {\n            if (err) {\n                console.log(err);\n            }\n            if (result) {\n                console.log(result);\n            }\n        });\n    };\n\n    service.deleteAllLeagues = function () {\n        LeagueFactory.deleteAllLeagues();\n    };\n\n    service.deleteAllChat = function () {\n        ChatFactory.deleteAllChat();\n    };\n\n    return service;\n});"]}