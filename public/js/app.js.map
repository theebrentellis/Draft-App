{"version":3,"sources":["app.js","controllers/AppController.js","controllers/ChatController.js","controllers/DashboardController.js","controllers/LeagueController.js","controllers/PlayerController.js","controllers/UserController.js","factories/ChatFactory.js","factories/DraftFactory.js","factories/LeagueFactory.js","factories/UserFactory.js","services/AuthenticationService.js","services/DraftService.js","services/LeagueService.js"],"names":["DraftApp","angular","module","$stateProvider","$urlRouterProvider","otherwise","config","state","url","content","templateProvider","$templateCache","controller","views","header","get","controllerAs","authenticate","run","onStart","trans","to","transitionTo","$location","$state","$q","AuthenticationService","$transitions","vm","AuthService","injector","isLoggedIn","$scope","DraftService","LeagueService","this","then","response","error","console","log","currentUser","setCurrentLeague","leagueId","setCurrentLeagueId","getLeague","reload","deleteAllDBs","deleteAllPlayers","deleteAllUsers","deleteAllChat","deleteAllDrafts","downloadPlayers","data","path","deleteAllLeagues","currentUserLogOut","directive","element","attrs","bind","event","which","$apply","$eval","ngEnter","preventDefault","ChatFactory","currentLeague","messages","message","filterText","socket","io","connect","on","reverse","unshift","sendMessage","postMessage","result","err","window","alert","$view","$rootScope","$uibModal","$confirm","$document","league","isCommish","_id","commish_id","createNewLeague","newLeagueInfo","leagueName","newLeague","leagueSize","user_id","joinLeague","code","x","leaguePack","league_code","moveFocus","nextId","$","focus","newMessage","modalInstance","open","animation","size","templateUrl","scope","backdrop","messagePack","leagueID","userID","newLeagueMessage","cancel","dismiss","dismissError","$timeout","DraftFactory","available_players","allDraftedPlayers","setColorOnClock","team","onClock","font-weight","getPlayers","position","startDraft","id","draftPackage","draftId","draft","draftOrder","draftPlayer","isOnClock","pick","checkBox","value","getDraftedPlayers","tab","setTab","tabId","isSet","registerInfo","email","userName","firstName","password","loginInfo","registerNew","register","login","status","onSignIn","googleUser","profile","getBasicProfile","getEmail","factory","$http","callback","post","success","params","output","createLeague","patch","service","$window","UserFactory","tokenStorage","setToken","key","token","Promise","resolve","localStorage","setItem","getToken","getItem","removeToken","removeItem","payload","split","atob","JSON","parse","exp","Date","now","leagues","updateToken","user","reponse","clear","$new","statusText","undraftedPlayers","draftedPlayers","$stateParams","LeagueFactory","joinPac"],"mappings":"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","file":"app.js","sourcesContent":["let DraftApp = angular.module(\"DraftApp\", [\"ngRoute\", \"ngMessages\", \"ngAnimate\", \"ui.router\", \"ui.bootstrap\", \"angular-confirm\", \"AppController\", \"AuthenticationService\", \"ChatController\", \"DashboardController\", \"DraftService\", \"LeagueController\", \"LeagueService\", \"PlayerController\", \"UserController\", \"ChatFactory\", \"DraftFactory\", \"LeagueFactory\", \"UserFactory\"]);\n\nangular.module('DraftApp').config(function ($stateProvider, $urlRouterProvider) {\n\n    $urlRouterProvider.otherwise(\"/\");\n\n    $stateProvider\n        .state(\"index\", {\n            url: \"/\",\n            views: {\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('welcome.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        })\n        .state(\"login\", {\n            url: \"/login\",\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: \"vm\",\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('auth/login.html');\n                    },\n                    controller: \"UserController\",\n                    controllerAs: \"vm\"\n                },\n            }\n        })\n        .state('register', {\n            url: \"/register\",\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: 'vm'\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('auth/register.html');\n                    },\n                    controller: \"UserController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        })\n        .state(\"dashboard\", {\n            url: \"/dashboard\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: 'vm',\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('dashboard.html');\n                    },\n                    controller: \"DashboardController\",\n                    controllerAs: \"vm\",\n                }\n            }\n        })\n        .state('newLeague', {\n            url: \"/league/new\",\n            authenticate: true,\n            views: {\n                'header': {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: 'vm'\n                },\n                'content': {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('league/league.new.html');\n                    },\n                    controller: \"LeagueController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        })\n        .state('joinLeague', {\n            url: \"/league/join\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: 'vm'\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('league/league.join.html');\n                    },\n                    controller: \"LeagueController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        })\n        .state('league', {\n            url: \"/league/:leagueID/index\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: 'vm'\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('league/league.index.html');\n                    },\n                    controller: \"LeagueController\",\n                    controllerAs: \"vm\",\n                    // resolve: {\n                    //     league: (LeagueService, $stateParams) => {\n                    //         console.log($stateParams)\n                    //         // let theLeague = LeagueService.getLeague();\n                    //         // theLeague.then((response) => {\n                                \n                    //         // }, (error) => {\n                    //         //     console.log(error);\n                    //         // });\n                    //     }\n                    // }\n                }\n            }\n        })\n        .state(\"settings\", {\n            url: \"/settings\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: 'vm',\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('auth/settings.html');\n                    },\n                    controller: \"UserController\",\n                    controllerAs: \"vm\",\n                }\n            }\n        })\n        .state(\"commish\", {\n            url: \"/commish\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: \"vm\"\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('commish.html');\n                    },\n                    controller: \"LeagueController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        })\n        .state(\"availablePlayers\", {\n            url: \"/availablePlayers\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: \"vm\",\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('availablePlayers.html');\n                    },\n                    controller: \"PlayerController\",\n                    controllerAs: \"vm\",\n                }\n            }\n        })\n        .state(\"draftboard\", {\n            url: \"/draftboard\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: \"vm\"\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('draftBoard.html');\n                    },\n                    controller: \"PlayerController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        })\n        .state(\"chat\", {\n            url: \"/chat\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: \"vm\"\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('chat.html');\n                    },\n                    controller: \"ChatController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        });\n});\n\nangular.module('DraftApp').run(function ($transitions, $location, $state, $q, AuthenticationService) {\n    $transitions.onStart({ to: '*' }, function (trans) {\n        let AuthService = trans.injector().get('AuthenticationService');\n        if (trans.to().authenticate && !AuthService.isLoggedIn()) {\n            $state.transitionTo('login');\n        }\n    });\n});","angular.module('AppController', []).controller('AppController', function ($scope, $location, $q, $state, AuthenticationService, DraftService, LeagueService) {\n\n  let vm = this;\n  \n  vm.isLoggedIn = false;\n  let getLoginStatus = AuthenticationService.isLoggedIn();\n  getLoginStatus.then((response) => {\n    if (response == true) {\n      vm.isLoggedIn = true;\n    }\n    if (response == false) {\n      vm.isLoggedIn = false;\n    }\n  }, (error) => {\n    console.log(error);\n  });\n      \n  vm.currentUser = {};\n  let getCurrentUser = AuthenticationService.currentUser();\n  getCurrentUser.then((response) => {\n    vm.currentUser = response;\n  }, (error) => {\n    console.log(error);\n  });\n\n    // vm.currentLeague = LeagueService.currentLeague();\n\n\n    //Sets A League and Returns League Info\n    vm.setCurrentLeague = function(leagueId){\n      return LeagueService.setCurrentLeagueId(leagueId)\n        .then(function(){\n          return LeagueService.getLeague()\n            .then(function(){\n              $state.reload();\n            }, function(error){\n              console.log(error);\n            });\n        }, function(error){\n          console.log(error);\n        });\n    };\n\n    //Dev Tools (Not For Production)\n    vm.deleteAllDBs = function(){\n      DraftService.deleteAllPlayers();\n      AuthenticationService.deleteAllUsers();\n      LeagueService.deleteAllChat();\n      DraftService.deleteAllDrafts();\n    };\n  \n    vm.downloadPlayers = function(){\n      DraftService.downloadPlayers(function(data){\n        console.log(data);\n      });\n    };\n  \n    vm.deleteAllPlayers = function(){\n      DraftService.deleteAllPlayers(function(data){\n        console.log(data);\n      });\n    };\n  \n    vm.deleteAllUsers = function(){\n      AuthenticationService.deleteAllUsers();\n      $location.path(\"/login\");\n    };\n  \n    vm.deleteAllChat = function(){\n      LeagueService.deleteAllChat();\n    };\n  \n    vm.deleteAllLeagues = function(){\n      LeagueService.deleteAllLeagues();\n    };\n  \n    vm.deleteAllDrafts = function(){\n      DraftService.deleteAllDrafts();\n    };\n  \n    vm.currentUserLogOut = function(){\n      AuthenticationService.currentUserLogOut();\n    };\n});","angular.module('ngEnter', []).directive('ngEnter', function ($scope, element, attrs) {\n\n    element.bind(\"keypress\", function (event) {\n        if (event.which === 13) {\n            $scope.$apply(function () {\n                $scope.$eval(attrs.ngEnter);\n            });\n            event.preventDefault();\n        }\n    });\n});\n\nangular.module('ChatController', []).controller('ChatController', function ($scope, AuthenticationService, LeagueService, ChatFactory) {\n\n    var vm = this;\n\n    vm.currentUser = AuthenticationService.currentUser();\n\n    vm.currentLeague = LeagueService.currentLeague();\n\n    vm.messages = [];\n\n    vm.message = \"\";\n    vm.filterText = \"\";\n\n    \n    var socket = io.connect();\n\n    socket.on(\"pastMessages\", function (data) {\n        $scope.$apply(function(){\n            vm.messages = data.reverse();\n        });\n    });\n\n    socket.on(\"receiveMessage\", function(data){\n        $scope.$apply(function(){\n            vm.messages.unshift(data);\n        });\n    });\n\n    vm.sendMessage = function () {\n        // var chatMessage = {\n        //     \"_id\": vm.currentLeague.chat._id,\n        //     \"userName\": vm.currentUser.firstName,\n        //     \"message\": vm.message\n        // };\n        LeagueService.postMessage(vm.message, function (result, err) {\n            if (err) {\n                window.alert(\"Error!\");\n            }\n            // else{\n            //     socket.emit(\"receiveMessage\", result);\n            //     vm.message = \"\";\n            // }\n        });\n    };\n});","angular.module('DashboardController', []).controller('DashboardController', function ($scope, $q, $location, $view, $state, AuthenticationService) {\n    let vm = this;\n\n    vm.currentUser = {};\n    let getCurrentUser = AuthenticationService.currentUser();\n    getCurrentUser.then((response) => {\n        vm.currentUser = response;\n    }, (error) => {\n        console.log(error);\n    });\n\n});","angular.module('LeagueController', []).controller('LeagueController', function ($rootScope, $scope, $q, $view, $uibModal, $confirm, $location, $state, $document, AuthenticationService, LeagueService) {\n\n    let vm = this;\n\n    vm.message = \"\";\n\n    //Current User\n    vm.currentUser = {};\n    let getCurrentUser = AuthenticationService.currentUser();\n    getCurrentUser.then((response) => {\n        vm.currentUser = response;\n    }, (error) => {\n        console.log(error);\n    });\n\n    //Current League\n    vm.league = {};\n    let getLeague = LeagueService.getLeague();\n    getLeague.then((response) => {\n        vm.league = response;\n    }, (error) => {\n        console.log(error);\n    });\n\n    //Commish Auth\n    vm.isCommish = () => {\n        if (vm.currentUser._id == vm.league.commish_id[0]) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    },\n\n    //Create New League\n    vm.createNewLeague = () => {\n        let newLeagueInfo = {\n            \"leagueName\": vm.newLeague.leagueName,\n            \"leagueSize\": vm.newLeague.leagueSize,\n            \"user_id\": vm.currentUser._id\n        };\n\n        return LeagueService.createNewLeague(newLeagueInfo)\n            .then((response) => {\n                $state.transitionTo('dashboard');\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    //Join League\n    vm.joinLeague = function () {\n        let code = \"\";\n        for (var x in vm.data) {\n            code += vm.data[x];\n        }\n        let leaguePack = {\n            \"user_id\": vm.currentUser._id,\n            \"league_code\": code,\n        };\n        return LeagueService.joinLeague(leaguePack)\n            .then((response) => {\n                if (response == \"League Joined\") {\n                    $state.transitionTo('dashboard');\n                }\n                else {\n                    vm.message = response;\n                }\n\n            }, (error) => {\n                console.log(error);\n            });\n    };\n    vm.moveFocus = (nextId) => {\n        $('#' + nextId).focus();\n    };\n\n    //New League Message\n    vm.newMessage = () => {\n        $scope.modalInstance = $uibModal.open({\n            animation: true,\n            size: \"lg\",\n            templateUrl: 'newMessageModal.html',\n            controller: 'LeagueController',\n            controllerAs: 'vm',\n            scope: $scope,\n            backdrop: \"static\",\n        });\n    }\n    vm.sendMessage = () => {\n        let messagePack = {\n            \"leagueID\": vm.league._id,\n            \"userID\": vm.currentUser._id,\n            \"message\": vm.newLeagueMessage\n        };\n        \n        return LeagueService.newLeagueMessage(messagePack)\n            .then((response) => {\n                console.log(response);\n            }, (error) => {\n                console.log(error);\n            });\n    }\n    vm.cancel = () => {\n        $scope.modalInstance.dismiss('cancel');\n    }\n    vm.dismissError = () => {\n        vm.message = \"\";\n    }\n});","angular.module('PlayerController', []).controller('PlayerController', function ($scope, $location, $confirm, $timeout, $q, DraftFactory, AuthenticationService, DraftService, LeagueService) {\n\n  var vm = this;\n\n  vm.available_players = [];\n\n  vm.allDraftedPlayers = [];\n\n  vm.message = \"\";\n\n  vm.currentUser = AuthenticationService.currentUser();\n\n  vm.currentLeague = LeagueService.currentLeague();\n\n  vm.setColorOnClock = function(team){\n      if(vm.currentLeague.onClock === team._id){\n        return {\"font-weight\": \"bold\"};\n      }\n  };\n\n  vm.getPlayers = function (position) {\n    DraftFactory.getPlayers(position, function (data) {\n      vm.available_players = data;\n    });\n  };\n\n  vm.startDraft = function(id){\n    var draftPackage = {\n      draftId: vm.currentLeague.draft._id,\n      draftOrder: vm.currentLeague.draftOrder\n\n    };\n    return DraftService.startDraft(draftPackage)\n      .then(function(response){\n        console.log(response);\n      }, function(error){\n        console.log(error);\n      });\n  };\n\n  vm.draftPlayer = function (id) {\n    if(DraftService.isOnClock() === true){\n\n      var draftPackage = {\n        draftId: vm.currentLeague.draft._id,\n        leagueId: vm.currentLeague._id,\n        team: vm.currentUser._id,\n        pick: id,\n      };\n      \n      return DraftService.draftPlayer(draftPackage)\n        .then(function(response){\n          console.log(response);\n          if(response === true){\n            $location.path(\"/draftBoard\");\n          }\n          if(response === false){\n            console.log(\"Error in PlayerControiller draftPlayer\");\n          }\n        }, function(error){\n          console.log(error);\n        });\n    }\n    if(DraftService.isOnClock() === false){\n      vm.message = \"You Are Not On The Clock!\";\n      vm.checkBox.value = false;\n      $timeout(function(){\n        vm.message = false;\n      }, 5000);\n    }\n  };\n\n  var getDraftedPlayers = function () {\n    DraftFactory.getDraftedPlayers(function (data) {\n      vm.allDraftedPlayers = data;\n    });\n  };\n  getDraftedPlayers();\n});\n","angular.module('UserController', []).controller('UserController', function ($scope, $q, $view, $location, $state, AuthenticationService, LeagueService) {\n    let vm = this;\n\n    vm.currentUser = {};\n    let getCurrentUser = AuthenticationService.currentUser();\n    getCurrentUser.then((response) => {\n        vm.currentUser = response;\n    }, (error) => {\n        console.log(error);\n    });\n\n    vm.currentLeague = LeagueService.league;\n\n    vm.message = \"\";\n\n    vm.tab = 1;\n\n    vm.setTab = function (tabId) {\n        vm.tab = tabId;\n    };\n\n    vm.isSet = function (tabId) {\n        return vm.tab === tabId;\n    };\n\n    vm.registerInfo = {\n        email: \"\",\n        userName: \"\",\n        firstName: \"\",\n        password: \"\"\n    };\n\n    vm.loginInfo = {\n        email: \"\",\n        password: \"\"\n    };\n\n    vm.registerNew = function () {\n        return AuthenticationService.register(vm.registerInfo)\n            .then((response) => {\n                $state.transitionTo('dashboard');\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    vm.login = function () {\n        return AuthenticationService.login(vm.loginInfo)\n            .then(function (response) {\n                if (response == \"Token Set!\") {\n                    $state.transitionTo('dashboard');\n                }\n                else {\n                    vm.message = response;\n                }\n            }, function (error) {\n                vm.message = \"Error: \" + error.status;\n                console.log(error);\n            });\n    };\n\n    vm.onSignIn = (googleUser) => {\n        console.log(\"Fired onSign In\");\n        if (googleUser) {\n            var profile = googleUser.getBasicProfile();\n            console.log(\"Email: \" + profile.getEmail());\n        }\n    };\n    \n    vm.dismissError = () => {\n        vm.message = \"\";\n    }\n\n});\n\n","angular.module(\"ChatFactory\", []).factory(\"ChatFactory\", function($http){\n\n    var factory = {};\n\n    factory.postMessage = function(message, callback){\n        $http.post(\"/message\", message).success(function(data, status){\n            callback(data, false);\n        })\n        .error(function(data, status){\n            callback(data, true);\n        });\n    };\n\n    factory.deleteAllChat = function(){\n        $http.post(\"/deleteAllChat\").success(function(data){\n            console.log(data);\n        });\n    };\n\n    return factory;\n});","angular.module(\"DraftFactory\", []).factory(\"DraftFactory\", function($http, $q){\n    var factory = {};\n\n    factory.downloadPlayers = function(){\n        $http.post(\"/downloadPlayers\").success(function(data){\n            console.log(data);\n        });\n    };\n\n    factory.getPlayers = function(position, callback){\n        $http.get(\"/getPlayers/\", {params: {position: position}}).success(function(output){\n            callback(output);\n        });\n    };\n\n    factory.deleteAllPlayers = function(callback){\n        $http.post(\"/deleteAllPlayers\").success(function(data){\n            callback(data);\n        });\n    };\n\n    factory.startDraft = function(draftPackage){\n        return $http.post(\"/startDraft\", draftPackage)\n            .then(function(response){\n                console.log(response);\n            }, function(error){\n                console.log(error);\n            });\n    };\n\n    factory.draftPlayer = function(draftPackage){\n        return $http.post(\"/draftPlayer\", draftPackage)\n            .then(function(response){\n                return response;\n            }, function(error){\n                console.log(error);\n            });\n    };\n\n    factory.getDraftedPlayers = function(callback){\n        $http.get(\"/getDraftedPlayers\").success(function(output){\n            callback(output);\n        });\n    };\n\n    factory.deleteAllDrafts = function(){\n        return $http.post(\"/deleteAllDrafts\");\n    };\n\n    return factory;\n});","angular.module(\"LeagueFactory\", []).factory(\"LeagueFactory\", function ($http) {\n    let factory = {};\n\n    factory.createLeague = (newLeagueInfo) => {\n        return $http.post(\"/createLeague\", newLeagueInfo)\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    factory.joinLeague = (leaguePack) => {\n        return $http.patch(\"/joinLeague/\", leaguePack)\n            .then(function (response) {\n                return response;\n            }, function (error) {\n                console.log(error);\n            });\n    };\n\n    factory.getLeague = (id) => {\n        return $http.get(\"/getLeague/\", { params: { _id: id } })\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n    \n    factory.newLeagueMessage = (messagePack) => {\n        return $http.post('/league/newMessage', messagePack)\n            .then((response) => {\n                return response\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    return factory;\n});","angular.module('UserFactory', []).factory('UserFactory', function ($http, $q) {\n  var factory = {};\n\n  factory.register = (registerInfo) => {\n    return $http.post(\"/register\", registerInfo)\n      .then((response) => {\n        return response;\n      }, (error) => {\n        console.log(error);\n    });\n  };\n\n  factory.login = (loginInfo) => {\n    return $http.post(\"/login\", loginInfo)\n      .then((response) => {\n        return response;\n      }, (error) => {\n        console.log(error);\n      });\n  };\n\n  return factory;\n});","angular.module('AuthenticationService', []).service('AuthenticationService', function ($window, $state, $rootScope, $q, UserFactory) {\n  let service = {};\n\n  const tokenStorage = {\n    setToken: (key, token) => {\n      return Promise.resolve().then(() => {\n        $window.localStorage.setItem(key, token);\n      });\n    },\n    getToken: (key) => {\n      return Promise.resolve().then(() => {\n        return $window.localStorage.getItem(key);\n      });\n    },\n    removeToken: (key) => {\n      return Promise.resolve().then(() => {\n        $window.localStorage.removeItem(key);\n      });\n    }\n  }\n\n  service.isLoggedIn = () => {\n    return tokenStorage.getToken('user-token')\n      .then((token) => {\n        if (token) {\n          let payload = token.split('.')[1];\n          payload = $window.atob(payload);\n          payload = JSON.parse(payload);\n          return payload.exp > Date.now() / 1000;\n        }\n        else {\n          return false;\n        }\n      }, (error) => {\n        console.log(error);\n      });\n  };\n\n  service.currentUser = function () {\n    return service.isLoggedIn()\n      .then((response) => {\n        if (response){\n          return tokenStorage.getToken('user-token')\n            .then((token) => {\n              let payload = token.split('.')[1];\n              payload = $window.atob(payload);\n              payload = JSON.parse(payload);\n\n              return {\n                _id: payload._id,\n                userName: payload.userName,\n                firstName: payload.firstName,\n                email: payload.email,\n                leagues: payload.leagues\n              };\n            }, (error) => {\n              console.log(error);\n            });\n        }\n      }, (error) => {\n        console.log(error);\n      });\n  };\n\n  service.updateToken = function (token) {\n    return tokenStorage.removeToken('user-token')\n      .then(() => {\n        return tokenStorage.setToken('user-token', token)\n          .then(() => {\n            return \"Token Set!\";\n          }, (error) => {\n            console.log(error);\n          })\n      }, (error) => {\n        console.log(error);\n      });\n  };\n\n  service.register = function (user, callback) {\n    return UserFactory.register(user)\n      .then((response) => {\n        if (response.data.token) {\n          return tokenStorage.setToken('user-token', response.data.token)\n            .then(() => {\n              return \"Token Set!\";\n            });\n        }\n        else if (response.message) {\n          return reponse.message;\n        }\n        // else {\n        //   callback('Unknown Error!');\n        // }\n      }, (error) => {\n        console.log(error);\n      });\n  };\n\n  service.login = function (user) {\n    return UserFactory.login(user)\n      .then(function (response) {\n        if (response.data.token) {\n          return tokenStorage.setToken('user-token', response.data.token)\n            .then(() => {\n              return \"Token Set!\"\n            }, (error) => {\n              console.log(error);\n            });\n        } else {\n          if (response.status == 401) {\n            return \"Incorrect Username or Password!\";\n          }\n          else {\n            return \"Unknown Error!\"\n          }\n        }\n      }, function (err) {\n        console.log(err);\n      });\n  };\n\n  service.currentUserLogOut = function () {\n    $window.localStorage.clear();\n    $rootScope = $rootScope.$new(true);\n    // $location.path(\"/\");\n    console.log(\"Logout\");\n  };\n\n  service.deleteAllUsers = function () {\n    UserFactory.deleteAllUsers();\n    $window.localStorage.clear();\n    $rootScope = $rootScope.$new(true);\n    $location.path(\"/login\");\n  };\n\n  return service;\n});\n","angular.module('DraftService', []).service('DraftService', function ($window, $state, $q, DraftFactory, AuthenticationService, LeagueService) {\n    var service = {};\n\n    var vm = this;\n\n    // vm.currentUser = AuthenticationService.currentUser();\n\n    // vm.isLoggedIn = AuthenticationService.isLoggedIn();\n\n    // vm.currentLeague = LeagueService.currentLeague();\n\n    service.startDraft = function(draftPackage){\n        return DraftFactory.startDraft(draftPackage)\n            .then(function(reponse){\n                console.log(response);\n            }, function(error){\n                console.log(error);\n            });\n    };\n\n    service.isOnClock = function(){\n        if(vm.currentLeague.onClock === vm.currentUser._id){\n            return true;\n        }\n        else{\n            return false;\n        }\n    };\n\n    service.draftPlayer = function(draftPackage){\n        return DraftFactory.draftPlayer(draftPackage)\n            .then(function(response){\n                if(response.statusText === \"OK\"){\n                    return true;\n                }\n                else{\n                    return false;\n                }\n            }, function(error){\n                console.log(error);\n            });\n    };\n\n    service.undraftedPlayers = function () {\n\n    };\n\n    service.draftedPlayers = function () {\n\n    };\n\n    service.downloadPlayers = function(){\n        DraftFactory.downloadPlayers();\n    };\n\n    service.deleteAllChat = function(){\n        ChatFactory.deleteAllChat();\n    };\n\n    service.deleteAllDrafts = function(){\n        DraftFactory.deleteAllDrafts();\n    };\n\n    service.deleteAllPlayers = function(callback){\n        DraftFactory.deleteAllPlayers(function(data){\n            callback(data);\n        });\n    };\n\n    return service;\n});","angular.module(\"LeagueService\", []).service(\"LeagueService\", function ($window, $state, $stateParams, $q, $location, LeagueFactory, ChatFactory, AuthenticationService) {\n    let service = {};\n    let vm = this;\n\n    //Current User\n    vm.currentUser = {};\n    let getCurrentUser = AuthenticationService.currentUser();\n    getCurrentUser.then((response) => {\n        vm.currentUser = response;\n    }, (error) => {\n        console.log(error);\n    });\n\n    //Current League\n    vm.league = {};\n    service.getLeague = function() {\n        return LeagueFactory.getLeague($stateParams.leagueID)\n            .then((response) => {\n                if (response.data) {\n                    return response.data;\n                }\n            }, (error) => {\n                console.log(error);\n            });\n    };\n    \n    service.createNewLeague = function (newLeagueInfo) {\n        return LeagueFactory.createLeague(newLeagueInfo)\n            .then((response) => {\n                return AuthenticationService.updateToken(response.data.token)\n                    .then(() => {\n                        $state.transitionTo('dashboard');\n                    }, (error) => {\n                        console.log(error);\n                    });\n            }, (error) => {\n                console.log(error);\n            });\n    };\n    \n    service.joinLeague = function (joinPac) {\n        return LeagueFactory.joinLeague(joinPac)\n            .then((response) => {\n                if (response.data.token) {\n                    return AuthenticationService.updateToken(response.data.token)\n                        .then(() => {\n                            return \"League Joined\";\n                        }, (error) => {\n                            console.log(error);\n                        });\n                }\n                else {\n                    return response.data.message;\n                }\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    service.newLeagueMessage = (messagePack) => {\n        return LeagueFactory.newLeagueMessage(messagePack)\n            .then((response) => {\n                console.log(response);\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    service.deleteAllLeagues = function () {\n        LeagueFactory.deleteAllLeagues();\n    };\n\n    service.deleteAllChat = function () {\n        ChatFactory.deleteAllChat();\n    };\n\n    return service;\n});"]}