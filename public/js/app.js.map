{"version":3,"sources":["app.js","controllers/AppController.js","controllers/ChatController.js","controllers/DashboardController.js","controllers/LeagueController.js","controllers/PlayerController.js","controllers/UserController.js","factories/ChatFactory.js","factories/DraftFactory.js","factories/LeagueFactory.js","factories/UserFactory.js","services/AuthenticationService.js","services/DraftService.js","services/LeagueService.js"],"names":["DraftApp","angular","module","$stateProvider","$urlRouterProvider","otherwise","config","state","url","content","templateProvider","$templateCache","controller","views","header","get","controllerAs","authenticate","resolve","AuthenticationService","currentUser","run","onStart","trans","to","transitionTo","$location","$state","$q","$transitions","vm","AuthService","injector","isLoggedIn","$scope","DraftService","LeagueService","this","then","response","error","console","log","currentLeague","setCurrentLeague","leagueId","setCurrentLeagueId","getLeague","reload","deleteAllDBs","deleteAllPlayers","deleteAllUsers","deleteAllChat","deleteAllDrafts","downloadPlayers","data","path","deleteAllLeagues","currentUserLogOut","directive","element","attrs","bind","event","which","$apply","$eval","ngEnter","preventDefault","ChatFactory","messages","message","filterText","socket","io","connect","on","reverse","unshift","sendMessage","postMessage","result","err","window","alert","$confirm","moveFocus","nextId","$","focus","$timeout","DraftFactory","available_players","allDraftedPlayers","setColorOnClock","team","onClock","_id","font-weight","getPlayers","position","startDraft","id","draftPackage","draftId","draft","draftOrder","draftPlayer","isOnClock","pick","checkBox","value","getDraftedPlayers","$view","tab","setTab","tabId","isSet","userViewChange","view","loginView","registerView","registerInfo","email","userName","firstName","password","loginInfo","registerNew","register","login","status","onSignIn","googleUser","profile","getBasicProfile","getEmail","dismissError","factory","$http","callback","post","success","params","output","createLeague","newLeagueInfo","getAllLeagues","joinLeague","leaguePack","patch","getUserLeague","service","$window","UserFactory","tokenStorage","setToken","key","token","Promise","localStorage","setItem","getToken","getItem","removeToken","removeItem","payload","split","atob","JSON","parse","exp","Date","now","leagues","updateToken","user","reponse","clear","$rootScope","$new","statusText","undraftedPlayers","draftedPlayers","LeagueFactory","saveCurrentLeagueId","currentLeagueId","saveCurrentLeague","league","stringify","when","getCurrentLeagueId","theLeague","createNewLeague","code","user_id","league_code","undefined","x","y","splice","chatMessage","chat"],"mappings":"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","file":"app.js","sourcesContent":["let DraftApp = angular.module(\"DraftApp\", [\"ngRoute\", \"ngMessages\", \"ngAnimate\", \"ui.router\", \"ui.bootstrap\", \"angular-confirm\", \"AppController\", \"AuthenticationService\", \"ChatController\", \"DashboardController\", \"DraftService\", \"LeagueController\", \"LeagueService\", \"PlayerController\", \"UserController\", \"ChatFactory\", \"DraftFactory\", \"LeagueFactory\", \"UserFactory\"]);\n\nangular.module('DraftApp').config(function ($stateProvider, $urlRouterProvider) {\n\n    $urlRouterProvider.otherwise(\"/\");\n\n    $stateProvider\n        .state(\"index\", {\n            url: \"/\",\n            views: {\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('welcome.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        })\n        .state(\"login\", {\n            url: \"/login\",\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: \"vm\",\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('login.html');\n                    },\n                    controller: \"UserController\",\n                    controllerAs: \"vm\"\n                },\n            }\n        })\n        .state('register', {\n            url: \"/register\",\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: 'vm'\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('register.html');\n                    },\n                    controller: \"UserController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        })\n        .state(\"dashboard\", {\n            url: \"/dashboard\",\n            authenticate: true,\n            resolve: () => {\n                AuthenticationService.currentUser();\n            },\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: 'vm',\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('dashboard.html');\n                    },\n                    controller: \"DashboardController\",\n                    controllerAs: \"vm\",\n                }\n            }\n        })\n        .state('newLeague', {\n            url: \"/league/new\",\n            authenticate: true,\n            views: {\n                'header': {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: 'vm'\n                },\n                'content': {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('league/newLeague.html');\n                    },\n                    controller: \"LeagueController\",\n                    controllerAs: \"vm\",\n                }\n            }\n        })\n        .state('joinLeague', {\n            url: \"/league/join\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: 'vm'\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('league/joinLeague.html');\n                    },\n                    controller: \"LeagueController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        })\n        .state('league/{id}', {\n            url: \"/league/{id}\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: 'vm'\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('league/index.html');\n                    },\n                    controller: \"LeagueController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        })\n        .state(\"settings\", {\n            url: \"/settings\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: 'vm',\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('settings.html');\n                    },\n                    controller: \"UserController\",\n                    controllerAs: \"vm\",\n                }\n            }\n        })\n        .state(\"commish\", {\n            url: \"/commish\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: \"vm\"\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('commish.html');\n                    },\n                    controller: \"LeagueController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        })\n        .state(\"availablePlayers\", {\n            url: \"/availablePlayers\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: \"vm\",\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('availablePlayers.html');\n                    },\n                    controller: \"PlayerController\",\n                    controllerAs: \"vm\",\n                }\n            }\n        })\n        .state(\"draftboard\", {\n            url: \"/draftboard\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: \"vm\"\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('draftBoard.html');\n                    },\n                    controller: \"PlayerController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        })\n        .state(\"chat\", {\n            url: \"/chat\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: \"vm\"\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('chat.html');\n                    },\n                    controller: \"ChatController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        });\n});\n\nangular.module('DraftApp').run(function ($transitions, $location, $state, $q, AuthenticationService) {\n    $transitions.onStart({ to: '*' }, function (trans) {\n        let AuthService = trans.injector().get('AuthenticationService');\n        if (trans.to().authenticate && !AuthService.isLoggedIn()) {\n            $state.transitionTo('login');\n        }\n    });\n});","angular.module('AppController', []).controller('AppController', function ($scope, $location, $q, $state, AuthenticationService, DraftService, LeagueService) {\n\n  let vm = this;\n  \n  vm.isLoggedIn = false;\n  let getLoginStatus = AuthenticationService.isLoggedIn();\n  getLoginStatus.then((response) => {\n    if (response == true) {\n      vm.isLoggedIn = true;\n    }\n    if (response == false) {\n      vm.isLoggedIn = false;\n    }\n  }, (error) => {\n    console.log(error);\n  });\n      \n  vm.currentUser = {};\n  let getCurrentUser = AuthenticationService.currentUser();\n  getCurrentUser.then((response) => {\n    vm.currentUser = response;\n  }, (error) => {\n    console.log(error);\n  });\n\n    vm.currentLeague = LeagueService.currentLeague();\n\n\n    //Sets A League and Returns League Info\n    vm.setCurrentLeague = function(leagueId){\n      return LeagueService.setCurrentLeagueId(leagueId)\n        .then(function(){\n          return LeagueService.getLeague()\n            .then(function(){\n              $state.reload();\n            }, function(error){\n              console.log(error);\n            });\n        }, function(error){\n          console.log(error);\n        });\n    };\n\n    //Dev Tools (Not For Production)\n    vm.deleteAllDBs = function(){\n      DraftService.deleteAllPlayers();\n      AuthenticationService.deleteAllUsers();\n      LeagueService.deleteAllChat();\n      DraftService.deleteAllDrafts();\n    };\n  \n    vm.downloadPlayers = function(){\n      DraftService.downloadPlayers(function(data){\n        console.log(data);\n      });\n    };\n  \n    vm.deleteAllPlayers = function(){\n      DraftService.deleteAllPlayers(function(data){\n        console.log(data);\n      });\n    };\n  \n    vm.deleteAllUsers = function(){\n      AuthenticationService.deleteAllUsers();\n      $location.path(\"/login\");\n    };\n  \n    vm.deleteAllChat = function(){\n      LeagueService.deleteAllChat();\n    };\n  \n    vm.deleteAllLeagues = function(){\n      LeagueService.deleteAllLeagues();\n    };\n  \n    vm.deleteAllDrafts = function(){\n      DraftService.deleteAllDrafts();\n    };\n  \n    vm.currentUserLogOut = function(){\n      AuthenticationService.currentUserLogOut();\n    };\n});","angular.module('ngEnter', []).directive('ngEnter', function ($scope, element, attrs) {\n\n    element.bind(\"keypress\", function (event) {\n        if (event.which === 13) {\n            $scope.$apply(function () {\n                $scope.$eval(attrs.ngEnter);\n            });\n            event.preventDefault();\n        }\n    });\n});\n\nangular.module('ChatController', []).controller('ChatController', function ($scope, AuthenticationService, LeagueService, ChatFactory) {\n\n    var vm = this;\n\n    vm.currentUser = AuthenticationService.currentUser();\n\n    vm.currentLeague = LeagueService.currentLeague();\n\n    vm.messages = [];\n\n    vm.message = \"\";\n    vm.filterText = \"\";\n\n    \n    var socket = io.connect();\n\n    socket.on(\"pastMessages\", function (data) {\n        $scope.$apply(function(){\n            vm.messages = data.reverse();\n        });\n    });\n\n    socket.on(\"receiveMessage\", function(data){\n        $scope.$apply(function(){\n            vm.messages.unshift(data);\n        });\n    });\n\n    vm.sendMessage = function () {\n        // var chatMessage = {\n        //     \"_id\": vm.currentLeague.chat._id,\n        //     \"userName\": vm.currentUser.firstName,\n        //     \"message\": vm.message\n        // };\n        LeagueService.postMessage(vm.message, function (result, err) {\n            if (err) {\n                window.alert(\"Error!\");\n            }\n            // else{\n            //     socket.emit(\"receiveMessage\", result);\n            //     vm.message = \"\";\n            // }\n        });\n    };\n});","angular.module('DashboardController', []).controller('DashboardController', function ($scope, $location, $state, AuthenticationService) {\n    let vm = this;\n\n    vm.currentUser = {};\n    let getCurrentUser = AuthenticationService.currentUser();\n    getCurrentUser.then((response) => {\n        vm.currentUser = response;\n    }, (error) => {\n        console.log(error);\n    });\n\n});","angular.module('LeagueController', []).controller('LeagueController', function ($scope, $q, $confirm, $location, $state, AuthenticationService, LeagueService) {\n\n    let vm = this;\n\n    vm.currentUser = {};\n    let getCurrentUser = AuthenticationService.currentUser();\n    getCurrentUser.then((response) => {\n        vm.currentUser = response;\n    }, (error) => {\n        console.log(error);\n    });\n    \n    // vm.currentLeague = {};\n    // let getCurrentLeague = LeagueService.currentLeague();\n    // getCurrentLeague.then((response) => {\n    //     vm.currentLeague = reponse;\n    // }, (error) => {\n    //     console.log(error);\n    //     });\n    \n    vm.moveFocus = (nextId) => {\n        $('#' + nextId).focus();\n    };\n    // vm.createNewLeague = function () {\n    //     var newLeagueInfo = {\n    //         \"leagueName\": vm.newLeague.leagueName,\n    //         \"leagueSize\": vm.newLeague.leagueSize,\n    //         \"user_id\": vm.currentUser._id\n    //     };\n    //     return LeagueService.createNewLeague(newLeagueInfo)\n    //         .then((response) => {\n    //             $state.transitionTo('dashboard');\n    //         }, (error) => {\n    //             console.log(error);\n    //         });\n    // };\n\n    // vm.joinLeague = function () {\n    //     let code = \"\";\n    //     for (var x in vm.data) {\n    //         code += vm.data[x];\n    //     }\n    //     return LeagueService.joinLeague(code)\n    //         .then((response) => {\n    //             $state.transitionTo('dashboard');\n    //         }, (error) => {\n    //             console.log(error);\n    //         });\n    // };\n\n});","angular.module('PlayerController', []).controller('PlayerController', function ($scope, $location, $confirm, $timeout, $q, DraftFactory, AuthenticationService, DraftService, LeagueService) {\n\n  var vm = this;\n\n  vm.available_players = [];\n\n  vm.allDraftedPlayers = [];\n\n  vm.message = \"\";\n\n  vm.currentUser = AuthenticationService.currentUser();\n\n  vm.currentLeague = LeagueService.currentLeague();\n\n  vm.setColorOnClock = function(team){\n      if(vm.currentLeague.onClock === team._id){\n        return {\"font-weight\": \"bold\"};\n      }\n  };\n\n  vm.getPlayers = function (position) {\n    DraftFactory.getPlayers(position, function (data) {\n      vm.available_players = data;\n    });\n  };\n\n  vm.startDraft = function(id){\n    var draftPackage = {\n      draftId: vm.currentLeague.draft._id,\n      draftOrder: vm.currentLeague.draftOrder\n\n    };\n    return DraftService.startDraft(draftPackage)\n      .then(function(response){\n        console.log(response);\n      }, function(error){\n        console.log(error);\n      });\n  };\n\n  vm.draftPlayer = function (id) {\n    if(DraftService.isOnClock() === true){\n\n      var draftPackage = {\n        draftId: vm.currentLeague.draft._id,\n        leagueId: vm.currentLeague._id,\n        team: vm.currentUser._id,\n        pick: id,\n      };\n      \n      return DraftService.draftPlayer(draftPackage)\n        .then(function(response){\n          console.log(response);\n          if(response === true){\n            $location.path(\"/draftBoard\");\n          }\n          if(response === false){\n            console.log(\"Error in PlayerControiller draftPlayer\");\n          }\n        }, function(error){\n          console.log(error);\n        });\n    }\n    if(DraftService.isOnClock() === false){\n      vm.message = \"You Are Not On The Clock!\";\n      vm.checkBox.value = false;\n      $timeout(function(){\n        vm.message = false;\n      }, 5000);\n    }\n  };\n\n  var getDraftedPlayers = function () {\n    DraftFactory.getDraftedPlayers(function (data) {\n      vm.allDraftedPlayers = data;\n    });\n  };\n  getDraftedPlayers();\n});\n","angular.module('UserController', []).controller('UserController', function ($scope, $q, $view, $location, $state, AuthenticationService, LeagueService) {\n    let vm = this;\n\n    vm.currentUser = {};\n    let getCurrentUser = AuthenticationService.currentUser();\n    getCurrentUser.then((response) => {\n        vm.currentUser = response;\n    }, (error) => {\n        console.log(error);\n    });\n\n    vm.currentLeague = LeagueService.currentLeague();\n\n    vm.message = \"\";\n\n    vm.tab = 1;\n\n    vm.setTab = function (tabId) {\n        vm.tab = tabId;\n    };\n\n    vm.isSet = function (tabId) {\n        return vm.tab === tabId;\n    };\n\n    vm.userViewChange = function (view) {\n        if (view === true) {\n            vm.loginView = false;\n            vm.registerView = true;\n        }\n        else {\n            vm.loginView = true;\n            vm.registerView = false;\n        }\n    };\n\n    vm.registerInfo = {\n        email: \"\",\n        userName: \"\",\n        firstName: \"\",\n        password: \"\"\n    };\n\n    vm.loginInfo = {\n        email: \"\",\n        password: \"\"\n    };\n\n    vm.registerNew = function () {\n        return AuthenticationService.register(vm.registerInfo)\n            .then((response) => {\n                $state.transitionTo('dashboard');\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    vm.login = function () {\n        return AuthenticationService.login(vm.loginInfo)\n            .then(function (response) {\n                console.log(response);\n                if (response == \"Token Set!\") {\n                    $state.transitionTo('dashboard');\n                }\n                else {\n                    vm.message = response;\n                    console.log(response);\n                }\n            }, function (error) {\n                vm.message = \"Error: \" + error.status;\n                console.log(error);\n            });\n    };\n\n    vm.onSignIn = (googleUser) => {\n        console.log(\"Fired onSign In\");\n        if (googleUser) {\n            var profile = googleUser.getBasicProfile();\n            console.log(\"Email: \" + profile.getEmail());\n        }\n    };\n    vm.dismissError = () => {\n        console.log(\"Dismiss\");\n        vm.message = \"\";\n    }\n\n});\n\n","angular.module(\"ChatFactory\", []).factory(\"ChatFactory\", function($http){\n\n    var factory = {};\n\n    factory.postMessage = function(message, callback){\n        $http.post(\"/message\", message).success(function(data, status){\n            callback(data, false);\n        })\n        .error(function(data, status){\n            callback(data, true);\n        });\n    };\n\n    factory.deleteAllChat = function(){\n        $http.post(\"/deleteAllChat\").success(function(data){\n            console.log(data);\n        });\n    };\n\n    return factory;\n});","angular.module(\"DraftFactory\", []).factory(\"DraftFactory\", function($http, $q){\n    var factory = {};\n\n    factory.downloadPlayers = function(){\n        $http.post(\"/downloadPlayers\").success(function(data){\n            console.log(data);\n        });\n    };\n\n    factory.getPlayers = function(position, callback){\n        $http.get(\"/getPlayers/\", {params: {position: position}}).success(function(output){\n            callback(output);\n        });\n    };\n\n    factory.deleteAllPlayers = function(callback){\n        $http.post(\"/deleteAllPlayers\").success(function(data){\n            callback(data);\n        });\n    };\n\n    factory.startDraft = function(draftPackage){\n        return $http.post(\"/startDraft\", draftPackage)\n            .then(function(response){\n                console.log(response);\n            }, function(error){\n                console.log(error);\n            });\n    };\n\n    factory.draftPlayer = function(draftPackage){\n        return $http.post(\"/draftPlayer\", draftPackage)\n            .then(function(response){\n                return response;\n            }, function(error){\n                console.log(error);\n            });\n    };\n\n    factory.getDraftedPlayers = function(callback){\n        $http.get(\"/getDraftedPlayers\").success(function(output){\n            callback(output);\n        });\n    };\n\n    factory.deleteAllDrafts = function(){\n        return $http.post(\"/deleteAllDrafts\");\n    };\n\n    return factory;\n});","angular.module(\"LeagueFactory\", []).factory(\"LeagueFactory\", function($http){\n    var factory = {};\n\n    factory.createLeague = function (newLeagueInfo) {\n        return $http.post(\"/createLeague\", newLeagueInfo)\n            .then(function(response){\n                console.log(response);\n                return response;\n            }, function(error){\n                console.log(error);\n                return error;\n            });\n    };\n\n    factory.getLeague = function(leagueId){\n        return $http.get(\"/getLeague/\", {params: {_id: leagueId}})\n            .then(function(data){\n                return data;\n            }, function(error){\n                console.log(error);\n            });\n    };\n\n    factory.getAllLeagues = function(){\n        return $http.get(\"/getAllLeagues\")\n            .then(function(response){\n                return response.data;\n            }, function(error){\n                console.log(error);\n            });\n    };\n\n    factory.joinLeague = function(leaguePack){\n        return $http.patch(\"/joinLeague/\", leaguePack)\n            .then(function (response) {\n                return response;\n            }, function(error){\n                console.log(error);\n            });\n    };\n\n    factory.deleteAllLeagues = function(){\n        return $http.post(\"/leaguesClearAll\")\n            .then(function(response){\n            }, function(error){\n                console.log(error);\n            });\n        // .success(function(data){\n        //     console.log(data);\n        // });\n    };\n\n    return factory;\n});","angular.module('UserFactory', []).factory('UserFactory', function ($http, $q) {\n  var factory = {};\n\n  factory.register = function (registerInfo) {\n    return $http.post(\"/register\", registerInfo)\n      .then((response) => {\n        console.log(response);\n        return response;\n      }, (error) => {\n        console.log(error);\n        return error;\n    });\n  };\n\n  factory.login = function (loginInfo) {\n    return $http.post(\"/login\", loginInfo)\n      .then(function (response) {\n        return response;\n      }, (error) => {\n        return error;\n      });\n  };\n\n  factory.deleteAllUsers = function (callback) {\n    $http.post(\"/deleteAllUsers\").success(function (data) {\n      console.log(data);\n      callback(data);\n    });\n  };\n\n  factory.getUserLeague = function (callback) {\n    $http.get(\"/getUserLeagues\").success(function (data) {\n      console.log(data);\n      callback(data);\n    });\n  };\n\n  return factory;\n});","angular.module('AuthenticationService', []).service('AuthenticationService', function ($window, $state, $q, UserFactory) {\n  var service = {};\n\n  const tokenStorage = {\n    setToken: (key, token) => {\n      return Promise.resolve().then(() => {\n        $window.localStorage.setItem(key, token);\n      });\n    },\n    getToken: (key) => {\n      return Promise.resolve().then(() => {\n        return $window.localStorage.getItem(key);\n      });\n    },\n    removeToken: (key) => {\n      return Promise.resolve().then(() => {\n        $window.localStorage.removeItem(key);\n      });\n    }\n  }\n\n  service.isLoggedIn = () => {\n    return tokenStorage.getToken('user-token')\n      .then((token) => {\n        if (token) {\n          let payload = token.split('.')[1];\n          payload = $window.atob(payload);\n          payload = JSON.parse(payload);\n          return payload.exp > Date.now() / 1000;\n        }\n        else {\n          return false;\n        }\n      }, (error) => {\n        console.log(error);\n      });\n  };\n\n  service.currentUser = function () {\n    return service.isLoggedIn()\n      .then((response) => {\n        if (response){\n          return tokenStorage.getToken('user-token')\n            .then((token) => {\n              let payload = token.split('.')[1];\n              payload = $window.atob(payload);\n              payload = JSON.parse(payload);\n\n              return {\n                _id: payload._id,\n                userName: payload.userName,\n                firstName: payload.firstName,\n                email: payload.email,\n                leagues: payload.leagues\n              };\n            }, (error) => {\n              console.log(error);\n            });\n        }\n      }, (error) => {\n        console.log(error);\n      });\n  };\n\n  service.updateToken = function (token) {\n    return tokenStorage.removeToken('user-token')\n      .then(() => {\n        return tokenStorage.setToken('user-token', token)\n          .then(() => {\n            return \"Token Set!\";\n          }, (error) => {\n            console.log(error);\n          })\n      }, (error) => {\n        console.log(error);\n      });\n  };\n\n  service.register = function (user, callback) {\n    return UserFactory.register(user)\n      .then((response) => {\n        if (response.data.token) {\n          return tokenStorage.setToken('user-token', response.data.token)\n            .then(() => {\n              return \"Token Set!\";\n            });\n        }\n        else if (response.message) {\n          return reponse.message;\n        }\n        // else {\n        //   callback('Unknown Error!');\n        // }\n      }, (error) => {\n        console.log(error);\n      });\n  };\n\n  service.login = function (user) {\n    return UserFactory.login(user)\n      .then(function (response) {\n        if (response.data.token) {\n          return tokenStorage.setToken('user-token', response.data.token)\n            .then(() => {\n              return \"Token Set!\"\n            });\n        } else {\n          if (response.status == 401) {\n            return \"Incorrect Username or Password!\";\n          }\n          else {\n            return \"Unknown Error!\"\n          }\n        }\n      }, function (err) {\n        console.log(err);\n      });\n  };\n\n  service.currentUserLogOut = function () {\n    $window.localStorage.clear();\n    $rootScope = $rootScope.$new(true);\n    $location.path(\"/login\");\n    console.log(\"Logout\");\n  };\n\n  service.deleteAllUsers = function () {\n    UserFactory.deleteAllUsers();\n    $window.localStorage.clear();\n    $rootScope = $rootScope.$new(true);\n    $location.path(\"/login\");\n  };\n\n  return service;\n});\n","angular.module('DraftService', []).service('DraftService', function ($window, $state, $q, DraftFactory, AuthenticationService, LeagueService) {\n    var service = {};\n\n    var vm = this;\n\n    vm.currentUser = AuthenticationService.currentUser();\n\n    vm.isLoggedIn = AuthenticationService.isLoggedIn();\n\n    vm.currentLeague = LeagueService.currentLeague();\n\n    service.startDraft = function(draftPackage){\n        return DraftFactory.startDraft(draftPackage)\n            .then(function(reponse){\n                console.log(response);\n            }, function(error){\n                console.log(error);\n            });\n    };\n\n    service.isOnClock = function(){\n        if(vm.currentLeague.onClock === vm.currentUser._id){\n            return true;\n        }\n        else{\n            return false;\n        }\n    };\n\n    service.draftPlayer = function(draftPackage){\n        return DraftFactory.draftPlayer(draftPackage)\n            .then(function(response){\n                if(response.statusText === \"OK\"){\n                    return true;\n                }\n                else{\n                    return false;\n                }\n            }, function(error){\n                console.log(error);\n            });\n    };\n\n    service.undraftedPlayers = function () {\n\n    };\n\n    service.draftedPlayers = function () {\n\n    };\n\n    service.downloadPlayers = function(){\n        DraftFactory.downloadPlayers();\n    };\n\n    service.deleteAllChat = function(){\n        ChatFactory.deleteAllChat();\n    };\n\n    service.deleteAllDrafts = function(){\n        DraftFactory.deleteAllDrafts();\n    };\n\n    service.deleteAllPlayers = function(callback){\n        DraftFactory.deleteAllPlayers(function(data){\n            callback(data);\n        });\n    };\n\n    return service;\n});","angular.module(\"LeagueService\", []).service(\"LeagueService\", function ($window, $state, $q, $location, LeagueFactory, ChatFactory, AuthenticationService) {\n    var service = {};\n\n    var vm = this;\n\n    vm.currentUser = {};\n    let getCurrentUser = AuthenticationService.currentUser();\n    getCurrentUser.then((response) => {\n        vm.currentUser = response;\n    }, (error) => {\n        console.log(error);\n    });\n    vm.isLoggedIn = AuthenticationService.isLoggedIn();\n\n    var saveCurrentLeagueId = function (leagueId) {\n        $q.resolve($window.localStorage[\"current-league-id\"] = leagueId);\n    };\n\n    var currentLeagueId = function () {\n        if ($window.localStorage[\"current-league-id\"]) {\n            return $window.localStorage[\"current-league-id\"];\n        }\n        else {\n            return false;\n        }\n    };\n\n    var saveCurrentLeague = function (league) {\n        if ($window.localStorage[\"current-league\"]) {\n            $window.localStorage.removeItem(\"current-league\");\n            $window.localStorage.setItem(\"current-league\", JSON.stringify(league));\n        }\n        else {\n            $window.localStorage.setItem(\"current-league\", JSON.stringify(league));\n        }\n    };\n\n    service.currentLeague = function () {\n        var theLeague = JSON.parse($window.localStorage.getItem(\"current-league\"));\n        return theLeague;\n    };\n\n    service.setCurrentLeagueId = function (leagueId) {\n        if (leagueId) {\n            return $q.when(saveCurrentLeagueId(leagueId));\n        }\n    };\n\n    service.getCurrentLeagueId = function () {\n        if (currentLeagueId) {\n            return currentLeagueId;\n        }\n    };\n\n    service.getLeague = function () {\n        var theLeague = currentLeagueId();\n        return LeagueFactory.getLeague(theLeague)\n            .then(function (response) {\n                $q.resolve(saveCurrentLeague(response.data))\n                    .then(function () {\n                        return \"Done\";\n                    }, function (error) {\n                        console.log(error);\n                    });\n            }, function (error) {\n                console.log(error);\n            });\n    };\n\n    service.createNewLeague = function (newLeagueInfo) {\n        return LeagueFactory.createLeague(newLeagueInfo)\n            .then(function (response) {\n                console.log(response);\n                $q.when(AuthenticationService.updateToken(response.data.token))\n                    .then(function () {\n                        $state.transitionTo('dashboard');\n                        // currentUser = AuthenticationService.currentUser();\n                        // $q.when(service.setCurrentLeagueId(currentUser.leagues[0]._id))\n                        //     .then(function(){\n                        //         $q.when(service.getLeague())\n                        //             .then(function(response){\n                        //                 $location.path(\"/availablePlayers\");\n                        //                 return response;\n                        //             }, function(error){\n                        //                 console.log(error);\n                        //             });\n                        //     }, function(error){\n                        //         console.log(error);\n                        //     });\n                    }, function (error) {\n                        console.log(error);\n                    });\n            }, function (error) {\n                console.log(error);\n            });\n    };\n\n    service.joinLeague = function (code) {\n        let leaguePack = {\n            \"user_id\": vm.currentUser._id,\n            \"league_code\": code\n        };\n        return LeagueFactory.joinLeague(leaguePack)\n            .then((response) => {\n                console.log(response);\n                if (response.data.token) {\n                    return AuthenticationService.updateToken(response.data.token)\n                        .then(() => {\n                            return \"League Joined\";\n                        }, (error) => {\n                            console.log(error);\n                        });\n                }\n                else {\n                    return reponse.message;\n                }\n            }, function (error) {\n                console.log(error);\n            });\n    };\n\n    service.getAllLeagues = function () {\n        currentUser = AuthenticationService.currentUser();\n        if (currentUser.leagues[0] === undefined) {\n            return LeagueFactory.getAllLeagues()\n                .then(function (leagues) {\n                    return leagues;\n                }, function (error) {\n                    console.log(error);\n                });\n        }\n        else {\n            return LeagueFactory.getAllLeagues()\n                .then(function (leagues) {\n                    for (var x in leagues) {\n                        for (var y in currentUser.leagues) {\n                            if (leagues[x]._id == currentUser.leagues[y]._id) {\n                                leagues.splice(x, 1);\n                            }\n                        }\n                    }\n                    return leagues;\n                }, function (error) {\n                    console.log(error);\n                });\n        }\n    };\n\n    service.postMessage = function (message) {\n        var theLeague = service.currentLeague();\n\n        var chatMessage = {\n            \"_id\": theLeague.chat._id,\n            \"userName\": vm.currentUser.firstName,\n            \"message\": message\n        };\n\n        ChatFactory.postMessage(chatMessage, function (result, err) {\n            if (err) {\n                console.log(err);\n            }\n            if (result) {\n                console.log(result);\n            }\n        });\n    };\n\n    service.deleteAllLeagues = function () {\n        LeagueFactory.deleteAllLeagues();\n    };\n\n    service.deleteAllChat = function () {\n        ChatFactory.deleteAllChat();\n    };\n\n    return service;\n});"]}