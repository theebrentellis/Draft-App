{"version":3,"sources":["app.js","controllers/AppController.js","controllers/ChatController.js","controllers/DashboardController.js","controllers/LeagueController.js","controllers/PlayerController.js","controllers/UserController.js","factories/ChatFactory.js","factories/DraftFactory.js","factories/LeagueFactory.js","factories/UserFactory.js","services/AuthenticationService.js","services/DraftService.js","services/LeagueService.js"],"names":["DraftApp","angular","module","$stateProvider","$urlRouterProvider","otherwise","config","state","url","content","templateProvider","$templateCache","controller","views","header","get","controllerAs","authenticate","resolve","league","LeagueService","$stateParams","console","log","onStart","AuthService","trans","transitionTo","run","$transitions","$location","$state","$q","AuthenticationService","to","injector","isLoggedIn","getLoginStatus","$scope","DraftService","vm","this","then","response","error","currentUser","setCurrentLeague","leagueId","setCurrentLeagueId","getLeague","reload","deleteAllDBs","deleteAllPlayers","deleteAllUsers","deleteAllChat","deleteAllDrafts","downloadPlayers","data","path","deleteAllLeagues","currentUserLogOut","directive","element","attrs","bind","event","which","$apply","$eval","ngEnter","preventDefault","ChatFactory","currentLeague","messages","message","filterText","socket","io","connect","on","reverse","unshift","sendMessage","postMessage","result","err","window","alert","$view","$rootScope","$uibModal","$confirm","leagueAvailablePicks","createPicksList","isCommish","userID","commish","forEach","leaguePickMaker","draftOrder","title","teams","size","currentTeams","x","draftPick","pick","team","index","splice","push","_loop","length","onDrop","srcList","srcIndex","targetList","targetIndex","_id","updatePick","pickPack","updateTeamPick","createNewLeague","newLeagueInfo","leagueName","newLeague","leagueSize","user_id","joinLeague","code","leaguePack","league_code","moveFocus","nextId","$","focus","newMessage","modalInstance","open","animation","templateUrl","scope","backdrop","messagePack","leagueID","newLeagueMessage","statusText","cancel","dismiss","dismissError","startDraft","$timeout","DraftFactory","available_players","allDraftedPlayers","setColorOnClock","onClock","font-weight","getPlayers","position","id","draftPackage","draftId","draft","draftPlayer","isOnClock","checkBox","value","getDraftedPlayers","tab","setTab","tabId","isSet","registerInfo","email","userName","firstName","password","loginInfo","registerNew","register","login","status","onSignIn","googleUser","profile","getBasicProfile","getEmail","factory","$http","callback","post","success","params","output","createLeague","patch","service","$window","UserFactory","tokenStorage","setToken","key","token","Promise","localStorage","setItem","getToken","getItem","removeToken","removeItem","payload","split","atob","JSON","parse","exp","Date","now","leagues","updateToken","user","reponse","clear","$new","undraftedPlayers","draftedPlayers","LeagueFactory","defer","draftPositions","joinPac"],"mappings":"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","file":"app.js","sourcesContent":["let DraftApp = angular.module(\"DraftApp\", [\"ngRoute\", \"ngMessages\", \"ngAnimate\", \"ui.router\", \"ui.bootstrap\", \"dndLists\", \"angular-confirm\", \"AppController\", \"AuthenticationService\", \"ChatController\", \"DashboardController\", \"DraftService\", \"LeagueController\", \"LeagueService\", \"PlayerController\", \"UserController\", \"ChatFactory\", \"DraftFactory\", \"LeagueFactory\", \"UserFactory\"]);\n\nangular.module('DraftApp').config(function ($stateProvider, $urlRouterProvider) {\n\n    $urlRouterProvider.otherwise(\"/\");\n\n    $stateProvider\n        .state(\"index\", {\n            url: \"/\",\n            views: {\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('welcome.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        })\n        .state(\"login\", {\n            url: \"/login\",\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: \"vm\",\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('auth/login.html');\n                    },\n                    controller: \"UserController\",\n                    controllerAs: \"vm\"\n                },\n            }\n        })\n        .state('register', {\n            url: \"/register\",\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: 'vm'\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('auth/register.html');\n                    },\n                    controller: \"UserController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        })\n        .state(\"dashboard\", {\n            url: \"/dashboard\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: 'vm',\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('dashboard.html');\n                    },\n                    controller: \"DashboardController\",\n                    controllerAs: \"vm\",\n                }\n            }\n        })\n        .state('newLeague', {\n            url: \"/league/new\",\n            authenticate: true,\n            views: {\n                'header': {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: 'vm'\n                },\n                'content': {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('league/league.new.html');\n                    },\n                    controller: \"LeagueController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        })\n        .state('joinLeague', {\n            url: \"/league/join\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: 'vm'\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('league/league.join.html');\n                    },\n                    controller: \"LeagueController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        })\n        .state('league', {\n            url: \"/league/:leagueID/index\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: 'vm'\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('league/league.index.html');\n                    },\n                    controller: \"LeagueController\",\n                    controllerAs: \"vm\",\n                    resolve: {\n                        league: function(LeagueService, $stateParams) {\n                            console.log(\"Start Resolve\");\n                            return LeagueService.get();\n                        }\n                    }\n                }\n            }\n        })\n        .state('leagueCommish', {\n            url: \"/league/:leagueID/commish\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: 'vm'\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('league/league.commish.html');\n                    },\n                    controller: \"LeagueController\",\n                    controllerAs: \"vm\",\n                    // resolve: {\n                    //     league: (LeagueService, $stateParams) => {\n                    //         console.log($stateParams)\n                    //         // let theLeague = LeagueService.getLeague();\n                    //         // theLeague.then((response) => {\n\n                    //         // }, (error) => {\n                    //         //     console.log(error);\n                    //         // });\n                    //     }\n                    // }\n                }\n            }\n        })\n        .state(\"settings\", {\n            url: \"/settings\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: 'vm',\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('auth/settings.html');\n                    },\n                    controller: \"UserController\",\n                    controllerAs: \"vm\",\n                }\n            }\n        })\n        .state(\"commish\", {\n            url: \"/commish\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: \"vm\"\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('commish.html');\n                    },\n                    controller: \"LeagueController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        })\n        .state(\"availablePlayers\", {\n            url: \"/availablePlayers\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: \"vm\",\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('availablePlayers.html');\n                    },\n                    controller: \"PlayerController\",\n                    controllerAs: \"vm\",\n                }\n            }\n        })\n        .state(\"draftboard\", {\n            url: \"/draftboard\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: \"vm\"\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('draftBoard.html');\n                    },\n                    controller: \"PlayerController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        })\n        .state(\"chat\", {\n            url: \"/chat\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: \"vm\"\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('chat.html');\n                    },\n                    controller: \"ChatController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        });\n});\n\nangular.module('DraftApp').run(function ($transitions, $location, $state, $q, AuthenticationService) {\n    $transitions.onStart({ to: '*' }, function (trans) {\n        let AuthService = trans.injector().get('AuthenticationService');\n        if (trans.to().authenticate && !AuthService.isLoggedIn()) {\n            $state.transitionTo('login');\n        }\n    });\n});","angular.module('AppController', []).controller('AppController', function ($scope, $location, $q, $state, AuthenticationService, DraftService, LeagueService) {\n\n  let vm = this;\n  \n  vm.isLoggedIn = false;\n  let getLoginStatus = AuthenticationService.isLoggedIn();\n  getLoginStatus.then((response) => {\n    if (response == true) {\n      vm.isLoggedIn = true;\n    }\n    if (response == false) {\n      vm.isLoggedIn = false;\n    }\n  }, (error) => {\n    console.log(error);\n  });\n      \n  vm.currentUser = {};\n  let getCurrentUser = AuthenticationService.currentUser();\n  getCurrentUser.then((response) => {\n    vm.currentUser = response;\n  }, (error) => {\n    console.log(error);\n  });\n\n    // vm.currentLeague = LeagueService.currentLeague();\n\n\n    //Sets A League and Returns League Info\n    vm.setCurrentLeague = function(leagueId){\n      return LeagueService.setCurrentLeagueId(leagueId)\n        .then(function(){\n          return LeagueService.getLeague()\n            .then(function(){\n              $state.reload();\n            }, function(error){\n              console.log(error);\n            });\n        }, function(error){\n          console.log(error);\n        });\n    };\n\n    //Dev Tools (Not For Production)\n    vm.deleteAllDBs = function(){\n      DraftService.deleteAllPlayers();\n      AuthenticationService.deleteAllUsers();\n      LeagueService.deleteAllChat();\n      DraftService.deleteAllDrafts();\n    };\n  \n    vm.downloadPlayers = function(){\n      DraftService.downloadPlayers(function(data){\n        console.log(data);\n      });\n    };\n  \n    vm.deleteAllPlayers = function(){\n      DraftService.deleteAllPlayers(function(data){\n        console.log(data);\n      });\n    };\n  \n    vm.deleteAllUsers = function(){\n      AuthenticationService.deleteAllUsers();\n      $location.path(\"/login\");\n    };\n  \n    vm.deleteAllChat = function(){\n      LeagueService.deleteAllChat();\n    };\n  \n    vm.deleteAllLeagues = function(){\n      LeagueService.deleteAllLeagues();\n    };\n  \n    vm.deleteAllDrafts = function(){\n      DraftService.deleteAllDrafts();\n    };\n  \n    vm.currentUserLogOut = function(){\n      AuthenticationService.currentUserLogOut();\n    };\n});","angular.module('ngEnter', []).directive('ngEnter', function ($scope, element, attrs) {\n\n    element.bind(\"keypress\", function (event) {\n        if (event.which === 13) {\n            $scope.$apply(function () {\n                $scope.$eval(attrs.ngEnter);\n            });\n            event.preventDefault();\n        }\n    });\n});\n\nangular.module('ChatController', []).controller('ChatController', function ($scope, AuthenticationService, LeagueService, ChatFactory) {\n\n    var vm = this;\n\n    vm.currentUser = AuthenticationService.currentUser();\n\n    vm.currentLeague = LeagueService.currentLeague();\n\n    vm.messages = [];\n\n    vm.message = \"\";\n    vm.filterText = \"\";\n\n    \n    var socket = io.connect();\n\n    socket.on(\"pastMessages\", function (data) {\n        $scope.$apply(function(){\n            vm.messages = data.reverse();\n        });\n    });\n\n    socket.on(\"receiveMessage\", function(data){\n        $scope.$apply(function(){\n            vm.messages.unshift(data);\n        });\n    });\n\n    vm.sendMessage = function () {\n        // var chatMessage = {\n        //     \"_id\": vm.currentLeague.chat._id,\n        //     \"userName\": vm.currentUser.firstName,\n        //     \"message\": vm.message\n        // };\n        LeagueService.postMessage(vm.message, function (result, err) {\n            if (err) {\n                window.alert(\"Error!\");\n            }\n            // else{\n            //     socket.emit(\"receiveMessage\", result);\n            //     vm.message = \"\";\n            // }\n        });\n    };\n});","angular.module('DashboardController', []).controller('DashboardController', function ($scope, $q, $location, $view, $state, AuthenticationService) {\n    let vm = this;\n\n    vm.currentUser = {};\n    let getCurrentUser = AuthenticationService.currentUser();\n    getCurrentUser.then((response) => {\n        vm.currentUser = response;\n    }, (error) => {\n        console.log(error);\n    });\n\n});","angular.module('LeagueController', []).controller('LeagueController', function ($rootScope, $scope, $q, $view, $uibModal, $confirm, $location, $state, AuthenticationService, LeagueService) {\n\n    let vm = this;\n\n    vm.message = \"\";\n\n    vm.leagueAvailablePicks = false;\n\n    //Current User\n    // vm.currentUser = {};\n    let getCurrentUser = AuthenticationService.currentUser();\n    getCurrentUser.then((response) => {\n        vm.currentUser = response;\n        return response;\n    }, (error) => {\n        console.log(error);\n    });\n\n    //Current League\n    vm.league = {};\n    let getLeague = LeagueService.getLeague();\n    getLeague.then((response) => {\n        vm.league = response;\n        createPicksList(response);\n    }, (error) => {\n        console.log(error);\n    });\n\n    //Commish Auth\n    vm.isCommish = (userID, league) => {\n        let commish = false;\n        if (userID && league) {\n            league.forEach((element) => {\n                if (element == userID) {\n                    commish = true;\n                }\n            });\n            return commish;\n        }\n        return commish;\n    };\n\n    vm.leaguePickMaker = [];\n\n    //League Teams\n    let createPicksList = (league) => {\n        if (league) {\n            let draftOrder = { title: \"Draft Order\", teams: [] };\n            let size = league.size;\n            let currentTeams = league.teams;\n            for (let x = 1; x <= size; x++) {\n                let draftPick = { 'pick': x };\n                // angular.forEach(currentTeams, (team, index) => {\n                //     if (team.pick == x) {\n                //         draftPick = team;\n                //         currentTeams.splice(index, 1);\n                //     }\n                // });\n                currentTeams.forEach((team, index) => {\n                    if (team.pick == x) {\n                        draftPick = team;\n                        currentTeams.splice(index, 1);\n                    }\n                });\n                draftOrder.teams.push(draftPick);\n            }\n            vm.leaguePickMaker.push(draftOrder);\n            if (currentTeams.length > 0) {\n                let teams = { title: \"Needs Pick\", teams: [] };\n                currentTeams.forEach((team) => {\n                    teams.teams.push(team);\n                });\n                vm.leaguePickMaker.push(teams);\n            }\n        }\n    };\n    \n    $scope.onDrop = function (srcList, srcIndex, targetList, targetIndex) {\n        // Copy the item from source to target.\n        targetList.splice(targetIndex, 0, srcList[srcIndex]);\n        // Remove the item from the source, possibly correcting the index first.\n        // We must do this immediately, otherwise ng-repeat complains about duplicates.\n        if (srcList == targetList && targetIndex <= srcIndex) srcIndex++;\n        srcList.splice(srcIndex, 1);\n        for (let x = 0; x < targetList.length; x++){\n            if (targetList[x]._id == this.team._id) {\n                let team = this.team;\n                let pick = x + 1;\n                return updatePick(team, pick).then(() => {\n                    return true;\n                }, (error) => {\n                    console.log(error);\n                });\n            }\n        }\n        // By returning true from dnd-drop we signalize we already inserted the item.\n        return true;\n    };\n\n    let updatePick = (team, pick) => {\n        let pickPack = {\n            pick: pick,\n            team: team\n        };\n        return LeagueService.updateTeamPick(pickPack)\n            .then((response) => {\n                $state.reload();\n                return;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    //Create New League\n    vm.createNewLeague = () => {\n        let newLeagueInfo = {\n            \"leagueName\": vm.newLeague.leagueName,\n            \"leagueSize\": vm.newLeague.leagueSize,\n            \"user_id\": vm.currentUser._id\n        };\n\n        return LeagueService.createNewLeague(newLeagueInfo)\n            .then((response) => {\n                $state.transitionTo('dashboard');\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    //Join League\n    vm.joinLeague = () => {\n        let code = \"\";\n        for (var x in vm.data) {\n            code += vm.data[x];\n        }\n        let leaguePack = {\n            \"user_id\": vm.currentUser._id,\n            \"league_code\": code,\n        };\n        return LeagueService.joinLeague(leaguePack)\n            .then((response) => {\n                if (response == \"League Joined\") {\n                    $state.transitionTo('dashboard');\n                }\n                else {\n                    vm.message = response;\n                }\n\n            }, (error) => {\n                console.log(error);\n            });\n    };\n    vm.moveFocus = (nextId) => {\n        $('#' + nextId).focus();\n    };\n\n    //Open New League Message Modal\n    vm.newMessage = () => {\n        $scope.modalInstance = $uibModal.open({\n            animation: true,\n            size: \"lg\",\n            templateUrl: 'newMessageModal.html',\n            controller: 'LeagueController',\n            controllerAs: 'vm',\n            scope: $scope,\n            backdrop: \"static\",\n        });\n    };\n    vm.sendMessage = () => {\n        let messagePack = {\n            \"leagueID\": vm.league._id,\n            \"userID\": vm.currentUser._id,\n            \"message\": vm.newLeagueMessage\n        };\n\n        return LeagueService.newLeagueMessage(messagePack)\n            .then((response) => {\n                console.log(response);\n                if (response.statusText == \"OK\") {\n                    $state.reload();\n                }\n                console.log(response);\n            }, (error) => {\n                console.log(error);\n            });\n    };\n    vm.cancel = () => {\n        $scope.modalInstance.dismiss('cancel');\n    };\n    vm.dismissError = () => {\n        vm.message = \"\";\n    };\n\n    vm.startDraft = () => {\n        console.log(\"Start Draft\");\n    }\n});","angular.module('PlayerController', []).controller('PlayerController', function ($scope, $location, $confirm, $timeout, $q, DraftFactory, AuthenticationService, DraftService, LeagueService) {\n\n  var vm = this;\n\n  vm.available_players = [];\n\n  vm.allDraftedPlayers = [];\n\n  vm.message = \"\";\n\n  vm.currentUser = AuthenticationService.currentUser();\n\n  vm.currentLeague = LeagueService.currentLeague();\n\n  vm.setColorOnClock = function(team){\n      if(vm.currentLeague.onClock === team._id){\n        return {\"font-weight\": \"bold\"};\n      }\n  };\n\n  vm.getPlayers = function (position) {\n    DraftFactory.getPlayers(position, function (data) {\n      vm.available_players = data;\n    });\n  };\n\n  vm.startDraft = function(id){\n    var draftPackage = {\n      draftId: vm.currentLeague.draft._id,\n      draftOrder: vm.currentLeague.draftOrder\n\n    };\n    return DraftService.startDraft(draftPackage)\n      .then(function(response){\n        console.log(response);\n      }, function(error){\n        console.log(error);\n      });\n  };\n\n  vm.draftPlayer = function (id) {\n    if(DraftService.isOnClock() === true){\n\n      var draftPackage = {\n        draftId: vm.currentLeague.draft._id,\n        leagueId: vm.currentLeague._id,\n        team: vm.currentUser._id,\n        pick: id,\n      };\n      \n      return DraftService.draftPlayer(draftPackage)\n        .then(function(response){\n          console.log(response);\n          if(response === true){\n            $location.path(\"/draftBoard\");\n          }\n          if(response === false){\n            console.log(\"Error in PlayerControiller draftPlayer\");\n          }\n        }, function(error){\n          console.log(error);\n        });\n    }\n    if(DraftService.isOnClock() === false){\n      vm.message = \"You Are Not On The Clock!\";\n      vm.checkBox.value = false;\n      $timeout(function(){\n        vm.message = false;\n      }, 5000);\n    }\n  };\n\n  var getDraftedPlayers = function () {\n    DraftFactory.getDraftedPlayers(function (data) {\n      vm.allDraftedPlayers = data;\n    });\n  };\n  getDraftedPlayers();\n});\n","angular.module('UserController', []).controller('UserController', function ($scope, $q, $view, $location, $state, AuthenticationService, LeagueService) {\n    let vm = this;\n\n    vm.currentUser = {};\n    let getCurrentUser = AuthenticationService.currentUser();\n    getCurrentUser.then((response) => {\n        vm.currentUser = response;\n    }, (error) => {\n        console.log(error);\n    });\n\n    vm.currentLeague = LeagueService.league;\n\n    vm.message = \"\";\n\n    vm.tab = 1;\n\n    vm.setTab = function (tabId) {\n        vm.tab = tabId;\n    };\n\n    vm.isSet = function (tabId) {\n        return vm.tab === tabId;\n    };\n\n    vm.registerInfo = {\n        email: \"\",\n        userName: \"\",\n        firstName: \"\",\n        password: \"\"\n    };\n\n    vm.loginInfo = {\n        email: \"\",\n        password: \"\"\n    };\n\n    vm.registerNew = function () {\n        return AuthenticationService.register(vm.registerInfo)\n            .then((response) => {\n                $state.transitionTo('dashboard');\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    vm.login = function () {\n        return AuthenticationService.login(vm.loginInfo)\n            .then(function (response) {\n                if (response == \"Token Set!\") {\n                    $state.transitionTo('dashboard');\n                }\n                else {\n                    vm.message = response;\n                }\n            }, function (error) {\n                vm.message = \"Error: \" + error.status;\n                console.log(error);\n            });\n    };\n\n    vm.onSignIn = (googleUser) => {\n        console.log(\"Fired onSign In\");\n        if (googleUser) {\n            var profile = googleUser.getBasicProfile();\n            console.log(\"Email: \" + profile.getEmail());\n        }\n    };\n    \n    vm.dismissError = () => {\n        vm.message = \"\";\n    }\n\n});\n\n","angular.module(\"ChatFactory\", []).factory(\"ChatFactory\", function($http){\n\n    var factory = {};\n\n    factory.postMessage = function(message, callback){\n        $http.post(\"/message\", message).success(function(data, status){\n            callback(data, false);\n        })\n        .error(function(data, status){\n            callback(data, true);\n        });\n    };\n\n    factory.deleteAllChat = function(){\n        $http.post(\"/deleteAllChat\").success(function(data){\n            console.log(data);\n        });\n    };\n\n    return factory;\n});","angular.module(\"DraftFactory\", []).factory(\"DraftFactory\", function($http, $q){\n    var factory = {};\n\n    factory.downloadPlayers = function(){\n        $http.post(\"/downloadPlayers\").success(function(data){\n            console.log(data);\n        });\n    };\n\n    factory.getPlayers = function(position, callback){\n        $http.get(\"/getPlayers/\", {params: {position: position}}).success(function(output){\n            callback(output);\n        });\n    };\n\n    factory.deleteAllPlayers = function(callback){\n        $http.post(\"/deleteAllPlayers\").success(function(data){\n            callback(data);\n        });\n    };\n\n    factory.startDraft = function(draftPackage){\n        return $http.post(\"/startDraft\", draftPackage)\n            .then(function(response){\n                console.log(response);\n            }, function(error){\n                console.log(error);\n            });\n    };\n\n    factory.draftPlayer = function(draftPackage){\n        return $http.post(\"/draftPlayer\", draftPackage)\n            .then(function(response){\n                return response;\n            }, function(error){\n                console.log(error);\n            });\n    };\n\n    factory.getDraftedPlayers = function(callback){\n        $http.get(\"/getDraftedPlayers\").success(function(output){\n            callback(output);\n        });\n    };\n\n    factory.deleteAllDrafts = function(){\n        return $http.post(\"/deleteAllDrafts\");\n    };\n\n    return factory;\n});","angular.module(\"LeagueFactory\", []).factory(\"LeagueFactory\", function ($http, $stateParams) {\n    let factory = {};\n\n    factory.createLeague = (newLeagueInfo) => {\n        return $http.post(\"/createLeague\", newLeagueInfo)\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    factory.joinLeague = (leaguePack) => {\n        return $http.patch(\"/joinLeague/\", leaguePack)\n            .then(function (response) {\n                return response;\n            }, function (error) {\n                console.log(error);\n            });\n    };\n\n    factory.getLeague = (id) => {\n        return $http.get(\"/getLeague/\", { params: { _id: id } })\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n    \n    factory.newLeagueMessage = (messagePack) => {\n        return $http.post('/league/newMessage', messagePack)\n            .then((response) => {\n                return response\n            }, (error) => {\n                console.log(error);\n            });\n    };\n    \n    factory.updateTeamPick = (pickPack) => {\n        return $http.post('/league/' + $stateParams.leagueID, pickPack)\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    }\n\n    return factory;\n});","angular.module('UserFactory', []).factory('UserFactory', function ($http, $q) {\n  var factory = {};\n\n  factory.register = (registerInfo) => {\n    return $http.post(\"/register\", registerInfo)\n      .then((response) => {\n        return response;\n      }, (error) => {\n        console.log(error);\n    });\n  };\n\n  factory.login = (loginInfo) => {\n    return $http.post(\"/login\", loginInfo)\n      .then((response) => {\n        return response;\n      }, (error) => {\n        console.log(error);\n      });\n  };\n\n  return factory;\n});","angular.module('AuthenticationService', []).service('AuthenticationService', function ($window, $state, $rootScope, $q, UserFactory) {\n  let service = {};\n\n  const tokenStorage = {\n    setToken: (key, token) => {\n      return Promise.resolve().then(() => {\n        $window.localStorage.setItem(key, token);\n      });\n    },\n    getToken: (key) => {\n      return Promise.resolve().then(() => {\n        return $window.localStorage.getItem(key);\n      });\n    },\n    removeToken: (key) => {\n      return Promise.resolve().then(() => {\n        $window.localStorage.removeItem(key);\n      });\n    }\n  }\n\n  service.isLoggedIn = () => {\n    return tokenStorage.getToken('user-token')\n      .then((token) => {\n        if (token) {\n          let payload = token.split('.')[1];\n          payload = $window.atob(payload);\n          payload = JSON.parse(payload);\n          return payload.exp > Date.now() / 1000;\n        }\n        else {\n          return false;\n        }\n      }, (error) => {\n        console.log(error);\n      });\n  };\n\n  service.currentUser = function () {\n    return service.isLoggedIn()\n      .then((response) => {\n        if (response){\n          return tokenStorage.getToken('user-token')\n            .then((token) => {\n              let payload = token.split('.')[1];\n              payload = $window.atob(payload);\n              payload = JSON.parse(payload);\n\n              return {\n                _id: payload._id,\n                userName: payload.userName,\n                firstName: payload.firstName,\n                email: payload.email,\n                leagues: payload.leagues\n              };\n            }, (error) => {\n              console.log(error);\n            });\n        }\n      }, (error) => {\n        console.log(error);\n      });\n  };\n\n  service.updateToken = function (token) {\n    return tokenStorage.removeToken('user-token')\n      .then(() => {\n        return tokenStorage.setToken('user-token', token)\n          .then(() => {\n            return \"Token Set!\";\n          }, (error) => {\n            console.log(error);\n          })\n      }, (error) => {\n        console.log(error);\n      });\n  };\n\n  service.register = function (user, callback) {\n    return UserFactory.register(user)\n      .then((response) => {\n        if (response.data.token) {\n          return tokenStorage.setToken('user-token', response.data.token)\n            .then(() => {\n              return \"Token Set!\";\n            });\n        }\n        else if (response.message) {\n          return reponse.message;\n        }\n        else {\n          return \"Unknown Error\";\n        }\n      }, (error) => {\n        console.log(error);\n      });\n  };\n\n  service.login = (user) => {\n    return UserFactory.login(user)\n      .then(function (response) {\n        if (response.data.token) {\n          return tokenStorage.setToken('user-token', response.data.token)\n            .then(() => {\n              return \"Token Set!\"\n            }, (error) => {\n              console.log(error);\n            });\n        } else {\n          if (response.status == 401) {\n            return \"Incorrect Username or Password!\";\n          }\n          else {\n            return \"Unknown Error!\"\n          }\n        }\n      }, function (err) {\n        console.log(err);\n      });\n  };\n\n  service.currentUserLogOut =  () => {\n    $window.localStorage.clear();\n    $rootScope = $rootScope.$new(true);\n  };\n\n  return service;\n});\n","angular.module('DraftService', []).service('DraftService', function ($window, $state, $q, DraftFactory, AuthenticationService, LeagueService) {\n    var service = {};\n\n    var vm = this;\n\n    // vm.currentUser = AuthenticationService.currentUser();\n\n    // vm.isLoggedIn = AuthenticationService.isLoggedIn();\n\n    // vm.currentLeague = LeagueService.currentLeague();\n\n    service.startDraft = function(draftPackage){\n        return DraftFactory.startDraft(draftPackage)\n            .then(function(reponse){\n                console.log(response);\n            }, function(error){\n                console.log(error);\n            });\n    };\n\n    service.isOnClock = function(){\n        if(vm.currentLeague.onClock === vm.currentUser._id){\n            return true;\n        }\n        else{\n            return false;\n        }\n    };\n\n    service.draftPlayer = function(draftPackage){\n        return DraftFactory.draftPlayer(draftPackage)\n            .then(function(response){\n                if(response.statusText === \"OK\"){\n                    return true;\n                }\n                else{\n                    return false;\n                }\n            }, function(error){\n                console.log(error);\n            });\n    };\n\n    service.undraftedPlayers = function () {\n\n    };\n\n    service.draftedPlayers = function () {\n\n    };\n\n    service.downloadPlayers = function(){\n        DraftFactory.downloadPlayers();\n    };\n\n    service.deleteAllChat = function(){\n        ChatFactory.deleteAllChat();\n    };\n\n    service.deleteAllDrafts = function(){\n        DraftFactory.deleteAllDrafts();\n    };\n\n    service.deleteAllPlayers = function(callback){\n        DraftFactory.deleteAllPlayers(function(data){\n            callback(data);\n        });\n    };\n\n    return service;\n});","angular.module(\"LeagueService\", []).service(\"LeagueService\", function ($window, $state, $stateParams, $q, $location, LeagueFactory, ChatFactory, AuthenticationService) {\n    let service = {};\n    let vm = this;\n\n    let deferred = $q.defer();\n\n    //Current User\n    vm.currentUser = {};\n    let getCurrentUser = AuthenticationService.currentUser();\n    getCurrentUser.then((response) => {\n        vm.currentUser = response;\n    }, (error) => {\n        console.log(error);\n    });\n\n    //Current League\n    let currentLeague = {};\n    service.getLeague = () => {\n        return LeagueFactory.getLeague($stateParams.leagueID)\n            .then((response) => {\n                if (response.data) {\n                    currentLeague = response.data;\n                    return response.data;\n                }\n            }, (error) => {\n                console.log(error);\n            });\n    };\n    \n    service.draftPositions = () => {\n        \n    };\n\n    service.createNewLeague = function (newLeagueInfo) {\n        return LeagueFactory.createLeague(newLeagueInfo)\n            .then((response) => {\n                return AuthenticationService.updateToken(response.data.token)\n                    .then(() => {\n                        $state.transitionTo('dashboard');\n                    }, (error) => {\n                        console.log(error);\n                    });\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    service.joinLeague = function (joinPac) {\n        return LeagueFactory.joinLeague(joinPac)\n            .then((response) => {\n                if (response.data.token) {\n                    return AuthenticationService.updateToken(response.data.token)\n                        .then(() => {\n                            return \"League Joined\";\n                        }, (error) => {\n                            console.log(error);\n                        });\n                }\n                else {\n                    return response.data.message;\n                }\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    service.newLeagueMessage = (messagePack) => {\n        return LeagueFactory.newLeagueMessage(messagePack)\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n    \n    service.updateTeamPick = (pickPack) => {\n        return LeagueFactory.updateTeamPick(pickPack)\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    return service;\n});"]}