{"version":3,"sources":["app.js","controllers/AppController.js","controllers/ChatController.js","controllers/PlayerController.js","factories/ChatFactory.js","factories/DraftFactory.js","factories/LeagueFactory.js","factories/UserFactory.js","services/AuthenticationService.js","services/DraftService.js","services/LeagueService.js","controllers/dashboard/DashboardController.js","controllers/league/LeagueCommishController.js","controllers/league/LeagueController.js","controllers/league/LeagueJoinController.js","controllers/league/LeagueNewController.js","controllers/user/UserLoginController.js","controllers/user/UserRegisterController.js","controllers/user/UserSettingsController.js"],"names":["DraftApp","angular","module","config","$urlRouterProvider","otherwise","$stateProvider","state","url","templateProvider","views","content","controller","$templateCache","controllerAs","get","authenticate","header","league","log","LeagueService","$stateParams","console","run","onStart","trans","transitionTo","isLoggedIn","$transitions","$location","$state","$q","AuthenticationService","getLoginStatus","response","AuthService","DraftService","vm","this","then","error","currentUser","downloadPlayers","data","deleteAllPlayers","logOut","directive","$scope","element","attrs","bind","event","which","$apply","$eval","ngEnter","preventDefault","ChatFactory","currentLeague","messages","message","filterText","socket","io","connect","on","reverse","unshift","sendMessage","postMessage","result","err","window","alert","$confirm","$timeout","DraftFactory","available_players","allDraftedPlayers","setColorOnClock","team","onClock","_id","font-weight","getPlayers","position","startDraft","id","draftPackage","draftId","draft","draftOrder","draftPlayer","isOnClock","leagueId","pick","path","checkBox","value","getDraftedPlayers","factory","$http","callback","post","success","status","deleteAllChat","newDraftObject","leagueID","params","output","deleteAllDrafts","createLeague","newLeagueInfo","joinLeague","leaguePack","patch","getLeague","newLeagueMessage","messagePack","updateTeamPick","pickPack","deleteLeagueTeam","getUserLeagues","user_id","register","registerInfo","login","loginInfo","service","$window","$rootScope","UserFactory","tokenStorage","setToken","key","token","Promise","resolve","localStorage","setItem","getToken","getItem","removeToken","removeItem","payload","split","atob","JSON","parse","exp","Date","now","userName","firstName","email","leagues","updateToken","user","reponse","clear","$new","x","teams","length","draftField","size","forEach","_user","push","_loop","joinDraft","statusText","LeagueFactory","defer","createNewLeague","joinPac","isCommish","createPicksList","userID","commish","leagueField","title","currentTeams","draftPick","index","splice","onDrop","srcList","srcIndex","targetList","targetIndex","updatePick","reload","deleteTeam","team_id","$view","$uibModal","newMessage","modalInstance","open","animation","templateUrl","scope","backdrop","cancel","dismiss","dismissError","code","league_code","moveFocus","nextId","$","focus","messsage","leagueName","newLeague","leagueSize","password","onSignIn","googleUser","profile","getBasicProfile","getEmail","registerNew","tab","setTab","tabId","isSet"],"mappings":"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","file":"app.js","sourcesContent":["let DraftApp = angular.module(\"DraftApp\", [\"ngRoute\", \"ngMessages\", \"ngAnimate\",\n    \"ui.router\", \"ui.bootstrap\", \"dndLists\", \"angular-confirm\",\n    \"AppController\", \"ChatController\", \"DashboardController\", \"LeagueController\", \"LeagueCommishController\", \"LeagueJoinController\", \"LeagueNewController\", \"PlayerController\", \"UserSettingsController\", \"UserLoginController\", \"UserRegisterController\",\n    \"AuthenticationService\", \"DraftService\", \"LeagueService\",\n    \"ChatFactory\", \"DraftFactory\", \"LeagueFactory\", \"UserFactory\"]);\n\nangular.module('DraftApp').config(function ($stateProvider, $urlRouterProvider) {\n\n    $urlRouterProvider.otherwise(\"/\");\n\n    $stateProvider\n        .state(\"index\", {\n            url: \"/\",\n            views: {\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('welcome.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        })\n        .state(\"login\", {\n            url: \"/login\",\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: \"vm\",\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('auth/login.html');\n                    },\n                    controller: \"UserLoginController\",\n                    controllerAs: \"vm\"\n                },\n            }\n        })\n        .state('register', {\n            url: \"/register\",\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: 'vm'\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('auth/register.html');\n                    },\n                    controller: \"UserRegisterController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        })\n        .state(\"settings\", {\n            url: \"/settings\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: 'vm',\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('auth/settings.html');\n                    },\n                    controller: \"UserSettingsController\",\n                    controllerAs: \"vm\",\n                }\n            }\n        })\n        .state(\"dashboard\", {\n            url: \"/dashboard\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: 'vm',\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('dashboard.html');\n                    },\n                    controller: \"DashboardController\",\n                    controllerAs: \"vm\",\n                }\n            }\n        })\n        .state('newLeague', {\n            url: \"/league/new\",\n            authenticate: true,\n            views: {\n                'header': {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: 'vm'\n                },\n                'content': {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('league/league.new.html');\n                    },\n                    controller: \"LeagueNewController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        })\n        .state('joinLeague', {\n            url: \"/league/join\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: 'vm'\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('league/league.join.html');\n                    },\n                    controller: \"LeagueJoinController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        })\n        .state('league', {\n            url: \"/league/:leagueID/index\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: 'vm'\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('league/league.index.html');\n                    },\n                    controller: \"LeagueController\",\n                    controllerAs: \"vm\",\n                    resolve: {\n                        league: function(LeagueService, $stateParams) {\n                            console.log(\"Start Resolve\");\n                            return LeagueService.get();\n                        }\n                    }\n                }\n            }\n        })\n        .state('leagueCommish', {\n            url: \"/league/:leagueID/commish\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: 'vm'\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('league/league.commish.html');\n                    },\n                    controller: \"LeagueCommishController\",\n                    controllerAs: \"vm\",\n                    // resolve: {\n                    //     league: (LeagueService, $stateParams) => {\n                    //         console.log($stateParams)\n                    //         // let theLeague = LeagueService.getLeague();\n                    //         // theLeague.then((response) => {\n\n                    //         // }, (error) => {\n                    //         //     console.log(error);\n                    //         // });\n                    //     }\n                    // }\n                }\n            }\n        })\n        .state(\"availablePlayers\", {\n            url: \"/availablePlayers\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: \"vm\",\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('availablePlayers.html');\n                    },\n                    controller: \"PlayerController\",\n                    controllerAs: \"vm\",\n                }\n            }\n        })\n        .state(\"draftboard\", {\n            url: \"/draftboard\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: \"vm\"\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('draftBoard.html');\n                    },\n                    controller: \"PlayerController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        })\n        .state(\"chat\", {\n            url: \"/chat\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: \"vm\"\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('chat.html');\n                    },\n                    controller: \"ChatController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        });\n});\n\nangular.module('DraftApp').run(function ($transitions, $location, $state, $q, AuthenticationService) {\n    $transitions.onStart({ to: '*' }, function (trans) {\n        let AuthService = trans.injector().get('AuthenticationService');\n        if (trans.to().authenticate && !AuthService.isLoggedIn()) {\n            $state.transitionTo('login');\n        }\n    });\n});","angular.module('AppController', []).controller('AppController', function (AuthenticationService, DraftService, LeagueService) {\n\n  let vm = this;\n  \n  vm.isLoggedIn = false;\n  let getLoginStatus = AuthenticationService.isLoggedIn();\n  getLoginStatus.then((response) => {\n    if (response == true) {\n      vm.isLoggedIn = true;\n    }\n    if (response == false) {\n      vm.isLoggedIn = false;\n    }\n  }, (error) => {\n    console.log(error);\n  });\n      \n  vm.currentUser = {};\n  let getCurrentUser = AuthenticationService.currentUser();\n  getCurrentUser.then((response) => {\n    vm.currentUser = response;\n  }, (error) => {\n    console.log(error);\n  });\n\n  \n    vm.downloadPlayers = function(){\n      DraftService.downloadPlayers(function(data){\n        console.log(data);\n      });\n    };\n  \n    vm.deleteAllPlayers = function(){\n      DraftService.deleteAllPlayers(function(data){\n        console.log(data);\n      });\n    };\n  \n  vm.logOut = () => {\n    AuthenticationService.logOut();\n  };\n});","angular.module('ngEnter', []).directive('ngEnter', function ($scope, element, attrs) {\n\n    element.bind(\"keypress\", function (event) {\n        if (event.which === 13) {\n            $scope.$apply(function () {\n                $scope.$eval(attrs.ngEnter);\n            });\n            event.preventDefault();\n        }\n    });\n});\n\nangular.module('ChatController', []).controller('ChatController', function ($scope, AuthenticationService, LeagueService, ChatFactory) {\n\n    var vm = this;\n\n    vm.currentUser = AuthenticationService.currentUser();\n\n    vm.currentLeague = LeagueService.currentLeague();\n\n    vm.messages = [];\n\n    vm.message = \"\";\n    vm.filterText = \"\";\n\n    \n    var socket = io.connect();\n\n    socket.on(\"pastMessages\", function (data) {\n        $scope.$apply(function(){\n            vm.messages = data.reverse();\n        });\n    });\n\n    socket.on(\"receiveMessage\", function(data){\n        $scope.$apply(function(){\n            vm.messages.unshift(data);\n        });\n    });\n\n    vm.sendMessage = function () {\n        // var chatMessage = {\n        //     \"_id\": vm.currentLeague.chat._id,\n        //     \"userName\": vm.currentUser.firstName,\n        //     \"message\": vm.message\n        // };\n        LeagueService.postMessage(vm.message, function (result, err) {\n            if (err) {\n                window.alert(\"Error!\");\n            }\n            // else{\n            //     socket.emit(\"receiveMessage\", result);\n            //     vm.message = \"\";\n            // }\n        });\n    };\n});","angular.module('PlayerController', []).controller('PlayerController', function ($scope, $location, $confirm, $timeout, $q, DraftFactory, AuthenticationService, DraftService, LeagueService) {\n\n  var vm = this;\n\n  vm.available_players = [];\n\n  vm.allDraftedPlayers = [];\n\n  vm.message = \"\";\n\n  vm.currentUser = AuthenticationService.currentUser();\n\n  vm.currentLeague = LeagueService.currentLeague();\n\n  vm.setColorOnClock = function(team){\n      if(vm.currentLeague.onClock === team._id){\n        return {\"font-weight\": \"bold\"};\n      }\n  };\n\n  vm.getPlayers = function (position) {\n    DraftFactory.getPlayers(position, function (data) {\n      vm.available_players = data;\n    });\n  };\n\n  vm.startDraft = function(id){\n    var draftPackage = {\n      draftId: vm.currentLeague.draft._id,\n      draftOrder: vm.currentLeague.draftOrder\n\n    };\n    return DraftService.startDraft(draftPackage)\n      .then(function(response){\n        console.log(response);\n      }, function(error){\n        console.log(error);\n      });\n  };\n\n  vm.draftPlayer = function (id) {\n    if(DraftService.isOnClock() === true){\n\n      var draftPackage = {\n        draftId: vm.currentLeague.draft._id,\n        leagueId: vm.currentLeague._id,\n        team: vm.currentUser._id,\n        pick: id,\n      };\n      \n      return DraftService.draftPlayer(draftPackage)\n        .then(function(response){\n          console.log(response);\n          if(response === true){\n            $location.path(\"/draftBoard\");\n          }\n          if(response === false){\n            console.log(\"Error in PlayerControiller draftPlayer\");\n          }\n        }, function(error){\n          console.log(error);\n        });\n    }\n    if(DraftService.isOnClock() === false){\n      vm.message = \"You Are Not On The Clock!\";\n      vm.checkBox.value = false;\n      $timeout(function(){\n        vm.message = false;\n      }, 5000);\n    }\n  };\n\n  var getDraftedPlayers = function () {\n    DraftFactory.getDraftedPlayers(function (data) {\n      vm.allDraftedPlayers = data;\n    });\n  };\n  getDraftedPlayers();\n});\n","angular.module(\"ChatFactory\", []).factory(\"ChatFactory\", function($http){\n\n    var factory = {};\n\n    factory.postMessage = function(message, callback){\n        $http.post(\"/message\", message).success(function(data, status){\n            callback(data, false);\n        })\n        .error(function(data, status){\n            callback(data, true);\n        });\n    };\n\n    factory.deleteAllChat = function(){\n        $http.post(\"/deleteAllChat\").success(function(data){\n            console.log(data);\n        });\n    };\n\n    return factory;\n});","angular.module(\"DraftFactory\", []).factory(\"DraftFactory\", function($http, $stateParams){\n    var factory = {};\n\n    factory.startDraft = (newDraftObject) => {\n        return $http.post(\"/league/\" + $stateParams.leagueID + \"/draft/new\", newDraftObject)\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    factory.downloadPlayers = function(){\n        $http.post(\"/downloadPlayers\").success(function(data){\n            console.log(data);\n        });\n    };\n\n    factory.getPlayers = function(position, callback){\n        $http.get(\"/getPlayers/\", {params: {position: position}}).success(function(output){\n            callback(output);\n        });\n    };\n\n    factory.deleteAllPlayers = function(callback){\n        $http.post(\"/deleteAllPlayers\").success(function(data){\n            callback(data);\n        });\n    };\n\n    factory.draftPlayer = function(draftPackage){\n        return $http.post(\"/draftPlayer\", draftPackage)\n            .then(function(response){\n                return response;\n            }, function(error){\n                console.log(error);\n            });\n    };\n\n    factory.getDraftedPlayers = function(callback){\n        $http.get(\"/getDraftedPlayers\").success(function(output){\n            callback(output);\n        });\n    };\n\n    factory.deleteAllDrafts = function(){\n        return $http.post(\"/deleteAllDrafts\");\n    };\n\n    return factory;\n});","angular.module(\"LeagueFactory\", []).factory(\"LeagueFactory\", function ($http, $stateParams) {\n    let factory = {};\n\n    factory.createLeague = (newLeagueInfo) => {\n        return $http.post(\"/createLeague\", newLeagueInfo)\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    factory.joinLeague = (leaguePack) => {\n        return $http.patch(\"/joinLeague/\", leaguePack)\n            .then(function (response) {\n                return response;\n            }, function (error) {\n                console.log(error);\n            });\n    };\n\n    factory.getLeague = (id) => {\n        return $http.get(\"/getLeague/\", { params: { _id: id } })\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n    \n    factory.newLeagueMessage = (messagePack) => {\n        return $http.post('/league/newMessage', messagePack)\n            .then((response) => {\n                return response\n            }, (error) => {\n                console.log(error);\n            });\n    };\n    \n    factory.updateTeamPick = (pickPack) => {\n        return $http.post('/league/' + $stateParams.leagueID, pickPack)\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n    \n    factory.deleteLeagueTeam = (team) => {\n        console.log(team);\n        return $http.post(\"/league/\" + $stateParams.leagueID + \"/deleteLeagueTeam\", team)\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n    \n    factory.getUserLeagues = (user_id) => {\n        return $http.get('/leagues/user/' + user_id)\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    return factory;\n});","angular.module('UserFactory', []).factory('UserFactory', function ($http) {\n  let factory = {};\n\n  factory.register = (registerInfo) => {\n    return $http.post(\"/register\", registerInfo)\n      .then((response) => {\n        return response;\n      }, (error) => {\n        console.log(error);\n        return error;\n    });\n  };\n\n  factory.login = (loginInfo) => {\n    return $http.post(\"/login\", loginInfo)\n      .then((response) => {\n        return response;\n      }, (error) => {\n        console.log(error);\n        return error;\n      });\n  };\n\n  return factory;\n});","angular.module('AuthenticationService', []).service('AuthenticationService', function ($window, $state, $rootScope, $q, UserFactory) {\n  let service = {};\n\n  const tokenStorage = {\n    setToken: (key, token) => {\n      return Promise.resolve().then(() => {\n        $window.localStorage.setItem(key, token);\n      });\n    },\n    getToken: (key) => {\n      return Promise.resolve().then(() => {\n        return $window.localStorage.getItem(key);\n      });\n    },\n    removeToken: (key) => {\n      return Promise.resolve().then(() => {\n        $window.localStorage.removeItem(key);\n      });\n    }\n  }\n\n  //Is A User Logged In\n  service.isLoggedIn = () => {\n    return tokenStorage.getToken('user-token')\n      .then((token) => {\n        if (token) {\n          let payload = token.split('.')[1];\n          payload = $window.atob(payload);\n          payload = JSON.parse(payload);\n          return payload.exp > Date.now() / 1000;\n        }\n        else {\n          return false;\n        }\n      }, (error) => {\n        console.log(error);\n      });\n  };\n\n  //Return The Current User\n  service.currentUser = function () {\n    return service.isLoggedIn()\n      .then((response) => {\n        if (response) {\n          return tokenStorage.getToken('user-token')\n            .then((token) => {\n              let payload = token.split('.')[1];\n              payload = $window.atob(payload);\n              payload = JSON.parse(payload);\n\n              return {\n                _id: payload._id,\n                userName: payload.userName,\n                firstName: payload.firstName,\n                email: payload.email,\n                leagues: payload.leagues\n              };\n            }, (error) => {\n              console.log(error);\n            });\n        }\n      }, (error) => {\n        console.log(error);\n      });\n  };\n\n  service.updateToken = (token) => {\n    return tokenStorage.removeToken('user-token')\n      .then(() => {\n        return tokenStorage.setToken('user-token', token)\n          .then(() => {\n            return \"Token Set!\";\n          }, (error) => {\n            console.log(error);\n          })\n      }, (error) => {\n        console.log(error);\n      });\n  };\n\n  service.register = function (user, callback) {\n    return UserFactory.register(user)\n      .then((response) => {\n        if (response.data.token) {\n          return tokenStorage.setToken('user-token', response.data.token)\n            .then(() => {\n              return \"Token Set!\";\n            });\n        }\n        else if (response.message) {\n          return reponse.message;\n        }\n        else {\n          return \"Unknown Error\";\n        }\n      }, (error) => {\n        console.log(error);\n      });\n  };\n\n  service.login = (user) => {\n    return UserFactory.login(user)\n      .then((response) => {\n        if (response.data.token) {\n          return tokenStorage.setToken('user-token', response.data.token)\n            .then(() => {\n              return \"Token Set!\"\n            }, (error) => {\n              console.log(error);\n            });\n        }\n        if (response.status == 401) {\n          return \"Incorrect Username or Password!\";\n        }\n        else {\n          return \"Unknown Error!\"\n        }\n      }, (error) => {\n        console.log(error);\n      });\n  };\n\n  service.logOut = () => {\n    $window.localStorage.clear();\n    $rootScope = $rootScope.$new(true);\n  };\n\n  return service;\n});\n","angular.module('DraftService', []).service('DraftService', function ($window, $state, $q, DraftFactory, AuthenticationService, LeagueService) {\n    let service = {};\n\n    service.startDraft = () => {\n\n        //Gets League from LeagueService\n        return LeagueService.getLeague().then((response) => {\n\n            //Checks if any teams have not been assigned a draft pick\n            for (let x = 0; x < response.teams.length; x++) {\n                if (!response.teams[x].pick) {\n                    return { error: \"Please Assign All Picks\" };\n                }\n            }\n\n            //Sets the field for a new draft\n            let draftField = [];\n            for (let x = 1; x <= response.size; x++) {\n                let position = { position: x };\n                response.teams.forEach((team) => {\n                    if (team.pick == x) {\n                        position._user = team._user._id;\n                    }\n                });\n                draftField.push(position);\n            }\n\n            let newDraftObject = {};\n            newDraftObject.teams = draftField;\n\n            return DraftFactory.startDraft(newDraftObject)\n                .then((response) => {\n                    return LeagueService.getLeague()\n                        .then((response) => {\n                            return response;\n                        }, (error) => {\n                            console.log(error);\n                        });\n                }, (error) => {\n                    console.log(error);\n                });\n        }, (error) => {\n            console.log(error);\n        });\n    };\n\n    service.joinDraft = () => {\n        let getCurrentLeague = LeagueService.getLeague();\n        getCurrentLeague.then((response) => {\n            //Get draft object from league.draft_id\n        })\n    };\n\n    service.onClock = () => {\n\n    };\n\n    service.draftPlayer = function (draftPackage) {\n        return DraftFactory.draftPlayer(draftPackage)\n            .then(function (response) {\n                if (response.statusText === \"OK\") {\n                    return true;\n                }\n                else {\n                    return false;\n                }\n            }, function (error) {\n                console.log(error);\n            });\n    };\n\n    service.downloadPlayers = function () {\n        DraftFactory.downloadPlayers();\n    };\n\n    return service;\n});","angular.module(\"LeagueService\", []).service(\"LeagueService\", function ($window, $state, $stateParams, $q, $location, LeagueFactory, AuthenticationService) {\n    let service = {};\n\n    let deferred = $q.defer();\n\n    //Current User\n    let currentUser = {};\n    let getCurrentUser = AuthenticationService.currentUser();\n    getCurrentUser.then((response) => {\n        currentUser = response;\n    }, (error) => {\n        console.log(error);\n    });\n\n    //Current League\n    let currentLeague = {};\n    service.getLeague = () => {\n        if ($stateParams.leagueID) {\n            return LeagueFactory.getLeague($stateParams.leagueID)\n                .then((response) => {\n                    if (response.data) {\n                        currentLeague = response.data;\n                        return response.data;\n                    }\n                }, (error) => {\n                    console.log(error);\n                });\n        }\n\n    };\n\n    service.createNewLeague = function (newLeagueInfo) {\n        return LeagueFactory.createLeague(newLeagueInfo)\n            .then((response) => {\n                return AuthenticationService.updateToken(response.data.token)\n                    .then(() => {\n                        $state.transitionTo('dashboard');\n                    }, (error) => {\n                        console.log(error);\n                    });\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    service.joinLeague = function (joinPac) {\n        return LeagueFactory.joinLeague(joinPac)\n            .then((response) => {\n                if (response.data.token) {\n                    return AuthenticationService.updateToken(response.data.token)\n                        .then(() => {\n                            return \"League Joined\";\n                        }, (error) => {\n                            console.log(error);\n                        });\n                }\n                else {\n                    return response.data.message;\n                }\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    service.newLeagueMessage = (messagePack) => {\n        return LeagueFactory.newLeagueMessage(messagePack)\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    service.updateTeamPick = (pickPack) => {\n        return LeagueFactory.updateTeamPick(pickPack)\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    service.deleteLeagueTeam = (team) => {\n        return LeagueFactory.deleteLeagueTeam(team)\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    }\n\n    service.isCommish = (id) => {\n\n    };\n\n    service.getUserLeagues = (id) => {\n        return LeagueFactory.getUserLeagues(id)\n            .then((response) => {\n                return response;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    return service;\n});","angular.module('DashboardController', []).controller('DashboardController', function (AuthenticationService, LeagueService) {\n    let vm = this;\n\n    vm.currentUser = AuthenticationService.currentUser().then((response) => {\n        vm.currentUser = response;\n        return LeagueService.getUserLeagues(response._id).then((leagues) => {\n            vm.currentLeague = leagues.data\n        }, (error) => {\n            console.log(error);\n        })\n    }, (error) => {\n        console.log(error);\n    });\n    \n});","angular.module('LeagueCommishController', []).controller('LeagueCommishController', function ($rootScope, $scope, $q, $state, AuthenticationService, LeagueService) {\n    let vm = this;\n\n    vm.message = \"\";\n\n    //Current User\n    vm.currentUser = {};\n    let getCurrentUser = AuthenticationService.currentUser();\n    getCurrentUser.then((response) => {\n        vm.currentUser = response;\n        return;\n    }, (error) => {\n        console.log(error);\n    });\n\n    //Current League\n    vm.league = {};\n    let getLeague = LeagueService.getLeague();\n    getLeague.then((response) => {\n        vm.league = response;\n        createPicksList(response);\n    }, (error) => {\n        console.log(error);\n    });\n\n    //Commish Auth\n    vm.isCommish = (userID, league) => {\n        let commish = false;\n        if (userID && league) {\n            league.forEach((element) => {\n                if (element == userID) {\n                    commish = true;\n                }\n            });\n            return commish;\n        }\n        return commish;\n    };\n\n    vm.leagueField = [];\n\n    let createPicksList = (league) => {\n        if (league) {\n            let draftOrder = { title: \"Draft Order\", teams: [] };\n            let size = league.size;\n            let currentTeams = league.teams;\n            for (let x = 1; x <= size; x++) {\n                let draftPick = { 'pick': x };\n                // angular.forEach(currentTeams, (team, index) => {\n                //     if (team.pick == x) {\n                //         draftPick = team;\n                //         currentTeams.splice(index, 1);\n                //     }\n                // });\n                currentTeams.forEach((team, index) => {\n                    if (team.pick == x) {\n                        draftPick = team;\n                        currentTeams.splice(index, 1);\n                    }\n                });\n                draftOrder.teams.push(draftPick);\n            }\n            vm.leagueField.push(draftOrder);\n            if (currentTeams.length > 0) {\n                let teams = { title: \"Needs Pick\", teams: [] };\n                currentTeams.forEach((team) => {\n                    teams.teams.push(team);\n                });\n                vm.leagueField.push(teams);\n            }\n        }\n    };\n\n    $scope.onDrop = function (srcList, srcIndex, targetList, targetIndex) {\n        // Copy the item from source to target.\n        targetList.splice(targetIndex, 0, srcList[srcIndex]);\n        // Remove the item from the source, possibly correcting the index first.\n        // We must do this immediately, otherwise ng-repeat complains about duplicates.\n        if (srcList == targetList && targetIndex <= srcIndex) srcIndex++;\n        srcList.splice(srcIndex, 1);\n        for (let x = 0; x < targetList.length; x++) {\n            if (targetList[x]._id == this.team._id) {\n                let team = this.team;\n                let pick = x + 1;\n                return updatePick(team, pick).then(() => {\n                    return true;\n                }, (error) => {\n                    console.log(error);\n                });\n            }\n        }\n        // By returning true from dnd-drop we signalize we already inserted the item.\n        return true;\n    };\n\n    let updatePick = (team, pick) => {\n        let pickPack = {\n            pick: pick,\n            team: team\n        };\n        return LeagueService.updateTeamPick(pickPack)\n            .then((response) => {\n                $state.reload();\n                return;\n            }, (error) => {\n                console.log(error);\n            });\n    };\n    \n    vm.deleteTeam = (id) => {\n        let team = {\n            team_id: id\n        };\n        return LeagueService.deleteLeagueTeam(team)\n            .then((response) => {\n                $state.reload();\n                return\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n});","angular.module('LeagueController', []).controller('LeagueController', function ($rootScope, $scope, $q, $view, $uibModal, $confirm, $location, $state, AuthenticationService, LeagueService, DraftService) {\n\n    let vm = this;\n\n    vm.message = \"\";\n\n    //Current User\n    vm.currentUser = {};\n    let getCurrentUser = AuthenticationService.currentUser();\n    getCurrentUser.then((response) => {\n        vm.currentUser = response;\n        return;\n    }, (error) => {\n        console.log(error);\n    });\n\n    //Current League\n    vm.league = {};\n    let getLeague = LeagueService.getLeague();\n    getLeague.then((response) => {\n        vm.league = response;\n        return;\n    }, (error) => {\n        console.log(error);\n    });\n\n    //Commish Auth\n    vm.isCommish = (userID, league) => {\n        let commish = false;\n        if (userID && league) {\n            league.forEach((element) => {\n                if (element == userID) {\n                    commish = true;\n                }\n            });\n            return commish;\n        }\n        return commish;\n    };\n\n    //Open New League Message Modal\n    vm.newMessage = () => {\n        $scope.modalInstance = $uibModal.open({\n            animation: true,\n            size: \"lg\",\n            templateUrl: 'newMessageModal.html',\n            controller: 'LeagueController',\n            controllerAs: 'vm',\n            scope: $scope,\n            backdrop: \"static\",\n        });\n    };\n\n    vm.sendMessage = () => {\n\n        let messagePack = {\n            \"leagueID\": vm.league._id,\n            \"userID\": vm.currentUser._id,\n            \"message\": vm.newLeagueMessage\n        };\n\n        return LeagueService.newLeagueMessage(messagePack)\n            .then((response) => {\n                console.log(response);\n                if (response.statusText == \"OK\") {\n                    $state.reload();\n                }\n                console.log(response);\n            }, (error) => {\n                console.log(error);\n            });\n    };\n    \n    vm.cancel = () => {\n        $scope.modalInstance.dismiss('cancel');\n    };\n\n    vm.dismissError = () => {\n        vm.message = \"\";\n    };\n\n    vm.startDraft = () => {\n        // console.log(\"Start Draft\");\n        let startLeagueDraft = DraftService.startDraft();\n        startLeagueDraft.then((response) => {\n            console.log(response);\n            if (response.error) {\n                vm.message = response.error;\n            }\n        }, (error) => {\n            console.log(error);\n        });\n    };\n});","angular.module('LeagueJoinController', []).controller('LeagueJoinController', function($q, $rootScope, $scope, $state, AuthenticationService, LeagueService) {\n    let vm = this;\n\n    vm.message = \"\";\n\n    //Current User\n    vm.currentUser = {};\n    let getCurrentUser = AuthenticationService.currentUser();\n    getCurrentUser.then((response) => {\n        vm.currentUser = response;\n        return;\n    }, (error) => {\n        console.log(error);\n    });\n\n    //Join League\n    vm.joinLeague = () => {\n        let code = \"\";\n        for (var x in vm.data) {\n            code += vm.data[x];\n        }\n        let leaguePack = {\n            \"user_id\": vm.currentUser._id,\n            \"league_code\": code,\n        };\n        return LeagueService.joinLeague(leaguePack)\n            .then((response) => {\n                if (response == \"League Joined\") {\n                    $state.transitionTo('dashboard');\n                }\n                else {\n                    vm.message = response;\n                }\n\n            }, (error) => {\n                console.log(error);\n            });\n    };\n    \n    //Moves Focus After Input\n    vm.moveFocus = (nextId) => {\n        $('#' + nextId).focus();\n    };\n});","angular.module('LeagueNewController', []).controller('LeagueNewController', function ($q, $state, AuthenticationService, LeagueService) {\n    let vm = this;\n\n    vm.messsage = \"\";\n\n    //Current User\n    vm.currentUser = {};\n    let getCurrentUser = AuthenticationService.currentUser();\n    getCurrentUser.then((response) => {\n        vm.currentUser = response;\n        return;\n    }, (error) => {\n        console.log(error);\n    });\n\n    //Create New League\n    vm.createNewLeague = () => {\n        let newLeagueInfo = {\n            \"leagueName\": vm.newLeague.leagueName,\n            \"leagueSize\": vm.newLeague.leagueSize,\n            \"user_id\": vm.currentUser._id\n        };\n\n        return LeagueService.createNewLeague(newLeagueInfo)\n            .then((response) => {\n                $state.transitionTo('dashboard');\n            }, (error) => {\n                console.log(error);\n            });\n    };\n})","angular.module('UserLoginController', []).controller('UserLoginController', function ($state, AuthenticationService) {\n    let vm = this;\n\n    vm.message = \"\";\n\n    vm.loginInfo = {\n        email: \"\",\n        password: \"\"\n    };\n\n    vm.login = () => {\n        return AuthenticationService.login(vm.loginInfo)\n            .then((response) => {\n                if (response == \"Token Set!\") {\n                    $state.transitionTo('dashboard');\n                }\n                else {\n                    vm.message = response;\n                }\n            }, (error) => {\n                console.log(error);\n            });\n    };\n    \n    vm.onSignIn = (googleUser) => {\n        console.log(\"Fired onSign In\");\n        if (googleUser) {\n            var profile = googleUser.getBasicProfile();\n            console.log(\"Email: \" + profile.getEmail());\n        }\n    };\n\n    vm.dismissError = () => {\n        vm.message = \"\";\n    };\n});","angular.module('UserRegisterController', []).controller('UserRegisterController', function ($state, AuthenticationService) {\n    let vm = this;\n\n    vm.message = \"\";\n\n    vm.registerInfo = {\n        email: \"\",\n        userName: \"\",\n        firstName: \"\",\n        password: \"\"\n    };\n\n    vm.registerNew = function () {\n        return AuthenticationService.register(vm.registerInfo)\n            .then((response) => {\n                $state.transitionTo('dashboard');\n            }, (error) => {\n                console.log(error);\n            });\n    };\n\n    vm.dismissError = () => {\n        vm.message = \"\";\n    };\n});","angular.module('UserSettingsController', []).controller('UserSettingsController', function (AuthenticationService) {\n    let vm = this;\n\n    vm.message = \"\";\n\n    vm.currentUser = {};\n    let getCurrentUser = AuthenticationService.currentUser();\n    getCurrentUser.then((response) => {\n        vm.currentUser = response;\n    }, (error) => {\n        console.log(error);\n    });\n\n    vm.tab = 1;\n\n    vm.setTab = (tabId) => {\n        vm.tab = tabId;\n    };\n\n    vm.isSet = (tabId) => {\n        return vm.tab === tabId;\n    };\n\n    \n\n    \n\n    \n\n    \n\n    \n    \n    vm.dismissError = () => {\n        vm.message = \"\";\n    }\n\n});\n\n"]}