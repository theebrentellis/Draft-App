{"version":3,"sources":["app.js","controllers/AppController.js","controllers/ChatController.js","controllers/DashboardController.js","controllers/LeagueController.js","controllers/PlayerController.js","controllers/UserController.js","factories/ChatFactory.js","factories/DraftFactory.js","factories/LeagueFactory.js","factories/UserFactory.js","services/AuthenticationService.js","services/DraftService.js","services/LeagueService.js"],"names":["DraftApp","angular","module","$stateProvider","$urlRouterProvider","otherwise","config","state","url","content","templateProvider","$templateCache","controller","views","header","get","controllerAs","authenticate","onStart","AuthService","injector","run","$transitions","$location","$state","AuthenticationService","to","trans","isLoggedIn","transitionTo","$scope","$q","DraftService","LeagueService","vm","this","currentUser","currentLeague","appViewChange","view","path","setCurrentLeague","leagueId","setCurrentLeagueId","then","getLeague","reload","error","console","log","setColor","league","_id","font-weight","deleteAllDBs","deleteAllPlayers","deleteAllUsers","deleteAllChat","deleteAllDrafts","downloadPlayers","data","deleteAllLeagues","currentUserLogOut","directive","element","attrs","bind","event","which","$apply","$eval","ngEnter","preventDefault","ChatFactory","messages","message","filterText","socket","io","connect","on","reverse","unshift","sendMessage","postMessage","result","err","window","alert","$view","$confirm","allLeagues","createNewLeagueView","findLeagueView","createNewLeague","newLeagueInfo","leagueName","newLeague","leagueSize","user_id","joinLeague","callback","$timeout","DraftFactory","available_players","allDraftedPlayers","setColorOnClock","team","onClock","getPlayers","position","startDraft","id","draftPackage","draftId","draft","draftOrder","response","draftPlayer","isOnClock","pick","checkBox","value","getDraftedPlayers","loginView","registerView","tab","setTab","tabId","isSet","userViewChange","registerInfo","email","userName","firstName","password","loginInfo","registerNew","register","login","status","dismissError","factory","$http","post","success","params","output","createLeague","getAllLeagues","user","patch","token","getUserLeague","service","$window","$rootScope","UserFactory","saveToken","localStorage","getToken","payload","split","atob","JSON","parse","exp","Date","now","leagues","updateToken","resolve","removeItem","clear","$new","reponse","statusText","undraftedPlayers","draftedPlayers","LeagueFactory","saveCurrentLeagueId","currentLeagueId","saveCurrentLeague","setItem","stringify","getItem","when","getCurrentLeagueId","theLeague","userId","updatedCurrentUser","undefined","x","y","splice","chatMessage","chat"],"mappings":"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","file":"app.js","sourcesContent":["let DraftApp = angular.module(\"DraftApp\", [\"ngRoute\", \"ngMessages\", \"ngAnimate\", \"ui.router\", \"ui.bootstrap\", \"angular-confirm\", \"AppController\", \"AuthenticationService\", \"ChatController\", \"DashboardController\", \"DraftService\", \"LeagueController\", \"LeagueService\", \"PlayerController\", \"UserController\", \"ChatFactory\", \"DraftFactory\", \"LeagueFactory\", \"UserFactory\"]);\n\nangular.module('DraftApp').config(function($stateProvider, $urlRouterProvider){\n    \n    $urlRouterProvider.otherwise(\"/\");\n\n    $stateProvider\n        .state(\"index\", {\n            url: \"/\",\n            views: {\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('welcome.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        })\n        .state(\"login\", {\n            url:\"/login\",\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: \"vm\",\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('login.html');\n                    },\n                    controller: \"UserController\",\n                    controllerAs: \"vm\"\n                },\n            }\n        })\n        .state('register', {\n            url: \"/register\",\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: 'vm'\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('register.html');\n                    },\n                    controller: \"UserController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        })\n        .state(\"dashboard\", {\n            url: \"/dashboard\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: 'vm',\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('dashboard.html');\n                    },\n                    controller: \"UserController\",\n                    controllerAs: \"vm\",\n                }\n            }\n        })\n        .state('newLeague', {\n            url: \"/league/new\",\n            authenticate: true,\n            views: {\n                'header': {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: 'vm'\n                },\n                'content': {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('league/newLeague.html');\n                    },\n                    controller: \"LeagueController\",\n                    controllerAs: \"vm\",\n                }\n            }\n        })\n        .state(\"settings\", {\n            url: \"/settings\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: 'vm',\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('settings.html');\n                    },\n                    controller: \"UserController\",\n                    controllerAs: \"vm\",\n                }\n            }\n        })\n        .state(\"commish\", {\n            url: \"/commish\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: \"vm\"\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('commish.html');\n                    },\n                    controller: \"LeagueController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        })\n        .state(\"availablePlayers\", {\n            url: \"/availablePlayers\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: \"vm\",\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('availablePlayers.html');\n                    },\n                    controller: \"PlayerController\",\n                    controllerAs: \"vm\",\n                }\n            }\n        })\n        .state(\"draftboard\", {\n            url: \"/draftboard\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: \"vm\"\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('draftBoard.html');\n                    },\n                    controller: \"PlayerController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        })\n        .state(\"chat\", {\n            url: \"/chat\",\n            authenticate: true,\n            views: {\n                \"header\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('app.html');\n                    },\n                    controller: \"AppController\",\n                    controllerAs: \"vm\"\n                },\n                \"content\": {\n                    templateProvider: ($templateCache) => {\n                        return $templateCache.get('chat.html');\n                    },\n                    controller: \"ChatController\",\n                    controllerAs: \"vm\"\n                }\n            }\n        });\n});\n\nangular.module('DraftApp').run(function ($transitions, $location, $state, AuthenticationService) {\n    $transitions.onStart({to: '*'}, function (trans) {\n        let AuthService = trans.injector().get('AuthenticationService');\n        if (trans.to().authenticate && !AuthService.isLoggedIn()) {\n            $state.transitionTo('login');\n        }\n    });\n});\n\n// DraftApp.run(function ($templateCache) {\n    \n// });","angular.module('AppController', []).controller('AppController', function ($scope, $location, $q, $state, AuthenticationService, DraftService, LeagueService) {\n\n    var vm = this;\n\n    vm.isLoggedIn = AuthenticationService.isLoggedIn();\n\n    vm.currentUser = AuthenticationService.currentUser();\n\n    vm.currentLeague = LeagueService.currentLeague();\n\n    //Changes Views\n    vm.appViewChange = function(view){\n      if(vm.isLoggedIn === true){\n        if(view == \"/availablePlayers\" | view == \"/draftBoard\" | \"/chat\"){\n          $location.path(view);\n        }\n        else{\n          $location.path(view);\n        }  \n      }\n      else{\n        $location.path(\"/login\");\n      }\n    };\n\n    //Sets A League and Returns League Info\n    vm.setCurrentLeague = function(leagueId){\n      return LeagueService.setCurrentLeagueId(leagueId)\n        .then(function(){\n          return LeagueService.getLeague()\n            .then(function(){\n              $state.reload();\n            }, function(error){\n              console.log(error);\n            });\n        }, function(error){\n          console.log(error);\n        });\n    };\n\n    //Sets Current League To Bold\n    vm.setColor = function(league){\n      var currentLeague = LeagueService.currentLeague();\n      if(currentLeague._id === league._id){\n        return {\"font-weight\": \"bold\"};\n      }\n    };\n\n    //Dev Tools (Not For Production)\n    vm.deleteAllDBs = function(){\n      DraftService.deleteAllPlayers();\n      AuthenticationService.deleteAllUsers();\n      LeagueService.deleteAllChat();\n      DraftService.deleteAllDrafts();\n    };\n  \n    vm.downloadPlayers = function(){\n      DraftService.downloadPlayers(function(data){\n        console.log(data);\n      });\n    };\n  \n    vm.deleteAllPlayers = function(){\n      DraftService.deleteAllPlayers(function(data){\n        console.log(data);\n      });\n    };\n  \n    vm.deleteAllUsers = function(){\n      AuthenticationService.deleteAllUsers();\n      $location.path(\"/login\");\n    };\n  \n    vm.deleteAllChat = function(){\n      LeagueService.deleteAllChat();\n    };\n  \n    vm.deleteAllLeagues = function(){\n      LeagueService.deleteAllLeagues();\n    };\n  \n    vm.deleteAllDrafts = function(){\n      DraftService.deleteAllDrafts();\n    };\n  \n    vm.currentUserLogOut = function(){\n      AuthenticationService.currentUserLogOut();\n    };\n  \n});","angular.module('ngEnter', []).directive('ngEnter', function ($scope, element, attrs) {\n\n    element.bind(\"keypress\", function (event) {\n        if (event.which === 13) {\n            $scope.$apply(function () {\n                $scope.$eval(attrs.ngEnter);\n            });\n            event.preventDefault();\n        }\n    });\n});\n\nangular.module('ChatController', []).controller('ChatController', function ($scope, AuthenticationService, LeagueService, ChatFactory) {\n\n    var vm = this;\n\n    vm.currentUser = AuthenticationService.currentUser();\n\n    vm.currentLeague = LeagueService.currentLeague();\n\n    vm.messages = [];\n\n    vm.message = \"\";\n    vm.filterText = \"\";\n\n    \n    var socket = io.connect();\n\n    socket.on(\"pastMessages\", function (data) {\n        $scope.$apply(function(){\n            vm.messages = data.reverse();\n        });\n    });\n\n    socket.on(\"receiveMessage\", function(data){\n        $scope.$apply(function(){\n            vm.messages.unshift(data);\n        });\n    });\n\n    vm.sendMessage = function () {\n        // var chatMessage = {\n        //     \"_id\": vm.currentLeague.chat._id,\n        //     \"userName\": vm.currentUser.firstName,\n        //     \"message\": vm.message\n        // };\n        LeagueService.postMessage(vm.message, function (result, err) {\n            if (err) {\n                window.alert(\"Error!\");\n            }\n            // else{\n            //     socket.emit(\"receiveMessage\", result);\n            //     vm.message = \"\";\n            // }\n        });\n    };\n});","angular.module('DashboardController', []).controller('DashboardController', function ($scope, $view, $location, $state) {\n    let vm = this;\n\n    // vm.currentUser = AuthenticationService.currentUser();\n\n    // vm.allLeagues = LeagueService.getAllLeagues();\n\n    \n});","angular.module('LeagueController', []).controller('LeagueController', function ($scope, $q, $confirm, $location, AuthenticationService, LeagueService) {\n    \n    var vm = this;\n\n    vm.allLeagues = [];\n\n    vm.currentUser = AuthenticationService.currentUser();\n\n    vm.currentLeague = LeagueService.currentLeague();\n\n    vm.createNewLeagueView = false;\n    vm.findLeagueView = false;\n\n    // var getAllLeagues = function(){\n    //     return LeagueService.getAllLeagues()\n    //         .then(function(leagues){\n    //             vm.allLeagues = leagues;\n    //         }, function(error){\n    //             console.log(error);\n    //         });\n    // };\n\n    // var getUserLeague = function(id){\n    //     LeagueService.getUserLeague(id, function(league){\n    //     });\n    // };\n\n    // vm.leagueViewChange = function(view){\n    //     if(view === \"createNew\"){\n    //         vm.createNewLeagueView = true;\n    //         vm.findLeagueView = false;\n    //     }\n    //     if(view === \"findLeague\"){\n    //         return getAllLeagues()\n    //             .then(function(){\n    //                 vm.findLeagueView = true;\n    //                 vm.createNewLeagueView = false;\n    //             }, function(error){\n    //                 console.log(error);\n    //             });\n            \n            \n    //     }\n    // };\n\n    vm.createNewLeague = function(){\n        var newLeagueInfo = {\n            \"leagueName\": vm.newLeague.leagueName,\n            \"leagueSize\": vm.newLeague.leagueSize,\n            \"user_id\": vm.currentUser._id\n        };\n        LeagueService.createNewLeague(newLeagueInfo);\n    };\n\n    vm.joinLeague = function(leagueId, callback){\n        // LeagueService.joinLeague(leagueId, function(status){\n        //     if(status == \"Success\"){\n        //         console.log(\"Success!\");\n        //     }\n        //     else{\n        //         console.log(\"Error\");\n        //     }\n        // });\n    };\n\n});","angular.module('PlayerController', []).controller('PlayerController', function ($scope, $location, $confirm, $timeout, $q, DraftFactory, AuthenticationService, DraftService, LeagueService) {\n\n  var vm = this;\n\n  vm.available_players = [];\n\n  vm.allDraftedPlayers = [];\n\n  vm.message = \"\";\n\n  vm.currentUser = AuthenticationService.currentUser();\n\n  vm.currentLeague = LeagueService.currentLeague();\n\n  vm.setColorOnClock = function(team){\n      if(vm.currentLeague.onClock === team._id){\n        return {\"font-weight\": \"bold\"};\n      }\n  };\n\n  vm.getPlayers = function (position) {\n    DraftFactory.getPlayers(position, function (data) {\n      vm.available_players = data;\n    });\n  };\n\n  vm.startDraft = function(id){\n    var draftPackage = {\n      draftId: vm.currentLeague.draft._id,\n      draftOrder: vm.currentLeague.draftOrder\n\n    };\n    return DraftService.startDraft(draftPackage)\n      .then(function(response){\n        console.log(response);\n      }, function(error){\n        console.log(error);\n      });\n  };\n\n  vm.draftPlayer = function (id) {\n    if(DraftService.isOnClock() === true){\n\n      var draftPackage = {\n        draftId: vm.currentLeague.draft._id,\n        leagueId: vm.currentLeague._id,\n        team: vm.currentUser._id,\n        pick: id,\n      };\n      \n      return DraftService.draftPlayer(draftPackage)\n        .then(function(response){\n          console.log(response);\n          if(response === true){\n            $location.path(\"/draftBoard\");\n          }\n          if(response === false){\n            console.log(\"Error in PlayerControiller draftPlayer\");\n          }\n        }, function(error){\n          console.log(error);\n        });\n    }\n    if(DraftService.isOnClock() === false){\n      vm.message = \"You Are Not On The Clock!\";\n      vm.checkBox.value = false;\n      $timeout(function(){\n        vm.message = false;\n      }, 5000);\n    }\n  };\n\n  var getDraftedPlayers = function () {\n    DraftFactory.getDraftedPlayers(function (data) {\n      vm.allDraftedPlayers = data;\n    });\n  };\n  getDraftedPlayers();\n});\n","angular.module('UserController', []).controller('UserController', function($scope, $q, $view, $location, $state, AuthenticationService, LeagueService){\n    var vm = this;\n\n    vm.currentUser = AuthenticationService.currentUser();\n\n    vm.currentLeague = LeagueService.currentLeague();\n\n    vm.message = \"\";\n\n    vm.loginView = true;\n    vm.registerView = false;\n\n    vm.tab = 1;\n\n    vm.setTab = function (tabId) {\n        vm.tab = tabId;\n    };\n\n    vm.isSet = function (tabId) {\n        return vm.tab === tabId;\n    };\n\n    vm.userViewChange = function(view){\n        if(view === true){\n            vm.loginView = false;\n            vm.registerView = true;\n        }\n        else{\n            vm.loginView = true;\n            vm.registerView = false;\n        }\n    };\n\n    vm.registerInfo = {\n        email: \"\",\n        userName: \"\",\n        firstName: \"\",\n        password: \"\"\n    };\n\n    vm.loginInfo = {\n        email: \"\",\n        password: \"\"\n    };\n\n    vm.registerNew = function(){\n        AuthenticationService.register(vm.registerInfo, function(data){\n            if(data === \"Success\"){\n                $location.path(\"/dashboard\");\n            }\n            else{\n                vm.message = data;\n            }     \n        });\n    };\n\n    vm.login = function(){\n       return AuthenticationService.login(vm.loginInfo)\n           .then(function (response) {\n               if (response == \"Success\") {\n                   $location.path('/dashboard');\n                    // let theUser = AuthenticationService.currentUser();\n                    // if(theUser.leagues[0] === undefined){\n                    //     $location.path(\"/commish\");\n                    // }\n                    // else{\n                    //     $q.when(LeagueService.setCurrentLeagueId(theUser.leagues[0]._id))\n                    //         .then(function(){\n                    //             return LeagueService.getLeague()\n                    //                 .then(function(response){\n                    //                     $location.path(\"/availablePlayers\");\n                    //                 }, function(error){\n                    //                     console.log(error);\n                    //                 });\n                    //         }, function(error){\n                    //             console.log(error);\n                    //         });\n                    // }             \n                }\n                else{\n                    vm.message = response;\n                    console.log(response);\n                }\n           }, function (error) {\n               vm.message = \"Error: \" + error.status;\n                console.log(error);\n            });\n    };\n\n    function onSignIn(googleUser){\n        console.log(\"Fired onSign In\");\n        if(googleUser){\n            var profile = googleUser.getBasicProfile();\n            console.log(\"Email: \" + profile.getEmail());\n        }\n    };\n    vm.dismissError = ()=>{\n        console.log(\"Dismiss\");\n        vm.message = \"\";\n    }\n\n});\n\n","angular.module(\"ChatFactory\", []).factory(\"ChatFactory\", function($http){\n\n    var factory = {};\n\n    factory.postMessage = function(message, callback){\n        $http.post(\"/message\", message).success(function(data, status){\n            callback(data, false);\n        })\n        .error(function(data, status){\n            callback(data, true);\n        });\n    };\n\n    factory.deleteAllChat = function(){\n        $http.post(\"/deleteAllChat\").success(function(data){\n            console.log(data);\n        });\n    };\n\n    return factory;\n});","angular.module(\"DraftFactory\", []).factory(\"DraftFactory\", function($http, $q){\n    var factory = {};\n\n    factory.downloadPlayers = function(){\n        $http.post(\"/downloadPlayers\").success(function(data){\n            console.log(data);\n        });\n    };\n\n    factory.getPlayers = function(position, callback){\n        $http.get(\"/getPlayers/\", {params: {position: position}}).success(function(output){\n            callback(output);\n        });\n    };\n\n    factory.deleteAllPlayers = function(callback){\n        $http.post(\"/deleteAllPlayers\").success(function(data){\n            callback(data);\n        });\n    };\n\n    factory.startDraft = function(draftPackage){\n        return $http.post(\"/startDraft\", draftPackage)\n            .then(function(response){\n                console.log(response);\n            }, function(error){\n                console.log(error);\n            });\n    };\n\n    factory.draftPlayer = function(draftPackage){\n        return $http.post(\"/draftPlayer\", draftPackage)\n            .then(function(response){\n                return response;\n            }, function(error){\n                console.log(error);\n            });\n    };\n\n    factory.getDraftedPlayers = function(callback){\n        $http.get(\"/getDraftedPlayers\").success(function(output){\n            callback(output);\n        });\n    };\n\n    factory.deleteAllDrafts = function(){\n        return $http.post(\"/deleteAllDrafts\");\n    };\n\n    return factory;\n});","angular.module(\"LeagueFactory\", []).factory(\"LeagueFactory\", function($http){\n    var factory = {};\n\n    factory.createLeague = function (newLeagueInfo) {\n        return $http.post(\"/createLeague\", newLeagueInfo)\n            .then(function(response){\n                console.log(response);\n                return response;\n            }, function(error){\n                console.log(error);\n                return error;\n            });\n    };\n\n    factory.getLeague = function(leagueId){\n        return $http.get(\"/getLeague/\", {params: {_id: leagueId}})\n            .then(function(data){\n                return data;\n            }, function(error){\n                console.log(error);\n            });\n    };\n\n    factory.getAllLeagues = function(){\n        return $http.get(\"/getAllLeagues\")\n            .then(function(response){\n                return response.data;\n            }, function(error){\n                console.log(error);\n            });\n    };\n\n    factory.joinLeague = function(user){\n        return $http.patch(\"/joinLeague/\", user)\n            .then(function(response){\n                return response.data.token;\n            }, function(error){\n                console.log(error);\n            });\n    };\n\n    factory.deleteAllLeagues = function(){\n        return $http.post(\"/leaguesClearAll\")\n            .then(function(response){\n            }, function(error){\n                console.log(error);\n            });\n        // .success(function(data){\n        //     console.log(data);\n        // });\n    };\n\n    return factory;\n});","angular.module('UserFactory', []).factory('UserFactory', function ($http, $q) {\n  var factory = {};\n\n  factory.register = function (registerInfo, callback) {\n    $http.post(\"/register\", registerInfo)\n      .success(function (data) {\n      callback(data);\n      }, (error) => {\n        console.log(error);\n    });\n  };\n\n  factory.login = function (loginInfo) {\n    return $http.post(\"/login\", loginInfo)\n      .then(function (response) {\n        return response;\n      }, (error) => {\n        return error;\n      });\n  };\n\n  factory.deleteAllUsers = function (callback) {\n    $http.post(\"/deleteAllUsers\").success(function (data) {\n      console.log(data);\n      callback(data);\n    });\n  };\n\n  factory.getUserLeague = function (callback) {\n    $http.get(\"/getUserLeagues\").success(function (data) {\n      console.log(data);\n      callback(data);\n    });\n  };\n\n  return factory;\n});","angular.module('AuthenticationService', []).service('AuthenticationService', function ($window, $state, $rootScope, $location, $q, UserFactory) {\n  var service = {};\n\n  var saveToken = function (token) {\n    $window.localStorage['user-token'] = token;\n  };\n\n  var getToken = function () {\n    return $window.localStorage['user-token'];\n  };\n\n  service.isLoggedIn = function () {\n    var token = getToken();\n    var payload;\n\n    if (token) {\n      payload = token.split('.')[1];\n      payload = $window.atob(payload);\n      payload = JSON.parse(payload);\n\n      return payload.exp > Date.now() / 1000;\n    }else {\n      return false;\n    }\n  };\n\n  service.currentUser = function () {\n    if (service.isLoggedIn()) {\n      var token = getToken();\n      var payload = token.split('.')[1];\n\n      payload = $window.atob(payload);\n      payload = JSON.parse(payload);\n\n      return {\n        _id: payload._id,\n        userName: payload.userName,\n        firstName: payload.firstName,\n        email: payload.email,\n        leagues: payload.leagues\n      };\n    }\n  };\n\n  service.updateToken = function (token) {\n    $q.resolve($window.localStorage.removeItem('user-token'))\n      .then(function(){\n        saveToken(token);\n        return \"Done\";\n      }, function(error){\n        console.log(error);\n      });\n  };\n\n  service.register = function (user, callback) {\n    UserFactory.register(user, function (data) {\n      if (data.token) {\n        saveToken(data.token);\n        callback('Success');\n      }\n      if (data.message) {\n        callback(data.message);\n      }else {\n        callback('Unknown Error!');\n      }\n    });\n  };\n\n  service.login = function (user) {\n    return UserFactory.login(user)\n      .then(function (response) {\n        if (response.data.token) {\n          saveToken(response.data.token);\n          return 'Success';\n        } else {\n          if (response.status == 401) {\n            return \"Incorrect Username or Password!\";\n          }\n          else {\n            return \"Unknown Error!\"\n          }\n        }\n      }, function (err) {\n        console.log(err);\n      });\n  };\n\n  service.currentUserLogOut = function () {\n    $window.localStorage.clear();\n    $rootScope = $rootScope.$new(true);\n    $location.path(\"/login\");\n    console.log(\"Logout\");\n  };\n\n  service.deleteAllUsers = function () {\n    UserFactory.deleteAllUsers();\n    $window.localStorage.clear();\n    $rootScope = $rootScope.$new(true);\n    $location.path(\"/login\");\n  };\n  // service.currentUserLogOut();\n\n  return service;\n});\n","angular.module('DraftService', []).service('DraftService', function ($window, $state, $q, DraftFactory, AuthenticationService, LeagueService) {\n    var service = {};\n\n    var vm = this;\n\n    vm.currentUser = AuthenticationService.currentUser();\n\n    vm.isLoggedIn = AuthenticationService.isLoggedIn();\n\n    vm.currentLeague = LeagueService.currentLeague();\n\n    service.startDraft = function(draftPackage){\n        return DraftFactory.startDraft(draftPackage)\n            .then(function(reponse){\n                console.log(response);\n            }, function(error){\n                console.log(error);\n            });\n    };\n\n    service.isOnClock = function(){\n        if(vm.currentLeague.onClock === vm.currentUser._id){\n            return true;\n        }\n        else{\n            return false;\n        }\n    };\n\n    service.draftPlayer = function(draftPackage){\n        return DraftFactory.draftPlayer(draftPackage)\n            .then(function(response){\n                if(response.statusText === \"OK\"){\n                    return true;\n                }\n                else{\n                    return false;\n                }\n            }, function(error){\n                console.log(error);\n            });\n    };\n\n    service.undraftedPlayers = function () {\n\n    };\n\n    service.draftedPlayers = function () {\n\n    };\n\n    service.downloadPlayers = function(){\n        DraftFactory.downloadPlayers();\n    };\n\n    service.deleteAllChat = function(){\n        ChatFactory.deleteAllChat();\n    };\n\n    service.deleteAllDrafts = function(){\n        DraftFactory.deleteAllDrafts();\n    };\n\n    service.deleteAllPlayers = function(callback){\n        DraftFactory.deleteAllPlayers(function(data){\n            callback(data);\n        });\n    };\n\n    return service;\n});","angular.module(\"LeagueService\", []).service(\"LeagueService\", function($window, $state, $q, $location, LeagueFactory, ChatFactory, AuthenticationService){\n    var service = {};\n\n    var vm = this;\n\n    vm.currentUser = AuthenticationService.currentUser();\n    vm.isLoggedIn = AuthenticationService.isLoggedIn();\n\n    var saveCurrentLeagueId = function(leagueId){\n        $q.resolve($window.localStorage[\"current-league-id\"] = leagueId);\n    };\n\n    var currentLeagueId = function(){\n        if($window.localStorage[\"current-league-id\"]){\n            return $window.localStorage[\"current-league-id\"];\n        }\n        else{\n            return false;\n        }\n    };\n\n    var saveCurrentLeague = function(league){\n        if($window.localStorage[\"current-league\"]){\n            $window.localStorage.removeItem(\"current-league\");\n            $window.localStorage.setItem(\"current-league\", JSON.stringify(league));\n        }\n        else{\n            $window.localStorage.setItem(\"current-league\", JSON.stringify(league));\n        }\n    };\n\n    service.currentLeague = function(){\n        var theLeague = JSON.parse($window.localStorage.getItem(\"current-league\"));\n        return theLeague;\n    };\n\n    service.setCurrentLeagueId = function(leagueId){\n        if(leagueId){\n            return $q.when(saveCurrentLeagueId(leagueId));\n        }\n    };\n\n    service.getCurrentLeagueId = function(){\n        if(currentLeagueId){\n            return currentLeagueId;\n        }\n    };\n\n    service.getLeague = function(){\n        var theLeague = currentLeagueId();\n        return LeagueFactory.getLeague(theLeague)\n            .then(function(response){\n                $q.resolve(saveCurrentLeague(response.data))\n                    .then(function(){\n                        return \"Done\";\n                    }, function(error){\n                        console.log(error);\n                    });\n            }, function(error){\n                console.log(error);\n            });\n    };\n\n    service.createNewLeague = function (newLeagueInfo) {\n        return LeagueFactory.createLeague(newLeagueInfo)\n            .then(function (response) {\n                console.log(response);\n                $q.when(AuthenticationService.updateToken(response.data.token))\n                    .then(function () {\n                        $state.transitionTo('dashboard');\n                        // currentUser = AuthenticationService.currentUser();\n                        // $q.when(service.setCurrentLeagueId(currentUser.leagues[0]._id))\n                        //     .then(function(){\n                        //         $q.when(service.getLeague())\n                        //             .then(function(response){\n                        //                 $location.path(\"/availablePlayers\");\n                        //                 return response;\n                        //             }, function(error){\n                        //                 console.log(error);\n                        //             });\n                        //     }, function(error){\n                        //         console.log(error);\n                        //     });\n                    }, function(error){\n                        console.log(error);\n                    });\n            }, function(error){\n                console.log(error);\n            });\n    };\n\n    service.joinLeague = function(leagueId){\n        currentUser = AuthenticationService.currentUser();\n        var user = {\n            \"userId\": currentUser._id,\n            \"leagueId\": leagueId\n        };\n        return LeagueFactory.joinLeague(user)\n            .then(function(updateToken){\n                $q.when(AuthenticationService.updateToken(updateToken))\n                    .then(function(){\n                        updatedCurrentUser = AuthenticationService.currentUser();\n                        $q.when(service.setCurrentLeagueId(updatedCurrentUser.leagues[0]._id))\n                            .then(function(){\n                                $q.when(service.getLeague())\n                                    .then(function(){\n                                        $location.path(\"/availablePlayers\");\n                                    }, function(error){\n                                        console.log(error);\n                                    });\n                            }, function(error){\n                                console.log(error);\n                            });\n                    }, function(error){\n                        console.log(error);\n                    });\n            }, function(error){\n                console.log(error);\n            });\n    };\n\n    service.getAllLeagues = function(){\n        currentUser = AuthenticationService.currentUser();\n        if(currentUser.leagues[0] === undefined){\n            return LeagueFactory.getAllLeagues()\n                .then(function(leagues){\n                    return leagues;\n                }, function(error){\n                    console.log(error);\n                });\n        }\n        else{\n            return LeagueFactory.getAllLeagues()\n                .then(function(leagues){\n                    for(var x in leagues){\n                        for(var y in currentUser.leagues){\n                            if(leagues[x]._id == currentUser.leagues[y]._id){\n                                leagues.splice(x, 1);\n                            }\n                        }\n                    }\n                    return leagues;\n                }, function(error){\n                    console.log(error);\n                });\n        }   \n    };\n\n    service.postMessage = function(message){\n        var theLeague = service.currentLeague();\n\n        var chatMessage = {\n            \"_id\": theLeague.chat._id,\n            \"userName\": vm.currentUser.firstName,\n            \"message\": message\n        };\n\n        ChatFactory.postMessage(chatMessage, function(result, err){\n            if(err){\n                console.log(err);\n            }\n            if(result){\n                console.log(result);\n            }\n        });\n    };\n\n    service.deleteAllLeagues = function () {\n        LeagueFactory.deleteAllLeagues();\n    };\n\n    service.deleteAllChat = function(){\n        ChatFactory.deleteAllChat();\n    };\n\n    return service;\n});"]}