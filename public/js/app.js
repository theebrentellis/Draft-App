"use strict";var DraftApp=angular.module("DraftApp",["ngRoute","ngMessages","ngAnimate","ui.router","ui.bootstrap","dndLists","angular-confirm","AppController","AuthenticationService","ChatController","DashboardController","DraftService","LeagueController","LeagueService","PlayerController","UserController","ChatFactory","DraftFactory","LeagueFactory","UserFactory"]);angular.module("DraftApp").config(["$stateProvider","$urlRouterProvider",function(e,t){t.otherwise("/"),e.state("index",{url:"/",views:{content:{templateProvider:["$templateCache",function(e){return e.get("welcome.html")}],controller:"AppController",controllerAs:"vm"}}}).state("login",{url:"/login",views:{header:{templateProvider:["$templateCache",function(e){return e.get("app.html")}],controller:"AppController",controllerAs:"vm"},content:{templateProvider:["$templateCache",function(e){return e.get("auth/login.html")}],controller:"UserController",controllerAs:"vm"}}}).state("register",{url:"/register",views:{header:{templateProvider:["$templateCache",function(e){return e.get("app.html")}],controller:"AppController",controllerAs:"vm"},content:{templateProvider:["$templateCache",function(e){return e.get("auth/register.html")}],controller:"UserController",controllerAs:"vm"}}}).state("dashboard",{url:"/dashboard",authenticate:!0,views:{header:{templateProvider:["$templateCache",function(e){return e.get("app.html")}],controller:"AppController",controllerAs:"vm"},content:{templateProvider:["$templateCache",function(e){return e.get("dashboard.html")}],controller:"DashboardController",controllerAs:"vm"}}}).state("newLeague",{url:"/league/new",authenticate:!0,views:{header:{templateProvider:["$templateCache",function(e){return e.get("app.html")}],controller:"AppController",controllerAs:"vm"},content:{templateProvider:["$templateCache",function(e){return e.get("league/league.new.html")}],controller:"LeagueController",controllerAs:"vm"}}}).state("joinLeague",{url:"/league/join",authenticate:!0,views:{header:{templateProvider:["$templateCache",function(e){return e.get("app.html")}],controller:"AppController",controllerAs:"vm"},content:{templateProvider:["$templateCache",function(e){return e.get("league/league.join.html")}],controller:"LeagueController",controllerAs:"vm"}}}).state("league",{url:"/league/:leagueID/index",authenticate:!0,views:{header:{templateProvider:["$templateCache",function(e){return e.get("app.html")}],controller:"AppController",controllerAs:"vm"},content:{templateProvider:["$templateCache",function(e){return e.get("league/league.index.html")}],controller:"LeagueController",controllerAs:"vm",resolve:{league:["LeagueService","$stateParams",function(e,t){return console.log("Start Resolve"),e.get()}]}}}}).state("leagueCommish",{url:"/league/:leagueID/commish",authenticate:!0,views:{header:{templateProvider:["$templateCache",function(e){return e.get("app.html")}],controller:"AppController",controllerAs:"vm"},content:{templateProvider:["$templateCache",function(e){return e.get("league/league.commish.html")}],controller:"LeagueController",controllerAs:"vm"}}}).state("settings",{url:"/settings",authenticate:!0,views:{header:{templateProvider:["$templateCache",function(e){return e.get("app.html")}],controller:"AppController",controllerAs:"vm"},content:{templateProvider:["$templateCache",function(e){return e.get("auth/settings.html")}],controller:"UserController",controllerAs:"vm"}}}).state("commish",{url:"/commish",authenticate:!0,views:{header:{templateProvider:["$templateCache",function(e){return e.get("app.html")}],controller:"AppController",controllerAs:"vm"},content:{templateProvider:["$templateCache",function(e){return e.get("commish.html")}],controller:"LeagueController",controllerAs:"vm"}}}).state("availablePlayers",{url:"/availablePlayers",authenticate:!0,views:{header:{templateProvider:["$templateCache",function(e){return e.get("app.html")}],controller:"AppController",controllerAs:"vm"},content:{templateProvider:["$templateCache",function(e){return e.get("availablePlayers.html")}],controller:"PlayerController",controllerAs:"vm"}}}).state("draftboard",{url:"/draftboard",authenticate:!0,views:{header:{templateProvider:["$templateCache",function(e){return e.get("app.html")}],controller:"AppController",controllerAs:"vm"},content:{templateProvider:["$templateCache",function(e){return e.get("draftBoard.html")}],controller:"PlayerController",controllerAs:"vm"}}}).state("chat",{url:"/chat",authenticate:!0,views:{header:{templateProvider:["$templateCache",function(e){return e.get("app.html")}],controller:"AppController",controllerAs:"vm"},content:{templateProvider:["$templateCache",function(e){return e.get("chat.html")}],controller:"ChatController",controllerAs:"vm"}}})}]),angular.module("DraftApp").run(["$transitions","$location","$state","$q","AuthenticationService",function(e,t,n,r,o){e.onStart({to:"*"},function(e){var t=e.injector().get("AuthenticationService");e.to().authenticate&&!t.isLoggedIn()&&n.transitionTo("login")})}]),angular.module("AppController",[]).controller("AppController",["$scope","$location","$q","$state","AuthenticationService","DraftService","LeagueService",function(e,t,n,r,o,a,l){var u=this;u.isLoggedIn=!1,o.isLoggedIn().then(function(e){1==e&&(u.isLoggedIn=!0),0==e&&(u.isLoggedIn=!1)},function(e){console.log(e)}),u.currentUser={},o.currentUser().then(function(e){u.currentUser=e},function(e){console.log(e)}),u.setCurrentLeague=function(e){return l.setCurrentLeagueId(e).then(function(){return l.getLeague().then(function(){r.reload()},function(e){console.log(e)})},function(e){console.log(e)})},u.deleteAllDBs=function(){a.deleteAllPlayers(),o.deleteAllUsers(),l.deleteAllChat(),a.deleteAllDrafts()},u.downloadPlayers=function(){a.downloadPlayers(function(e){console.log(e)})},u.deleteAllPlayers=function(){a.deleteAllPlayers(function(e){console.log(e)})},u.deleteAllUsers=function(){o.deleteAllUsers(),t.path("/login")},u.deleteAllChat=function(){l.deleteAllChat()},u.deleteAllLeagues=function(){l.deleteAllLeagues()},u.deleteAllDrafts=function(){a.deleteAllDrafts()},u.currentUserLogOut=function(){o.currentUserLogOut()}}]),angular.module("ngEnter",[]).directive("ngEnter",["$scope","element","attrs",function(e,t,n){t.bind("keypress",function(t){13===t.which&&(e.$apply(function(){e.$eval(n.ngEnter)}),t.preventDefault())})}]),angular.module("ChatController",[]).controller("ChatController",["$scope","AuthenticationService","LeagueService","ChatFactory",function(e,t,n,r){var o=this;o.currentUser=t.currentUser(),o.currentLeague=n.currentLeague(),o.messages=[],o.message="",o.filterText="";var a=io.connect();a.on("pastMessages",function(t){e.$apply(function(){o.messages=t.reverse()})}),a.on("receiveMessage",function(t){e.$apply(function(){o.messages.unshift(t)})}),o.sendMessage=function(){n.postMessage(o.message,function(e,t){t&&window.alert("Error!")})}}]),angular.module("DashboardController",[]).controller("DashboardController",["$scope","$q","$location","$view","$state","AuthenticationService",function(e,t,n,r,o,a){var l=this;l.currentUser={},a.currentUser().then(function(e){l.currentUser=e},function(e){console.log(e)})}]),angular.module("LeagueController",[]).controller("LeagueController",["$rootScope","$scope","$q","$view","$uibModal","$confirm","$location","$state","AuthenticationService","LeagueService",function(e,t,n,r,o,a,l,u,c,i){var s=this;s.message="",s.leagueAvailablePicks=!1,c.currentUser().then(function(e){return s.currentUser=e,e},function(e){console.log(e)}),s.league={},i.getLeague().then(function(e){s.league=e,g(e)},function(e){console.log(e)}),s.isCommish=function(e,t){var n=!1;return e&&t?(t.forEach(function(t){t==e&&(n=!0)}),n):n},s.leaguePickMaker=[];var g=function(e){e&&function(){for(var t={title:"Draft Order",teams:[]},n=e.size,r=e.teams,o=1;o<=n;o++)!function(e){var n={pick:e};r.forEach(function(t,o){t.pick==e&&(n=t,r.splice(o,1))}),t.teams.push(n)}(o);if(s.leaguePickMaker.push(t),r.length>0){var a={title:"Needs Pick",teams:[]};r.forEach(function(e){a.teams.push(e)}),s.leaguePickMaker.push(a)}}()};t.onDrop=function(e,t,n,r){n.splice(r,0,e[t]),e==n&&r<=t&&t++,e.splice(t,1);for(var o=0;o<n.length;o++)if(n[o]._id==this.team._id){var a=this.team;return f(a,o+1).then(function(){return!0},function(e){console.log(e)})}return!0};var f=function(e,t){var n={pick:t,team:e};return i.updateTeamPick(n).then(function(e){u.reload()},function(e){console.log(e)})};s.createNewLeague=function(){var e={leagueName:s.newLeague.leagueName,leagueSize:s.newLeague.leagueSize,user_id:s.currentUser._id};return i.createNewLeague(e).then(function(e){u.transitionTo("dashboard")},function(e){console.log(e)})},s.joinLeague=function(){var e="";for(var t in s.data)e+=s.data[t];var n={user_id:s.currentUser._id,league_code:e};return i.joinLeague(n).then(function(e){"League Joined"==e?u.transitionTo("dashboard"):s.message=e},function(e){console.log(e)})},s.moveFocus=function(e){$("#"+e).focus()},s.newMessage=function(){t.modalInstance=o.open({animation:!0,size:"lg",templateUrl:"newMessageModal.html",controller:"LeagueController",controllerAs:"vm",scope:t,backdrop:"static"})},s.sendMessage=function(){var e={leagueID:s.league._id,userID:s.currentUser._id,message:s.newLeagueMessage};return i.newLeagueMessage(e).then(function(e){console.log(e),"OK"==e.statusText&&u.reload(),console.log(e)},function(e){console.log(e)})},s.cancel=function(){t.modalInstance.dismiss("cancel")},s.dismissError=function(){s.message=""},s.startDraft=function(){console.log("Start Draft")}}]),angular.module("PlayerController",[]).controller("PlayerController",["$scope","$location","$confirm","$timeout","$q","DraftFactory","AuthenticationService","DraftService","LeagueService",function(e,t,n,r,o,a,l,u,c){var i=this;i.available_players=[],i.allDraftedPlayers=[],i.message="",i.currentUser=l.currentUser(),i.currentLeague=c.currentLeague(),i.setColorOnClock=function(e){if(i.currentLeague.onClock===e._id)return{"font-weight":"bold"}},i.getPlayers=function(e){a.getPlayers(e,function(e){i.available_players=e})},i.startDraft=function(e){var t={draftId:i.currentLeague.draft._id,draftOrder:i.currentLeague.draftOrder};return u.startDraft(t).then(function(e){console.log(e)},function(e){console.log(e)})},i.draftPlayer=function(e){if(!0===u.isOnClock()){var n={draftId:i.currentLeague.draft._id,leagueId:i.currentLeague._id,team:i.currentUser._id,pick:e};return u.draftPlayer(n).then(function(e){console.log(e),!0===e&&t.path("/draftBoard"),!1===e&&console.log("Error in PlayerControiller draftPlayer")},function(e){console.log(e)})}!1===u.isOnClock()&&(i.message="You Are Not On The Clock!",i.checkBox.value=!1,r(function(){i.message=!1},5e3))};a.getDraftedPlayers(function(e){i.allDraftedPlayers=e})}]),angular.module("UserController",[]).controller("UserController",["$scope","$q","$view","$location","$state","AuthenticationService","LeagueService",function(e,t,n,r,o,a,l){var u=this;u.currentUser={},a.currentUser().then(function(e){u.currentUser=e},function(e){console.log(e)}),u.currentLeague=l.league,u.message="",u.tab=1,u.setTab=function(e){u.tab=e},u.isSet=function(e){return u.tab===e},u.registerInfo={email:"",userName:"",firstName:"",password:""},u.loginInfo={email:"",password:""},u.registerNew=function(){return a.register(u.registerInfo).then(function(e){o.transitionTo("dashboard")},function(e){console.log(e)})},u.login=function(){return a.login(u.loginInfo).then(function(e){"Token Set!"==e?o.transitionTo("dashboard"):u.message=e},function(e){u.message="Error: "+e.status,console.log(e)})},u.onSignIn=function(e){if(console.log("Fired onSign In"),e){var t=e.getBasicProfile();console.log("Email: "+t.getEmail())}},u.dismissError=function(){u.message=""}}]),angular.module("ChatFactory",[]).factory("ChatFactory",["$http",function(e){var t={};return t.postMessage=function(t,n){e.post("/message",t).success(function(e,t){n(e,!1)}).error(function(e,t){n(e,!0)})},t.deleteAllChat=function(){e.post("/deleteAllChat").success(function(e){console.log(e)})},t}]),angular.module("DraftFactory",[]).factory("DraftFactory",["$http","$q",function(e,t){var n={};return n.downloadPlayers=function(){e.post("/downloadPlayers").success(function(e){console.log(e)})},n.getPlayers=function(t,n){e.get("/getPlayers/",{params:{position:t}}).success(function(e){n(e)})},n.deleteAllPlayers=function(t){e.post("/deleteAllPlayers").success(function(e){t(e)})},n.startDraft=function(t){return e.post("/startDraft",t).then(function(e){console.log(e)},function(e){console.log(e)})},n.draftPlayer=function(t){return e.post("/draftPlayer",t).then(function(e){return e},function(e){console.log(e)})},n.getDraftedPlayers=function(t){e.get("/getDraftedPlayers").success(function(e){t(e)})},n.deleteAllDrafts=function(){return e.post("/deleteAllDrafts")},n}]),angular.module("LeagueFactory",[]).factory("LeagueFactory",["$http","$stateParams",function(e,t){var n={};return n.createLeague=function(t){return e.post("/createLeague",t).then(function(e){return e},function(e){console.log(e)})},n.joinLeague=function(t){return e.patch("/joinLeague/",t).then(function(e){return e},function(e){console.log(e)})},n.getLeague=function(t){return e.get("/getLeague/",{params:{_id:t}}).then(function(e){return e},function(e){console.log(e)})},n.newLeagueMessage=function(t){return e.post("/league/newMessage",t).then(function(e){return e},function(e){console.log(e)})},n.updateTeamPick=function(n){return e.post("/league/"+t.leagueID,n).then(function(e){return e},function(e){console.log(e)})},n}]),angular.module("UserFactory",[]).factory("UserFactory",["$http","$q",function(e,t){var n={};return n.register=function(t){return e.post("/register",t).then(function(e){return e},function(e){console.log(e)})},n.login=function(t){return e.post("/login",t).then(function(e){return e},function(e){console.log(e)})},n}]),angular.module("AuthenticationService",[]).service("AuthenticationService",["$window","$state","$rootScope","$q","UserFactory",function(e,t,n,r,o){var a={},l={setToken:function(t,n){return Promise.resolve().then(function(){e.localStorage.setItem(t,n)})},getToken:function(t){return Promise.resolve().then(function(){return e.localStorage.getItem(t)})},removeToken:function(t){return Promise.resolve().then(function(){e.localStorage.removeItem(t)})}};return a.isLoggedIn=function(){return l.getToken("user-token").then(function(t){if(t){var n=t.split(".")[1];return n=e.atob(n),(n=JSON.parse(n)).exp>Date.now()/1e3}return!1},function(e){console.log(e)})},a.currentUser=function(){return a.isLoggedIn().then(function(t){if(t)return l.getToken("user-token").then(function(t){var n=t.split(".")[1];return n=e.atob(n),n=JSON.parse(n),{_id:n._id,userName:n.userName,firstName:n.firstName,email:n.email,leagues:n.leagues}},function(e){console.log(e)})},function(e){console.log(e)})},a.updateToken=function(e){return l.removeToken("user-token").then(function(){return l.setToken("user-token",e).then(function(){return"Token Set!"},function(e){console.log(e)})},function(e){console.log(e)})},a.register=function(e,t){return o.register(e).then(function(e){return e.data.token?l.setToken("user-token",e.data.token).then(function(){return"Token Set!"}):e.message?reponse.message:"Unknown Error"},function(e){console.log(e)})},a.login=function(e){return o.login(e).then(function(e){return e.data.token?l.setToken("user-token",e.data.token).then(function(){return"Token Set!"},function(e){console.log(e)}):401==e.status?"Incorrect Username or Password!":"Unknown Error!"},function(e){console.log(e)})},a.currentUserLogOut=function(){e.localStorage.clear(),n=n.$new(!0)},a}]),angular.module("DraftService",[]).service("DraftService",["$window","$state","$q","DraftFactory","AuthenticationService","LeagueService",function(e,t,n,r,o,a){var l={},u=this;return l.startDraft=function(e){return r.startDraft(e).then(function(e){console.log(response)},function(e){console.log(e)})},l.isOnClock=function(){return u.currentLeague.onClock===u.currentUser._id},l.draftPlayer=function(e){return r.draftPlayer(e).then(function(e){return"OK"===e.statusText},function(e){console.log(e)})},l.undraftedPlayers=function(){},l.draftedPlayers=function(){},l.downloadPlayers=function(){r.downloadPlayers()},l.deleteAllChat=function(){ChatFactory.deleteAllChat()},l.deleteAllDrafts=function(){r.deleteAllDrafts()},l.deleteAllPlayers=function(e){r.deleteAllPlayers(function(t){e(t)})},l}]),angular.module("LeagueService",[]).service("LeagueService",["$window","$state","$stateParams","$q","$location","LeagueFactory","ChatFactory","AuthenticationService",function(e,t,n,r,o,a,l,u){var c={},i=this;r.defer();i.currentUser={},u.currentUser().then(function(e){i.currentUser=e},function(e){console.log(e)});var s={};return c.getLeague=function(){return a.getLeague(n.leagueID).then(function(e){if(e.data)return s=e.data,e.data},function(e){console.log(e)})},c.draftPositions=function(){},c.createNewLeague=function(e){return a.createLeague(e).then(function(e){return u.updateToken(e.data.token).then(function(){t.transitionTo("dashboard")},function(e){console.log(e)})},function(e){console.log(e)})},c.joinLeague=function(e){return a.joinLeague(e).then(function(e){return e.data.token?u.updateToken(e.data.token).then(function(){return"League Joined"},function(e){console.log(e)}):e.data.message},function(e){console.log(e)})},c.newLeagueMessage=function(e){return a.newLeagueMessage(e).then(function(e){return e},function(e){console.log(e)})},c.updateTeamPick=function(e){return a.updateTeamPick(e).then(function(e){return e},function(e){console.log(e)})},c}]);
//# sourceMappingURL=app.js.map
